{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\MOBOMEDIA\\\\mobotcmsdemo\\\\Frontendtech\\\\reactnative\\\\story\\\\TechVlog\\\\Screens\\\\storycreate.js\";\n\nimport React, { useState, createRef } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Loader from \"./loader\";\n\nvar Storycreatescreen = function Storycreatescreen(props) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      title = _useState2[0],\n      settitle = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      storypara = _useState4[0],\n      setstorypara = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      errortext = _useState6[0],\n      setErrortext = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isRegistraionSuccess = _useState8[0],\n      setIsRegistraionSuccess = _useState8[1];\n\n  var titleInputRef = createRef();\n  var storyparaInputRef = createRef();\n\n  var handleSubmitButton = function handleSubmitButton() {\n    setErrortext('');\n\n    if (!title) {\n      alert('Please fill Age');\n      return;\n    }\n\n    if (!storypara) {\n      alert('Please fill Address');\n      return;\n    }\n\n    var url = 'http://192.168.1.4:8000/api/createaccount';\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        title: title,\n        storypara: storypara\n      })\n    }).then(function (response) {\n      return response.json();\n    }).then(function (responseJson) {\n      console.log(responseJson);\n\n      if (responseJson.message === 'success') {\n        setIsRegistraionSuccess(true);\n        console.log('Story created  Successful...');\n      } else {\n        setErrortext(responseJson.msg);\n      }\n    }).catch(function (error) {\n      console.error(error);\n    });\n  };\n\n  if (isRegistraionSuccess) {\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        backgroundColor: '#307ecc',\n        justifyContent: 'center'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, React.createElement(Image, {\n      style: {\n        height: 150,\n        resizeMode: 'contain',\n        alignSelf: 'center'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }), React.createElement(Text, {\n      style: styles.successTextStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }, \"Story posted successful\"), React.createElement(TouchableOpacity, {\n      style: styles.buttonStyle,\n      activeOpacity: 0.5,\n      onPress: function onPress() {\n        return props.navigation.navigate('LoginScreen');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: styles.buttonTextStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }\n    }, \"View  Now\")));\n  }\n\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, React.createElement(ScrollView, {\n    keyboardShouldPersistTaps: \"handled\",\n    contentContainerStyle: {\n      justifyContent: 'center',\n      alignContent: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, React.createElement(KeyboardAvoidingView, {\n    enabled: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: styles.SectionStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 21\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputStyle,\n    onChangeText: function onChangeText(title) {\n      return settitle(title);\n    },\n    underlineColorAndroid: \"#f000\",\n    placeholder: \"Enter Title of your story\",\n    placeholderTextColor: \"#8b9cb5\",\n    ref: titleInputRef,\n    returnKeyType: \"next\",\n    secureTextEntry: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 25\n    }\n  })), React.createElement(View, {\n    style: styles.SectionStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 21\n    }\n  }, React.createElement(TextInput, {\n    multiline: true,\n    textStyle: {\n      minHeight: 128\n    },\n    numberOfLines: 5,\n    onChangeText: function onChangeText(storypara) {\n      return set(storypara);\n    },\n    underlineColorAndroid: \"#f000\",\n    placeholder: \"Write your story content here...\",\n    placeholderTextColor: \"#8b9cb5\",\n    autoCapitalize: \"sentences\",\n    ref: storyparaInputRef,\n    returnKeyType: \"next\",\n    blurOnSubmit: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 25\n    }\n  })), errortext != '' ? React.createElement(Text, {\n    style: styles.errorTextStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 25\n    }\n  }, errortext) : null, React.createElement(TouchableOpacity, {\n    style: styles.buttonStyle,\n    activeOpacity: 0.5,\n    onPress: handleSubmitButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonTextStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 25\n    }\n  }, \"Post Now\")))));\n};\n\nexport default Storycreatescreen;\nvar styles = StyleSheet.create({\n  SectionStyle: {\n    flexDirection: 'row',\n    height: 40,\n    marginTop: 25,\n    marginLeft: 35,\n    marginRight: 35\n  },\n  buttonStyle: {\n    backgroundColor: '#ff4f81',\n    borderWidth: 0,\n    color: '#FFFFFF',\n    borderColor: '#7DE24E',\n    height: 40,\n    alignItems: 'center',\n    borderRadius: 30,\n    marginLeft: 35,\n    marginRight: 35,\n    marginTop: 20,\n    marginBottom: 20\n  },\n  buttonTextStyle: {\n    color: '#FFFFFF',\n    paddingVertical: 10,\n    fontSize: 16\n  },\n  inputStyle: {\n    flex: 1,\n    color: 'white',\n    paddingLeft: 15,\n    paddingRight: 15,\n    borderWidth: 1,\n    borderRadius: 30,\n    borderColor: '#dadae8'\n  },\n  errorTextStyle: {\n    color: 'red',\n    textAlign: 'center',\n    fontSize: 14\n  },\n  successTextStyle: {\n    color: 'white',\n    textAlign: 'center',\n    fontSize: 18,\n    padding: 30\n  }\n});","map":{"version":3,"sources":["C:/Users/Admin/Desktop/MOBOMEDIA/mobotcmsdemo/Frontendtech/reactnative/story/TechVlog/Screens/storycreate.js"],"names":["React","useState","createRef","Loader","Storycreatescreen","props","title","settitle","storypara","setstorypara","errortext","setErrortext","isRegistraionSuccess","setIsRegistraionSuccess","titleInputRef","storyparaInputRef","handleSubmitButton","alert","url","fetch","method","headers","Accept","body","JSON","stringify","then","response","json","responseJson","console","log","message","msg","catch","error","flex","backgroundColor","justifyContent","height","resizeMode","alignSelf","styles","successTextStyle","buttonStyle","navigation","navigate","buttonTextStyle","alignContent","SectionStyle","inputStyle","minHeight","set","errorTextStyle","StyleSheet","create","flexDirection","marginTop","marginLeft","marginRight","borderWidth","color","borderColor","alignItems","borderRadius","marginBottom","paddingVertical","fontSize","paddingLeft","paddingRight","textAlign","padding"],"mappings":"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","sourcesContent":["import React, { useState, createRef } from 'react';\r\nimport {\r\n    StyleSheet,\r\n    TextInput,\r\n    View,\r\n    Text,\r\n    Image,\r\n    KeyboardAvoidingView,\r\n    Keyboard,\r\n    TouchableOpacity,\r\n    ScrollView,\r\n} from 'react-native';\r\n\r\nimport Loader from './loader';\r\n\r\nconst Storycreatescreen = (props) => {\r\n    // const [username, setusername] = useState('');\r\n    // const [useremail, setuseremail] = useState('');\r\n    const [title, settitle] = useState('');\r\n    const [storypara, setstorypara] = useState('');\r\n    // const [loading, setLoading] = useState(false);\r\n    const [errortext, setErrortext] = useState('');\r\n    const [\r\n        isRegistraionSuccess,\r\n        setIsRegistraionSuccess\r\n    ] = useState(false);\r\n\r\n    // const useremailInputRef = createRef();\r\n    // const usernameInputRef = createRef();\r\n    const titleInputRef = createRef();\r\n    const storyparaInputRef = createRef();\r\n\r\n    const handleSubmitButton = () => {\r\n        setErrortext('');\r\n        // if (!username) {\r\n        //     alert('Please fill Name');\r\n        //     return;\r\n        // }\r\n        // if (!useremail) {\r\n        //     alert('Please fill Email');\r\n        //     return;\r\n        // }\r\n        if (!title) {\r\n            alert('Please fill Age');\r\n            return;\r\n        }\r\n        if (!storypara) {\r\n            alert('Please fill Address');\r\n            return;\r\n        }\r\n        //Show Loader\r\n        // setLoading(true);\r\n        const url = 'http://192.168.1.4:8000/api/createaccount';\r\n        fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                // username: username,\r\n                // useremail: useremail,\r\n                title: title,\r\n                storypara: storypara,\r\n            })\r\n        })\r\n            .then((response) => response.json())\r\n            .then((responseJson) => {\r\n                //Hide Loader\r\n                // setLoading(false);\r\n                console.log(responseJson);\r\n                if (responseJson.message === 'success') {\r\n                    setIsRegistraionSuccess(true);\r\n                    console.log(\r\n                        'Story created  Successful...'\r\n                    );\r\n                } else {\r\n                    setErrortext(responseJson.msg);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                //Hide Loader\r\n                // setLoading(false);\r\n                console.error(error);\r\n            });\r\n    };\r\n    if (isRegistraionSuccess) {\r\n        return (\r\n            <View\r\n                style={{\r\n                    flex: 1,\r\n                    backgroundColor: '#307ecc',\r\n                    justifyContent: 'center',\r\n                }}>\r\n                <Image\r\n                    // source={require('../Image/success.png')}\r\n                    style={{\r\n                        height: 150,\r\n                        resizeMode: 'contain',\r\n                        alignSelf: 'center'\r\n                    }}\r\n                />\r\n                <Text style={styles.successTextStyle}>\r\n                    Story posted successful\r\n        </Text>\r\n                <TouchableOpacity\r\n                    style={styles.buttonStyle}\r\n                    activeOpacity={0.5}\r\n                    onPress={() => props.navigation.navigate('LoginScreen')}>\r\n                    <Text style={styles.buttonTextStyle}>View  Now</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        );\r\n    }\r\n    return (\r\n        <View style={{ flex: 1 }}>\r\n            {/* <Loader loading={loading} /> */}\r\n            <ScrollView\r\n                keyboardShouldPersistTaps=\"handled\"\r\n                contentContainerStyle={{\r\n                    justifyContent: 'center',\r\n                    alignContent: 'center',\r\n                }}>\r\n                {/* <View style={{ alignItems: 'center' }}>\r\n                    <Image\r\n                        // source={require('../Image/aboutreact.png')}\r\n                        style={{\r\n                            width: '50%',\r\n                            height: 100,\r\n                            resizeMode: 'contain',\r\n                            margin: 30,\r\n                        }}\r\n                    />\r\n                </View> */}\r\n                <KeyboardAvoidingView enabled>\r\n                    <View style={styles.SectionStyle}>\r\n                        <TextInput\r\n                            style={styles.inputStyle}\r\n                            onChangeText={(title) =>\r\n                                settitle(title)\r\n                            }\r\n                            underlineColorAndroid=\"#f000\"\r\n                            placeholder=\"Enter Title of your story\"\r\n                            placeholderTextColor=\"#8b9cb5\"\r\n                            ref={titleInputRef}\r\n                            returnKeyType=\"next\"\r\n                            secureTextEntry={true}\r\n                        />\r\n                    </View>\r\n                \r\n                    <View style={styles.SectionStyle}>\r\n                        <TextInput\r\n                            // style={styles.inputStyle}\r\n                            multiline={true}\r\n                            textStyle={{ minHeight: 128 }}\r\n                            numberOfLines={5}\r\n                            onChangeText={(storypara) =>\r\n                                set(storypara)\r\n                            }\r\n                            underlineColorAndroid=\"#f000\"\r\n                            placeholder=\"Write your story content here...\"\r\n                            placeholderTextColor=\"#8b9cb5\"\r\n                            autoCapitalize=\"sentences\"\r\n                            ref={storyparaInputRef}\r\n                            returnKeyType=\"next\"\r\n                            blurOnSubmit={false}\r\n                        />\r\n                    </View>\r\n                    {errortext != '' ? (\r\n                        <Text style={styles.errorTextStyle}>\r\n                            {errortext}\r\n                        </Text>\r\n                    ) : null}\r\n                    <TouchableOpacity\r\n                        style={styles.buttonStyle}\r\n                        activeOpacity={0.5}\r\n                        onPress={handleSubmitButton}>\r\n                        <Text style={styles.buttonTextStyle}>Post Now</Text>\r\n                    </TouchableOpacity>\r\n                </KeyboardAvoidingView>\r\n            </ScrollView>\r\n        </View>\r\n    );\r\n};\r\nexport default Storycreatescreen;\r\n\r\nconst styles = StyleSheet.create({\r\n    SectionStyle: {\r\n        flexDirection: 'row',\r\n        height: 40,\r\n        marginTop:25,\r\n        marginLeft: 35,\r\n        marginRight: 35,\r\n        // margin: 10,\r\n    },\r\n    buttonStyle: {\r\n        backgroundColor: '#ff4f81',\r\n        borderWidth: 0,\r\n        color: '#FFFFFF',\r\n        borderColor: '#7DE24E',\r\n        height: 40,\r\n        alignItems: 'center',\r\n        borderRadius: 30,\r\n        marginLeft: 35,\r\n        marginRight: 35,\r\n        marginTop: 20,\r\n        marginBottom: 20,\r\n    },\r\n    buttonTextStyle: {\r\n        color: '#FFFFFF',\r\n        paddingVertical: 10,\r\n        fontSize: 16,\r\n    },\r\n    inputStyle: {\r\n        flex: 1,\r\n        color: 'white',\r\n        paddingLeft: 15,\r\n        paddingRight: 15,\r\n        borderWidth: 1,\r\n        borderRadius: 30,\r\n        borderColor: '#dadae8',\r\n    },\r\n    errorTextStyle: {\r\n        color: 'red',\r\n        textAlign: 'center',\r\n        fontSize: 14,\r\n    },\r\n    successTextStyle: {\r\n        color: 'white',\r\n        textAlign: 'center',\r\n        fontSize: 18,\r\n        padding: 30,\r\n    },\r\n});"]},"metadata":{},"sourceType":"module"}