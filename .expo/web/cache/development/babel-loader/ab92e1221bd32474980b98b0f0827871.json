{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\MOBOMEDIA\\\\mobotcmsdemo\\\\Frontendtech\\\\reactnative\\\\story\\\\TechVlog\\\\Screens\\\\storycreate.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, useState } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport AsyncStorage from '@react-native-community/async-storage';\nimport Axios from 'axios';\n\nvar Storycreatescreen = function (_Component) {\n  _inherits(Storycreatescreen, _Component);\n\n  var _super = _createSuper(Storycreatescreen);\n\n  function Storycreatescreen(props) {\n    var _this;\n\n    _classCallCheck(this, Storycreatescreen);\n\n    _this = _super.call(this, props);\n\n    _this.getdata = function _callee() {\n      var users, userdatas, gettoken, getuserid, geturl, config;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('userdatas'));\n\n            case 3:\n              users = _context.sent;\n              userdatas = JSON.parse(users);\n              console.log(userdatas);\n\n              _this.setState({\n                data: userdatas\n              });\n\n              gettoken = _this.state.data.token;\n              getuserid = _this.state.data.userid;\n              console.log(gettoken);\n              geturl = 'http://192.168.1.4:8000/api/getuserdetails/';\n              config = {\n                headers: {\n                  'content-type': 'multipart/form-data',\n                  'Authorization': 'Bearer ' + gettoken,\n                  'Accept': 'application/json'\n                }\n              };\n              Axios.get(geturl + getuserid, config).then(function (response) {\n                _this.setState({\n                  profiles: response.data.profile\n                });\n              }).catch(function (error) {\n                console.log(error);\n              });\n              _context.next = 18;\n              break;\n\n            case 15:\n              _context.prev = 15;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 15]], Promise);\n    };\n\n    _this.state = {\n      data: [],\n      profiles: [],\n      testdatas: ''\n    };\n    return _this;\n  }\n\n  _createClass(Storycreatescreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getdata();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(SafeAreaView, {\n        style: {\n          flex: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1,\n          backgroundColor: '#307ecc'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }\n      }, React.createElement(ScrollView, {\n        keyboardShouldPersistTaps: \"handled\",\n        contentContainerStyle: {\n          justifyContent: 'center',\n          alignContent: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        style: {\n          alignItems: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }\n      }, React.createElement(Image, {\n        style: {\n          width: '50%',\n          height: 100,\n          resizeMode: 'contain',\n          margin: 30\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 29\n        }\n      })), React.createElement(KeyboardAvoidingView, {\n        enabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }\n      }, React.createElement(View, {\n        style: styles.SectionStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 29\n        }\n      }, React.createElement(TextInput, {\n        style: styles.inputStyle,\n        underlineColorAndroid: \"#f000\",\n        placeholder: \"Enter Name\",\n        value: this.state.profiles.username,\n        placeholderTextColor: \"#8b9cb5\",\n        autoCapitalize: \"sentences\",\n        returnKeyType: \"next\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 33\n        }\n      })), React.createElement(View, {\n        style: styles.SectionStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 29\n        }\n      }, React.createElement(TextInput, {\n        style: styles.inputStyle,\n        onChangeText: function onChangeText(useremail) {\n          return setuseremail(useremail);\n        },\n        underlineColorAndroid: \"#f000\",\n        placeholder: \"Enter Email\",\n        placeholderTextColor: \"#8b9cb5\",\n        keyboardType: \"email-address\",\n        returnKeyType: \"next\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 33\n        }\n      })), React.createElement(View, {\n        style: styles.SectionStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 29\n        }\n      }, React.createElement(TextInput, {\n        style: styles.inputStyle,\n        onChangeText: function onChangeText(userage) {\n          return setuserage(userage);\n        },\n        underlineColorAndroid: \"#f000\",\n        placeholder: \"Enter Age\",\n        placeholderTextColor: \"#8b9cb5\",\n        keyboardType: \"numeric\",\n        returnKeyType: \"next\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 33\n        }\n      })), React.createElement(View, {\n        style: styles.SectionStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 29\n        }\n      }, React.createElement(TextInput, {\n        style: styles.inputStyle,\n        onChangeText: function onChangeText(useraddress) {\n          return setuseraddress(useraddress);\n        },\n        underlineColorAndroid: \"#f000\",\n        placeholder: \"Enter Address\",\n        placeholderTextColor: \"#8b9cb5\",\n        autoCapitalize: \"sentences\",\n        returnKeyType: \"next\",\n        blurOnSubmit: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 33\n        }\n      })), React.createElement(TouchableOpacity, {\n        style: styles.buttonStyle,\n        activeOpacity: 0.5,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, {\n        style: styles.buttonTextStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 33\n        }\n      }, \"REGISTER\"))))), \"            \");\n    }\n  }]);\n\n  return Storycreatescreen;\n}(Component);\n\nexport { Storycreatescreen as default };\nvar styles = StyleSheet.create({\n  SectionStyle: {\n    flexDirection: 'row',\n    height: 40,\n    marginTop: 20,\n    marginLeft: 35,\n    marginRight: 35,\n    margin: 10\n  },\n  buttonStyle: {\n    backgroundColor: '#7DE24E',\n    borderWidth: 0,\n    color: '#FFFFFF',\n    borderColor: '#7DE24E',\n    height: 40,\n    alignItems: 'center',\n    borderRadius: 30,\n    marginLeft: 35,\n    marginRight: 35,\n    marginTop: 20,\n    marginBottom: 20\n  },\n  buttonTextStyle: {\n    color: '#FFFFFF',\n    paddingVertical: 10,\n    fontSize: 16\n  },\n  inputStyle: {\n    flex: 1,\n    color: 'white',\n    paddingLeft: 15,\n    paddingRight: 15,\n    borderWidth: 1,\n    borderRadius: 30,\n    borderColor: '#dadae8'\n  },\n  errorTextStyle: {\n    color: 'red',\n    textAlign: 'center',\n    fontSize: 14\n  },\n  successTextStyle: {\n    color: 'white',\n    textAlign: 'center',\n    fontSize: 18,\n    padding: 30\n  }\n});","map":{"version":3,"sources":["C:/Users/Admin/Desktop/MOBOMEDIA/mobotcmsdemo/Frontendtech/reactnative/story/TechVlog/Screens/storycreate.js"],"names":["React","Component","useState","AsyncStorage","Axios","Storycreatescreen","props","getdata","getItem","users","userdatas","JSON","parse","console","log","setState","data","gettoken","state","token","getuserid","userid","geturl","config","headers","get","then","response","profiles","profile","catch","error","testdatas","flex","backgroundColor","justifyContent","alignContent","alignItems","width","height","resizeMode","margin","styles","SectionStyle","inputStyle","username","useremail","setuseremail","userage","setuserage","useraddress","setuseraddress","buttonStyle","buttonTextStyle","StyleSheet","create","flexDirection","marginTop","marginLeft","marginRight","borderWidth","color","borderColor","borderRadius","marginBottom","paddingVertical","fontSize","paddingLeft","paddingRight","errorTextStyle","textAlign","successTextStyle","padding"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react';\r\nimport {\r\n    SafeAreaView, StyleSheet,\r\n    TextInput,\r\n    View,\r\n    Text,\r\n    Image,\r\n    KeyboardAvoidingView,\r\n    Keyboard,\r\n    TouchableOpacity,\r\n    ScrollView\r\n} from 'react-native';\r\nimport AsyncStorage from '@react-native-community/async-storage';\r\nimport Axios from 'axios';\r\n\r\nexport default class Storycreatescreen extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            data: [],\r\n            profiles: [],\r\n            testdatas: ''\r\n        }\r\n    }\r\n    getdata = async () => {\r\n        try {\r\n            let users = await AsyncStorage.getItem('userdatas');\r\n            const userdatas = JSON.parse(users);\r\n            console.log(userdatas);\r\n            this.setState({ data: userdatas });\r\n            const gettoken = this.state.data.token;\r\n            const getuserid = this.state.data.userid;\r\n            console.log(gettoken);\r\n            const geturl = 'http://192.168.1.4:8000/api/getuserdetails/';\r\n            const config = {\r\n                headers: {\r\n                    'content-type': 'multipart/form-data',\r\n                    'Authorization': 'Bearer ' + gettoken,\r\n                    'Accept': 'application/json',\r\n                },\r\n\r\n            };\r\n            Axios.get(geturl + getuserid, config)\r\n                .then(response => {\r\n                    this.setState({ profiles: response.data.profile });\r\n                    // console.log(response.data.profile.useremail)\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n        } catch (e) {\r\n            // error reading value\r\n            console.log(e);\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        // setTimeout(() => {\r\n        //   this.setState({favoritecolor: \"yellow\"})\r\n        // alert('hello*********')\r\n        this.getdata();\r\n        // }, 1000)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <SafeAreaView style={{ flex: 1 }}>\r\n                <View style={{ flex: 1, backgroundColor: '#307ecc' }}>\r\n                    {/* <Loader loading={loading} /> */}\r\n                    <ScrollView\r\n                        keyboardShouldPersistTaps=\"handled\"\r\n                        contentContainerStyle={{\r\n                            justifyContent: 'center',\r\n                            alignContent: 'center',\r\n                        }}>\r\n                        <View style={{ alignItems: 'center' }}>\r\n                            <Image\r\n                                // source={require('../Image/aboutreact.png')}\r\n                                style={{\r\n                                    width: '50%',\r\n                                    height: 100,\r\n                                    resizeMode: 'contain',\r\n                                    margin: 30,\r\n                                }}\r\n                            />\r\n                        </View>\r\n                        <KeyboardAvoidingView enabled>\r\n                            <View style={styles.SectionStyle}>\r\n                                <TextInput\r\n                                    style={styles.inputStyle}\r\n                                    underlineColorAndroid=\"#f000\"\r\n                                    placeholder=\"Enter Name\"\r\n                                    value={this.state.profiles.username}\r\n                                    placeholderTextColor=\"#8b9cb5\"\r\n                                    autoCapitalize=\"sentences\"\r\n                                    returnKeyType=\"next\"\r\n                                />\r\n                            </View>\r\n                            <View style={styles.SectionStyle}>\r\n                                <TextInput\r\n                                    style={styles.inputStyle}\r\n                                    onChangeText={(useremail) => setuseremail(useremail)}\r\n                                    underlineColorAndroid=\"#f000\"\r\n                                    placeholder=\"Enter Email\"\r\n                                    placeholderTextColor=\"#8b9cb5\"\r\n                                    keyboardType=\"email-address\"\r\n                                    returnKeyType=\"next\"\r\n                                />\r\n                            </View>\r\n                            <View style={styles.SectionStyle}>\r\n                                <TextInput\r\n                                    style={styles.inputStyle}\r\n                                    onChangeText={(userage) => setuserage(userage)}\r\n                                    underlineColorAndroid=\"#f000\"\r\n                                    placeholder=\"Enter Age\"\r\n                                    placeholderTextColor=\"#8b9cb5\"\r\n                                    keyboardType=\"numeric\"\r\n                                    returnKeyType=\"next\"\r\n                                />\r\n                            </View>\r\n                            <View style={styles.SectionStyle}>\r\n                                <TextInput\r\n                                    style={styles.inputStyle}\r\n                                    onChangeText={(useraddress) =>\r\n                                        setuseraddress(useraddress)\r\n                                    }\r\n                                    underlineColorAndroid=\"#f000\"\r\n                                    placeholder=\"Enter Address\"\r\n                                    placeholderTextColor=\"#8b9cb5\"\r\n                                    autoCapitalize=\"sentences\"\r\n                                    returnKeyType=\"next\"\r\n                                    blurOnSubmit={false}\r\n                                />\r\n                            </View>\r\n                            {/* {errortext != '' ? (\r\n                                <Text style={styles.errorTextStyle}>\r\n                                    {errortext}\r\n                                </Text>\r\n                            ) : null} */}\r\n                            <TouchableOpacity\r\n                                style={styles.buttonStyle}\r\n                                activeOpacity={0.5}>\r\n                                <Text style={styles.buttonTextStyle}>REGISTER</Text>\r\n                            </TouchableOpacity>\r\n                        </KeyboardAvoidingView>\r\n                    </ScrollView>\r\n                </View>            </SafeAreaView>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    SectionStyle: {\r\n        flexDirection: 'row',\r\n        height: 40,\r\n        marginTop: 20,\r\n        marginLeft: 35,\r\n        marginRight: 35,\r\n        margin: 10,\r\n    },\r\n    buttonStyle: {\r\n        backgroundColor: '#7DE24E',\r\n        borderWidth: 0,\r\n        color: '#FFFFFF',\r\n        borderColor: '#7DE24E',\r\n        height: 40,\r\n        alignItems: 'center',\r\n        borderRadius: 30,\r\n        marginLeft: 35,\r\n        marginRight: 35,\r\n        marginTop: 20,\r\n        marginBottom: 20,\r\n    },\r\n    buttonTextStyle: {\r\n        color: '#FFFFFF',\r\n        paddingVertical: 10,\r\n        fontSize: 16,\r\n    },\r\n    inputStyle: {\r\n        flex: 1,\r\n        color: 'white',\r\n        paddingLeft: 15,\r\n        paddingRight: 15,\r\n        borderWidth: 1,\r\n        borderRadius: 30,\r\n        borderColor: '#dadae8',\r\n    },\r\n    errorTextStyle: {\r\n        color: 'red',\r\n        textAlign: 'center',\r\n        fontSize: 14,\r\n    },\r\n    successTextStyle: {\r\n        color: 'white',\r\n        textAlign: 'center',\r\n        fontSize: 18,\r\n        padding: 30,\r\n    },\r\n});"]},"metadata":{},"sourceType":"module"}