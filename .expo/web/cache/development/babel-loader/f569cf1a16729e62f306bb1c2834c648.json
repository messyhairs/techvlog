{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\MOBOMEDIA\\\\mobotcmsdemo\\\\Frontendtech\\\\reactnative\\\\story\\\\TechVlog\\\\Screens\\\\editscreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport AsyncStorage from '@react-native-community/async-storage';\nimport Axios from 'axios';\nimport { Card, ListItem, Button, Icon } from 'react-native-elements';\nimport { getbannerdata } from \"./viewyourstory\";\nimport Textarea from 'react-native-textarea';\nimport { cos } from 'react-native-reanimated';\n\nvar EditScreen = function (_React$Component) {\n  _inherits(EditScreen, _React$Component);\n\n  var _super = _createSuper(EditScreen);\n\n  function EditScreen(props) {\n    var _this;\n\n    _classCallCheck(this, EditScreen);\n\n    _this = _super.call(this, props);\n\n    _this.getcurrentstories = function _callee() {\n      var stories, story, users, userdatas, gettoken, stories_id, localurl, config;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('currentstory'));\n\n            case 3:\n              stories = _context.sent;\n              story = JSON.parse(stories);\n              console.log(story.title);\n\n              _this.setState({\n                data: story\n              });\n\n              _context.next = 9;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('userdatas'));\n\n            case 9:\n              users = _context.sent;\n              userdatas = JSON.parse(users);\n              console.log(userdatas);\n\n              _this.setState({\n                data: userdatas\n              });\n\n              gettoken = _this.state.data.token;\n              stories_id = story.stories_id;\n              localurl = 'http://192.168.1.4:8000/api/edit/';\n              config = {\n                headers: {\n                  'content-type': 'multipart/form-data',\n                  'Authorization': 'Bearer ' + gettoken,\n                  'Accept': 'application/json'\n                }\n              };\n              Axios.get(localurl + stories_id, config).then(function (response) {\n                console.log(response.data.title);\n\n                _this.setState({\n                  getcurrentstory: response.data\n                });\n\n                console.log(_this.state.getcurrentstory.title, '*********');\n              }).catch(function (error) {\n                console.log(error);\n              });\n              _context.next = 23;\n              break;\n\n            case 20:\n              _context.prev = 20;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 23:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 20]], Promise);\n    };\n\n    _this.updatestories = function _callee2() {\n      var stories, story, stories_id, username, useremail, url;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('currentstory'));\n\n            case 3:\n              stories = _context2.sent;\n              story = JSON.parse(stories);\n              stories_id = story.stories_id;\n              username = story.username;\n              useremail = story.useremail;\n              url = 'http://192.168.1.4:8000/api/update/';\n              fetch(url + stories_id, {\n                method: 'POST',\n                headers: {\n                  Accept: 'application/json',\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  username: story.username,\n                  useremail: story.useremail,\n                  title: _this.state.title,\n                  storypara: _this.state.storypara\n                })\n              });\n              _context2.next = 15;\n              break;\n\n            case 12:\n              _context2.prev = 12;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.log(_context2.t0);\n\n            case 15:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 12]], Promise);\n    };\n\n    _this.deletestories = function _callee3() {\n      var stories, story, stories_id, username, useremail, url;\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('currentstory'));\n\n            case 3:\n              stories = _context3.sent;\n              story = JSON.parse(stories);\n              stories_id = story.stories_id;\n              username = story.username;\n              useremail = story.useremail;\n              url = 'http://192.168.1.4:8000/api/delete';\n              fetch(url + stories_id, {\n                method: 'POST',\n                headers: {\n                  Accept: 'application/json',\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  username: story.username,\n                  useremail: story.useremail,\n                  title: _this.state.title,\n                  storypara: _this.state.storypara\n                })\n              });\n              _context3.next = 15;\n              break;\n\n            case 12:\n              _context3.prev = 12;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.log(_context3.t0);\n\n            case 15:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[0, 12]], Promise);\n    };\n\n    _this.state = {\n      data: [],\n      title: '',\n      storypara: '',\n      getcurrentstory: []\n    };\n    return _this;\n  }\n\n  _createClass(EditScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getcurrentstories();\n    }\n  }, {\n    key: \"onChangeText\",\n    value: function onChangeText() {\n      console.log(e);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.state.title) {\n        this.state.title = this.state.title;\n        console.log(this.state.title);\n      } else {\n        this.state.title = this.state.getcurrentstory.title;\n        console.log(this.state.title);\n      }\n\n      if (this.state.storypara) {\n        this.state.storypara = this.state.storypara;\n        console.log(this.state.storypara);\n      } else {\n        this.state.storypara = this.state.getcurrentstory.storypara;\n        console.log(this.state.storypara);\n      }\n\n      return React.createElement(SafeAreaView, {\n        style: {\n          flex: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }\n      }, React.createElement(ScrollView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: styles.mainBody,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: styles.storytitle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 29\n        }\n      }, \"Title\"), React.createElement(TextInput, {\n        style: styles.titleanswer,\n        defaultValue: this.state.getcurrentstory.title,\n        onChangeText: function onChangeText(title) {\n          return _this2.setState({\n            title: title\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 29\n        }\n      })), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: styles.contenthead,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 29\n        }\n      }, \"Content\"), React.createElement(Textarea, {\n        containerStyle: styles.textareaContainer,\n        style: styles.textarea,\n        defaultValue: this.state.getcurrentstory.storypara,\n        onChangeText: function onChangeText(storypara) {\n          return _this2.setState({\n            storypara: storypara\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 29\n        }\n      }), React.createElement(View, {\n        style: {\n          flex: 1,\n          flexDirection: 'row',\n          marginRight: 'auto',\n          marginLeft: 'auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 29\n        }\n      }, React.createElement(View, {\n        style: {\n          width: 120,\n          height: 50\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 33\n        }\n      }, React.createElement(Button, {\n        title: \"update\",\n        onPress: this.updatestories,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 33\n        }\n      })), React.createElement(View, {\n        style: {\n          width: 120,\n          height: 50,\n          marginLeft: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 33\n        }\n      }, React.createElement(Button, {\n        title: \"Delete\",\n        onPress: this.deletestories,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 37\n        }\n      })))))));\n    }\n  }]);\n\n  return EditScreen;\n}(React.Component);\n\nexport { EditScreen as default };\nvar styles = StyleSheet.create({\n  storycontentbottomview: {\n    paddingBottom: 50\n  },\n  mainBody: {\n    marginTop: 50\n  },\n  storytitle: {\n    textAlign: 'center',\n    fontWeight: 'bold',\n    paddingBottom: 15\n  },\n  titleanswer: {\n    color: '#003666',\n    textAlign: 'center',\n    borderWidth: 1,\n    borderRadius: 8,\n    borderColor: '#dadae8',\n    paddingBottom: 3,\n    paddingTop: 3,\n    paddingLeft: 3,\n    paddingRight: 3,\n    width: '70%',\n    marginLeft: 'auto',\n    marginRight: 'auto'\n  },\n  contenthead: {\n    textAlign: 'center',\n    fontWeight: 'bold',\n    paddingBottom: 15\n  },\n  contentanswer: {\n    color: '#136ad5',\n    textAlign: 'justify',\n    paddingLeft: 5,\n    paddingRight: 5\n  },\n  textareaContainer: {\n    marginTop: 20,\n    width: '90%',\n    marginLeft: 'auto',\n    marginRight: 'auto'\n  },\n  textarea: {\n    fontSize: 14,\n    color: '#333',\n    borderWidth: 1,\n    borderRadius: 8,\n    borderColor: '#dadae8',\n    paddingLeft: 8,\n    paddingRight: 8\n  }\n});","map":{"version":3,"sources":["C:/Users/Admin/Desktop/MOBOMEDIA/mobotcmsdemo/Frontendtech/reactnative/story/TechVlog/Screens/editscreen.js"],"names":["React","Component","useState","AsyncStorage","Axios","Card","ListItem","Button","Icon","getbannerdata","Textarea","cos","EditScreen","props","getcurrentstories","getItem","stories","story","JSON","parse","console","log","title","setState","data","users","userdatas","gettoken","state","token","stories_id","localurl","config","headers","get","then","response","getcurrentstory","catch","error","updatestories","username","useremail","url","fetch","method","Accept","body","stringify","storypara","deletestories","e","flex","styles","mainBody","storytitle","titleanswer","contenthead","textareaContainer","textarea","flexDirection","marginRight","marginLeft","width","height","StyleSheet","create","storycontentbottomview","paddingBottom","marginTop","textAlign","fontWeight","color","borderWidth","borderRadius","borderColor","paddingTop","paddingLeft","paddingRight","contentanswer","fontSize"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react';\r\nimport { View, Text, SafeAreaView, StyleSheet, ScrollView, TextInput } from 'react-native';\r\nimport AsyncStorage from '@react-native-community/async-storage';\r\nimport Axios from 'axios';\r\nimport { Card, ListItem, Button, Icon } from 'react-native-elements';\r\nimport { getbannerdata } from './viewyourstory'\r\nimport Textarea from 'react-native-textarea';\r\nimport { cos } from 'react-native-reanimated';\r\n\r\nexport default class EditScreen extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            data: [],\r\n            title: '',\r\n            storypara: '',\r\n            getcurrentstory: []\r\n        }\r\n    }\r\n    getcurrentstories = async () => {\r\n        try {\r\n            let stories = await AsyncStorage.getItem('currentstory');\r\n            const story = JSON.parse(stories);\r\n            console.log(story.title);\r\n            this.setState({ data: story });\r\n            let users = await AsyncStorage.getItem('userdatas');\r\n            const userdatas = JSON.parse(users);\r\n            console.log(userdatas);\r\n            this.setState({ data: userdatas });\r\n            const gettoken = this.state.data.token;\r\n            // const getuserid = this.state.data.userid;\r\n            const stories_id = story.stories_id;\r\n            const localurl = 'http://192.168.1.4:8000/api/edit/';\r\n            const config = {\r\n                headers: {\r\n                    'content-type': 'multipart/form-data',\r\n                    'Authorization': 'Bearer ' + gettoken,\r\n                    'Accept': 'application/json',\r\n                },\r\n\r\n            };\r\n            Axios.get(localurl + stories_id, config)\r\n                .then(response => {\r\n                    console.log(response.data.title);\r\n                    this.setState({ getcurrentstory: response.data });\r\n                    console.log(this.state.getcurrentstory.title, '*********')\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n        } catch (e) {\r\n            // error reading value\r\n            console.log(e);\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.getcurrentstories();\r\n    }\r\n    updatestories = async () => {\r\n        try {\r\n            let stories = await AsyncStorage.getItem('currentstory');\r\n            const story = JSON.parse(stories);\r\n            // console.log(story);\r\n            const stories_id = story.stories_id;\r\n            // userIsYoungerThan18 ? \"Minor\" : \"Adult\";\r\n            // const { storypara } = this.state.storypara\r\n            // const { title } = this.state.title;\r\n            const username = story.username;\r\n            const useremail = story.useremail\r\n            // const url = 'http://localhost:8000/api/update/'\r\n            const url = 'http://192.168.1.4:8000/api/update/'\r\n            fetch(url + stories_id, {\r\n                method: 'POST',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    // 'Authorization': 'Bearer ' + gettoken\r\n                },\r\n                body: JSON.stringify({\r\n                    username: story.username,\r\n                    useremail: story.useremail,\r\n                    // password: password,\r\n                    title: this.state.title,\r\n                    storypara: this.state.storypara,\r\n                })\r\n            })\r\n\r\n        } catch (e) {\r\n            // error reading value\r\n            console.log(e);\r\n        }\r\n    }\r\n    deletestories = async () => {\r\n        try {\r\n            let stories = await AsyncStorage.getItem('currentstory');\r\n            const story = JSON.parse(stories);\r\n            // console.log(story);\r\n            const stories_id = story.stories_id;\r\n            const username = story.username;\r\n            const useremail = story.useremail\r\n            // const url = 'http://localhost:8000/api/delete/'\r\n            const url = 'http://192.168.1.4:8000/api/delete'\r\n            fetch(url + stories_id, {\r\n                method: 'POST',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    // 'Authorization': 'Bearer ' + gettoken\r\n                },\r\n                body: JSON.stringify({\r\n                    username: story.username,\r\n                    useremail: story.useremail,\r\n                    // password: password,\r\n                    title: this.state.title,\r\n                    storypara: this.state.storypara,\r\n                })\r\n            })\r\n\r\n        } catch (e) {\r\n            // error reading value\r\n            console.log(e);\r\n        }\r\n    }\r\n    onChangeText() {\r\n        console.log(e);\r\n    }\r\n\r\n    render() {\r\n        // getbannerdata().then(res => {\r\n        //     console.log(res);\r\n        // })\r\n        if (this.state.title) {\r\n            this.state.title = this.state.title;\r\n            console.log(this.state.title)\r\n        } else {\r\n            this.state.title = this.state.getcurrentstory.title;\r\n            console.log(this.state.title)\r\n        }\r\n        if (this.state.storypara) {\r\n            this.state.storypara = this.state.storypara;\r\n            console.log(this.state.storypara)\r\n        } else {\r\n            this.state.storypara = this.state.getcurrentstory.storypara;\r\n            console.log(this.state.storypara)\r\n        }\r\n        return (\r\n            <SafeAreaView style={{ flex: 1 }}>\r\n                <ScrollView>\r\n                    <View style={styles.mainBody}>\r\n                        <View>\r\n                            <Text style={styles.storytitle}>Title</Text>\r\n                            <TextInput style={styles.titleanswer}\r\n                                defaultValue={this.state.getcurrentstory.title}\r\n                                onChangeText={title => this.setState({ title })}\r\n                            />\r\n                        </View>\r\n                        <View>\r\n                            <Text style={styles.contenthead}>Content</Text>\r\n                            <Textarea\r\n                                containerStyle={styles.textareaContainer}\r\n                                style={styles.textarea}\r\n                                defaultValue={this.state.getcurrentstory.storypara}\r\n                                onChangeText={storypara => this.setState({ storypara })}\r\n                            />\r\n                            <View style={{ flex: 1, flexDirection: 'row', marginRight: 'auto', marginLeft: 'auto' }}>\r\n                                <View style={{ width: 120, height: 50 }}>\r\n                                <Button title=\"update\" onPress={this.updatestories}/>\r\n                                    {/* <Text onPress={this.updatestories}>update</Text> */}\r\n                                </View>\r\n                                <View style={{ width: 120, height: 50, marginLeft: 20}}>\r\n                                    <Button title=\"Delete\" onPress={this.deletestories}/>\r\n                                    {/* <Text onPress={this.deletestories}>delete</Text> */}\r\n                                </View>\r\n                            </View>\r\n                        </View>\r\n                    </View>\r\n                </ScrollView>\r\n            </SafeAreaView>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    storycontentbottomview: {\r\n        paddingBottom: 50,\r\n    },\r\n    mainBody: {\r\n        // paddingBottom: 50\r\n        marginTop: 50\r\n    },\r\n    storytitle: {\r\n        textAlign: 'center',\r\n        fontWeight: 'bold',\r\n        paddingBottom: 15\r\n    },\r\n    titleanswer: {\r\n        color: '#003666',\r\n        textAlign: 'center',\r\n        borderWidth: 1,\r\n        borderRadius: 8,\r\n        borderColor: '#dadae8',\r\n        paddingBottom: 3,\r\n        paddingTop: 3,\r\n        paddingLeft: 3,\r\n        paddingRight: 3,\r\n        width: '70%',\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto'\r\n    },\r\n    contenthead: {\r\n        textAlign: 'center',\r\n        fontWeight: 'bold',\r\n        paddingBottom: 15\r\n    },\r\n    contentanswer: {\r\n        color: '#136ad5',\r\n        textAlign: 'justify',\r\n        paddingLeft: 5,\r\n        paddingRight: 5\r\n    },\r\n    textareaContainer: {\r\n        // height: 300,\r\n        marginTop: 20,\r\n        width: '90%',\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto'\r\n    },\r\n    textarea: {\r\n        // textAlignVertical: 'top',  // hack android\r\n        // height: 200,\r\n        fontSize: 14,\r\n        color: '#333',\r\n        borderWidth: 1,\r\n        borderRadius: 8,\r\n        borderColor: '#dadae8',\r\n        paddingLeft: 8,\r\n        paddingRight: 8,\r\n    },\r\n});"]},"metadata":{},"sourceType":"module"}