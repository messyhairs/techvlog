{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\MOBOMEDIA\\\\mobotcmsdemo\\\\Frontendtech\\\\reactnative\\\\story\\\\TechVlog\\\\Screens\\\\editscreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport AsyncStorage from '@react-native-community/async-storage';\nimport Axios from 'axios';\nimport { Card, ListItem, Button, Icon } from 'react-native-elements';\nimport { getbannerdata } from \"./viewyourstory\";\nimport Textarea from 'react-native-textarea';\nimport { cos } from 'react-native-reanimated';\n\nvar EditScreen = function (_React$Component) {\n  _inherits(EditScreen, _React$Component);\n\n  var _super = _createSuper(EditScreen);\n\n  function EditScreen(props) {\n    var _this2 = this;\n\n    var _this;\n\n    _classCallCheck(this, EditScreen);\n\n    (function _callee4() {\n      var stories, story;\n      return _regeneratorRuntime.async(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('currentstory'));\n\n            case 3:\n              stories = _context4.sent;\n              story = JSON.parse(stories);\n              console.log(story.title, '****************');\n              _this = _super.call(_this2, props);\n\n              _this.getcurrentstories = function _callee() {\n                var _stories, _story, users, userdatas, gettoken, stories_id, localurl, config;\n\n                return _regeneratorRuntime.async(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.prev = 0;\n                        _context.next = 3;\n                        return _regeneratorRuntime.awrap(AsyncStorage.getItem('currentstory'));\n\n                      case 3:\n                        _stories = _context.sent;\n                        _story = JSON.parse(_stories);\n                        console.log(_story.title);\n\n                        _this.setState({\n                          data: _story\n                        });\n\n                        _context.next = 9;\n                        return _regeneratorRuntime.awrap(AsyncStorage.getItem('userdatas'));\n\n                      case 9:\n                        users = _context.sent;\n                        userdatas = JSON.parse(users);\n                        console.log(userdatas);\n\n                        _this.setState({\n                          data: userdatas\n                        });\n\n                        gettoken = _this.state.data.token;\n                        stories_id = _story.stories_id;\n                        localurl = 'http://localhost:8000/api/edit/';\n                        config = {\n                          headers: {\n                            'content-type': 'multipart/form-data',\n                            'Authorization': 'Bearer ' + gettoken,\n                            'Accept': 'application/json'\n                          }\n                        };\n                        Axios.get(localurl + stories_id, config).then(function (response) {\n                          console.log(response.data.title);\n\n                          _this.setState({\n                            getcurrentstory: response.data\n                          });\n\n                          console.log(_this.state.getcurrentstory.title, '*********');\n                        }).catch(function (error) {\n                          console.log(error);\n                        });\n                        _context.next = 23;\n                        break;\n\n                      case 20:\n                        _context.prev = 20;\n                        _context.t0 = _context[\"catch\"](0);\n                        console.log(_context.t0);\n\n                      case 23:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, null, null, [[0, 20]], Promise);\n              };\n\n              _this.updatestories = function _callee2() {\n                var _stories2, _story2, stories_id, storypara, title, username, useremail, url;\n\n                return _regeneratorRuntime.async(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        _context2.prev = 0;\n                        _context2.next = 3;\n                        return _regeneratorRuntime.awrap(AsyncStorage.getItem('currentstory'));\n\n                      case 3:\n                        _stories2 = _context2.sent;\n                        _story2 = JSON.parse(_stories2);\n                        stories_id = _story2.stories_id;\n                        storypara = _this.state.storypara.storypara;\n                        title = _this.state.title.title;\n                        username = _story2.username;\n                        useremail = _story2.useremail;\n                        url = 'http://localhost:8000/api/update/';\n                        fetch(url + stories_id, {\n                          method: 'POST',\n                          headers: {\n                            Accept: 'application/json',\n                            'Content-Type': 'application/json'\n                          },\n                          body: JSON.stringify({\n                            username: _story2.username,\n                            useremail: _story2.useremail,\n                            title: _this.state.title,\n                            storypara: _this.state.storypara\n                          })\n                        });\n                        _context2.next = 17;\n                        break;\n\n                      case 14:\n                        _context2.prev = 14;\n                        _context2.t0 = _context2[\"catch\"](0);\n                        console.log(_context2.t0);\n\n                      case 17:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, null, null, [[0, 14]], Promise);\n              };\n\n              _this.deletestories = function _callee3() {\n                var users, userdatas, gettoken, getuserid, _stories3, _story3, stories_id, config, deleteurl;\n\n                return _regeneratorRuntime.async(function _callee3$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        _context3.prev = 0;\n                        _context3.next = 3;\n                        return _regeneratorRuntime.awrap(AsyncStorage.getItem('userdatas'));\n\n                      case 3:\n                        users = _context3.sent;\n                        userdatas = JSON.parse(users);\n                        console.log(userdatas);\n                        gettoken = userdatas.token;\n                        getuserid = userdatas.userid;\n                        _context3.next = 10;\n                        return _regeneratorRuntime.awrap(AsyncStorage.getItem('currentstory'));\n\n                      case 10:\n                        _stories3 = _context3.sent;\n                        _story3 = JSON.parse(_stories3);\n                        console.log(_story3.stories_id);\n                        stories_id = _story3.stories_id;\n                        config = {\n                          headers: {\n                            'Authorization': 'Bearer ' + gettoken,\n                            'Accept': 'application/json'\n                          }\n                        };\n                        deleteurl = 'http://localhost:8000/api/deletstory';\n                        fetch(deleteurl + stories_id, config, {\n                          method: 'DELETE'\n                        });\n                        _context3.next = 22;\n                        break;\n\n                      case 19:\n                        _context3.prev = 19;\n                        _context3.t0 = _context3[\"catch\"](0);\n                        console.log(_context3.t0);\n\n                      case 22:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                }, null, null, [[0, 19]], Promise);\n              };\n\n              _this.state = {\n                data: [],\n                title: story.title,\n                storypara: story.storypara,\n                getcurrentstory: []\n              };\n              _context4.next = 16;\n              break;\n\n            case 13:\n              _context4.prev = 13;\n              _context4.t0 = _context4[\"catch\"](0);\n              console.log(_context4.t0);\n\n            case 16:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, [[0, 13]], Promise);\n    });\n\n    return _possibleConstructorReturn(_this);\n  }\n\n  _createClass(EditScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getcurrentstories();\n    }\n  }, {\n    key: \"onChangeText\",\n    value: function onChangeText(e) {\n      console.log(e);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(SafeAreaView, {\n        style: {\n          flex: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }\n      }, React.createElement(ScrollView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 25\n        }\n      }, \"Story details\")), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.storytitle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 25\n        }\n      }, \"Title\"), React.createElement(TextInput, {\n        style: styles.titleanswer,\n        defaultValue: this.state.getcurrentstory.title,\n        onChangeText: function onChangeText(title) {\n          return _this3.setState({\n            title: title\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 25\n        }\n      })), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.contenthead,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 25\n        }\n      }, \"Content\"), React.createElement(Textarea, {\n        containerStyle: styles.textareaContainer,\n        style: styles.textarea,\n        defaultValue: this.state.getcurrentstory.storypara,\n        onChangeText: function onChangeText(storypara) {\n          return _this3.setState({\n            storypara: storypara\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 25\n        }\n      })), React.createElement(Text, {\n        onPress: this.updatestories,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }\n      }, \"update\"), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        onPress: this.deletestories,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 25\n        }\n      }, \"delete\"))));\n    }\n  }]);\n\n  return EditScreen;\n}(React.Component);\n\nexport { EditScreen as default };\nvar styles = StyleSheet.create({\n  storycontentbottomview: {\n    paddingBottom: 50\n  },\n  mainBody: {\n    paddingBottom: 50\n  },\n  storytitle: {\n    textAlign: 'center',\n    fontWeight: 'bold',\n    paddingBottom: 15\n  },\n  titleanswer: {\n    color: '#003666',\n    textAlign: 'center',\n    borderWidth: 1,\n    borderRadius: 8,\n    borderColor: '#dadae8',\n    paddingBottom: 3,\n    paddingTop: 3,\n    paddingLeft: 3,\n    paddingRight: 3,\n    width: '70%',\n    marginLeft: 'auto',\n    marginRight: 'auto'\n  },\n  contenthead: {\n    textAlign: 'center',\n    fontWeight: 'bold',\n    paddingBottom: 15\n  },\n  contentanswer: {\n    color: '#136ad5',\n    textAlign: 'justify',\n    paddingLeft: 5,\n    paddingRight: 5\n  },\n  textareaContainer: {\n    height: 300,\n    padding: 5,\n    marginTop: 20,\n    width: 300\n  },\n  textarea: {\n    fontSize: 14,\n    color: '#333',\n    borderWidth: 1,\n    borderRadius: 8,\n    borderColor: '#dadae8'\n  }\n});","map":{"version":3,"sources":["C:/Users/Admin/Desktop/MOBOMEDIA/mobotcmsdemo/Frontendtech/reactnative/story/TechVlog/Screens/editscreen.js"],"names":["React","Component","useState","AsyncStorage","Axios","Card","ListItem","Button","Icon","getbannerdata","Textarea","cos","EditScreen","props","getItem","stories","story","JSON","parse","console","log","title","getcurrentstories","setState","data","users","userdatas","gettoken","state","token","stories_id","localurl","config","headers","get","then","response","getcurrentstory","catch","error","updatestories","storypara","username","useremail","url","fetch","method","Accept","body","stringify","deletestories","getuserid","userid","deleteurl","e","flex","styles","storytitle","titleanswer","contenthead","textareaContainer","textarea","StyleSheet","create","storycontentbottomview","paddingBottom","mainBody","textAlign","fontWeight","color","borderWidth","borderRadius","borderColor","paddingTop","paddingLeft","paddingRight","width","marginLeft","marginRight","contentanswer","height","padding","marginTop","fontSize"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;;;AAEA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,MAAzB,EAAiCC,IAAjC,QAA6C,uBAA7C;AACA,SAASC,aAAT;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,SAASC,GAAT,QAAoB,yBAApB;;IAEqBC,U;;;;;AAEjB,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AAAA;;AACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAE4BV,YAAY,CAACW,OAAb,CAAqB,cAArB,CAF5B;;AAAA;AAEYC,cAAAA,OAFZ;AAGcC,cAAAA,KAHd,GAGsBC,IAAI,CAACC,KAAL,CAAWH,OAAX,CAHtB;AAIQI,cAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACK,KAAlB,EAAyB,kBAAzB;AACA,0CAAMR,KAAN;;AALR,oBAkBJS,iBAlBI,GAkBgB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDAEQnB,YAAY,CAACW,OAAb,CAAqB,cAArB,CAFR;;AAAA;AAERC,wBAAAA,QAFQ;AAGNC,wBAAAA,MAHM,GAGEC,IAAI,CAACC,KAAL,CAAWH,QAAX,CAHF;AAIZI,wBAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAK,CAACK,KAAlB;;AACA,8BAAKE,QAAL,CAAc;AAAEC,0BAAAA,IAAI,EAAER;AAAR,yBAAd;;AALY;AAAA,yDAMMb,YAAY,CAACW,OAAb,CAAqB,WAArB,CANN;;AAAA;AAMRW,wBAAAA,KANQ;AAONC,wBAAAA,SAPM,GAOMT,IAAI,CAACC,KAAL,CAAWO,KAAX,CAPN;AAQZN,wBAAAA,OAAO,CAACC,GAAR,CAAYM,SAAZ;;AACA,8BAAKH,QAAL,CAAc;AAAEC,0BAAAA,IAAI,EAAEE;AAAR,yBAAd;;AACMC,wBAAAA,QAVM,GAUK,MAAKC,KAAL,CAAWJ,IAAX,CAAgBK,KAVrB;AAYNC,wBAAAA,UAZM,GAYOd,MAAK,CAACc,UAZb;AAaNC,wBAAAA,QAbM,GAaK,iCAbL;AAcNC,wBAAAA,MAdM,GAcG;AACXC,0BAAAA,OAAO,EAAE;AACL,4CAAgB,qBADX;AAEL,6CAAiB,YAAYN,QAFxB;AAGL,sCAAU;AAHL;AADE,yBAdH;AAsBZvB,wBAAAA,KAAK,CAAC8B,GAAN,CAAUH,QAAQ,GAAGD,UAArB,EAAiCE,MAAjC,EACKG,IADL,CACU,UAAAC,QAAQ,EAAI;AACdjB,0BAAAA,OAAO,CAACC,GAAR,CAAYgB,QAAQ,CAACZ,IAAT,CAAcH,KAA1B;;AACA,gCAAKE,QAAL,CAAc;AAAEc,4BAAAA,eAAe,EAAED,QAAQ,CAACZ;AAA5B,2BAAd;;AACAL,0BAAAA,OAAO,CAACC,GAAR,CAAY,MAAKQ,KAAL,CAAWS,eAAX,CAA2BhB,KAAvC,EAA8C,WAA9C;AACH,yBALL,EAMKiB,KANL,CAMW,UAAUC,KAAV,EAAiB;AACpBpB,0BAAAA,OAAO,CAACC,GAAR,CAAYmB,KAAZ;AACH,yBARL;AAtBY;AAAA;;AAAA;AAAA;AAAA;AAiCZpB,wBAAAA,OAAO,CAACC,GAAR;;AAjCY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAlBhB;;AAAA,oBAyDJoB,aAzDI,GAyDY;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDAEYrC,YAAY,CAACW,OAAb,CAAqB,cAArB,CAFZ;;AAAA;AAEJC,wBAAAA,SAFI;AAGFC,wBAAAA,OAHE,GAGMC,IAAI,CAACC,KAAL,CAAWH,SAAX,CAHN;AAKFe,wBAAAA,UALE,GAKWd,OAAK,CAACc,UALjB;AAOAW,wBAAAA,SAPA,GAOc,MAAKb,KAAL,CAAWa,SAPzB,CAOAA,SAPA;AAQApB,wBAAAA,KARA,GAQU,MAAKO,KAAL,CAAWP,KARrB,CAQAA,KARA;AASFqB,wBAAAA,QATE,GASS1B,OAAK,CAAC0B,QATf;AAUFC,wBAAAA,SAVE,GAUU3B,OAAK,CAAC2B,SAVhB;AAWFC,wBAAAA,GAXE,GAWI,mCAXJ;AA2BRC,wBAAAA,KAAK,CAACD,GAAG,GAAGd,UAAP,EAAmB;AACpBgB,0BAAAA,MAAM,EAAE,MADY;AAEpBb,0BAAAA,OAAO,EAAE;AACLc,4BAAAA,MAAM,EAAE,kBADH;AAEL,4CAAgB;AAFX,2BAFW;AAOpBC,0BAAAA,IAAI,EAAE/B,IAAI,CAACgC,SAAL,CAAe;AACjBP,4BAAAA,QAAQ,EAAE1B,OAAK,CAAC0B,QADC;AAEjBC,4BAAAA,SAAS,EAAE3B,OAAK,CAAC2B,SAFA;AAIjBtB,4BAAAA,KAAK,EAAE,MAAKO,KAAL,CAAWP,KAJD;AAKjBoB,4BAAAA,SAAS,EAAE,MAAKb,KAAL,CAAWa;AALL,2BAAf;AAPc,yBAAnB,CAAL;AA3BQ;AAAA;;AAAA;AAAA;AAAA;AA6CRtB,wBAAAA,OAAO,CAACC,GAAR;;AA7CQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAzDZ;;AAAA,oBAyGJ8B,aAzGI,GAyGY;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDAEU/C,YAAY,CAACW,OAAb,CAAqB,WAArB,CAFV;;AAAA;AAEJW,wBAAAA,KAFI;AAGFC,wBAAAA,SAHE,GAGUT,IAAI,CAACC,KAAL,CAAWO,KAAX,CAHV;AAIRN,wBAAAA,OAAO,CAACC,GAAR,CAAYM,SAAZ;AAEMC,wBAAAA,QANE,GAMSD,SAAS,CAACG,KANnB;AAOFsB,wBAAAA,SAPE,GAOUzB,SAAS,CAAC0B,MAPpB;AAAA;AAAA,yDAQYjD,YAAY,CAACW,OAAb,CAAqB,cAArB,CARZ;;AAAA;AAQJC,wBAAAA,SARI;AASFC,wBAAAA,OATE,GASMC,IAAI,CAACC,KAAL,CAAWH,SAAX,CATN;AAURI,wBAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAK,CAACc,UAAlB;AACMA,wBAAAA,UAXE,GAWWd,OAAK,CAACc,UAXjB;AAYFE,wBAAAA,MAZE,GAYO;AACXC,0BAAAA,OAAO,EAAE;AAEL,6CAAiB,YAAYN,QAFxB;AAGL,sCAAU;AAHL;AADE,yBAZP;AAqBF0B,wBAAAA,SArBE,GAqBU,sCArBV;AAsBRR,wBAAAA,KAAK,CAACQ,SAAS,GAAGvB,UAAb,EAAyBE,MAAzB,EAAiC;AAClCc,0BAAAA,MAAM,EAAE;AAD0B,yBAAjC,CAAL;AAtBQ;AAAA;;AAAA;AAAA;AAAA;AAgCR3B,wBAAAA,OAAO,CAACC,GAAR;;AAhCQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAzGZ;;AAMQ,oBAAKQ,KAAL,GAAa;AACTJ,gBAAAA,IAAI,EAAE,EADG;AAETH,gBAAAA,KAAK,EAAEL,KAAK,CAACK,KAFJ;AAGToB,gBAAAA,SAAS,EAAEzB,KAAK,CAACyB,SAHR;AAITJ,gBAAAA,eAAe,EAAE;AAJR,eAAb;AANR;AAAA;;AAAA;AAAA;AAAA;AAcQlB,cAAAA,OAAO,CAACC,GAAR;;AAdR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AADe;AAkBlB;;;;WAqCD,6BAAoB;AAChB,WAAKE,iBAAL;AACH;;;WAoFD,sBAAagC,CAAb,EAAgB;AACZnC,MAAAA,OAAO,CAACC,GAAR,CAAYkC,CAAZ;AACH;;;WACD,kBAAS;AAAA;;AAIL,aACI,oBAAC,YAAD;AAAc,QAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAE;AAAR,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,CADJ,EAII,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAGI,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAED,MAAM,CAACE,WAAzB;AACI,QAAA,YAAY,EAAE,KAAK9B,KAAL,CAAWS,eAAX,CAA2BhB,KAD7C;AAEI,QAAA,YAAY,EAAE,sBAAAA,KAAK;AAAA,iBAAI,MAAI,CAACE,QAAL,CAAc;AAAEF,YAAAA,KAAK,EAALA;AAAF,WAAd,CAAJ;AAAA,SAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,CAJJ,EAYI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEmC,MAAM,CAACG,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI,oBAAC,QAAD;AACI,QAAA,cAAc,EAAEH,MAAM,CAACI,iBAD3B;AAEI,QAAA,KAAK,EAAEJ,MAAM,CAACK,QAFlB;AAGI,QAAA,YAAY,EAAE,KAAKjC,KAAL,CAAWS,eAAX,CAA2BI,SAH7C;AAII,QAAA,YAAY,EAAE,sBAAAA,SAAS;AAAA,iBAAI,MAAI,CAAClB,QAAL,CAAc;AAAEkB,YAAAA,SAAS,EAATA;AAAF,WAAd,CAAJ;AAAA,SAJ3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAZJ,EAsBI,oBAAC,IAAD;AAAM,QAAA,OAAO,EAAE,KAAKD,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAtBJ,EAuBI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,OAAO,EAAE,KAAKU,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CAvBJ,CADJ,CADJ;AA+BH;;;;EArLmClD,KAAK,CAACC,S;;SAAzBW,U;AAyLrB,IAAM4C,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC7BC,EAAAA,sBAAsB,EAAE;AACpBC,IAAAA,aAAa,EAAE;AADK,GADK;AAI7BC,EAAAA,QAAQ,EAAE;AACND,IAAAA,aAAa,EAAE;AADT,GAJmB;AAO7BR,EAAAA,UAAU,EAAE;AACRU,IAAAA,SAAS,EAAE,QADH;AAERC,IAAAA,UAAU,EAAE,MAFJ;AAGRH,IAAAA,aAAa,EAAE;AAHP,GAPiB;AAY7BP,EAAAA,WAAW,EAAE;AACTW,IAAAA,KAAK,EAAE,SADE;AAETF,IAAAA,SAAS,EAAE,QAFF;AAGTG,IAAAA,WAAW,EAAE,CAHJ;AAITC,IAAAA,YAAY,EAAE,CAJL;AAKTC,IAAAA,WAAW,EAAE,SALJ;AAMTP,IAAAA,aAAa,EAAE,CANN;AAOTQ,IAAAA,UAAU,EAAE,CAPH;AAQTC,IAAAA,WAAW,EAAE,CARJ;AASTC,IAAAA,YAAY,EAAE,CATL;AAUTC,IAAAA,KAAK,EAAE,KAVE;AAWTC,IAAAA,UAAU,EAAE,MAXH;AAYTC,IAAAA,WAAW,EAAE;AAZJ,GAZgB;AA0B7BnB,EAAAA,WAAW,EAAE;AACTQ,IAAAA,SAAS,EAAE,QADF;AAETC,IAAAA,UAAU,EAAE,MAFH;AAGTH,IAAAA,aAAa,EAAE;AAHN,GA1BgB;AA+B7Bc,EAAAA,aAAa,EAAE;AACXV,IAAAA,KAAK,EAAE,SADI;AAEXF,IAAAA,SAAS,EAAE,SAFA;AAGXO,IAAAA,WAAW,EAAE,CAHF;AAIXC,IAAAA,YAAY,EAAE;AAJH,GA/Bc;AAqC7Bf,EAAAA,iBAAiB,EAAE;AACfoB,IAAAA,MAAM,EAAE,GADO;AAEfC,IAAAA,OAAO,EAAE,CAFM;AAGfC,IAAAA,SAAS,EAAE,EAHI;AAIfN,IAAAA,KAAK,EAAE;AAJQ,GArCU;AA2C7Bf,EAAAA,QAAQ,EAAE;AAGNsB,IAAAA,QAAQ,EAAE,EAHJ;AAINd,IAAAA,KAAK,EAAE,MAJD;AAKNC,IAAAA,WAAW,EAAE,CALP;AAMNC,IAAAA,YAAY,EAAE,CANR;AAONC,IAAAA,WAAW,EAAE;AAPP;AA3CmB,CAAlB,CAAf","sourcesContent":["import React, { Component, useState } from 'react';\r\nimport { View, Text, SafeAreaView, StyleSheet, ScrollView, TextInput } from 'react-native';\r\nimport AsyncStorage from '@react-native-community/async-storage';\r\nimport Axios from 'axios';\r\nimport { Card, ListItem, Button, Icon } from 'react-native-elements';\r\nimport { getbannerdata } from './viewyourstory'\r\nimport Textarea from 'react-native-textarea';\r\nimport { cos } from 'react-native-reanimated';\r\n\r\nexport default class EditScreen extends React.Component {\r\n\r\n    constructor(props) {\r\n        async () => {\r\n            try {\r\n                let stories = await AsyncStorage.getItem('currentstory');\r\n                const story = JSON.parse(stories);\r\n                console.log(story.title, '****************');\r\n                super(props)\r\n                this.state = {\r\n                    data: [],\r\n                    title: story.title,\r\n                    storypara: story.storypara,\r\n                    getcurrentstory: []\r\n                }\r\n            } catch (e) {\r\n                // error reading value\r\n                console.log(e);\r\n            }\r\n        }\r\n    }\r\n    getcurrentstories = async () => {\r\n        try {\r\n            let stories = await AsyncStorage.getItem('currentstory');\r\n            const story = JSON.parse(stories);\r\n            console.log(story.title);\r\n            this.setState({ data: story });\r\n            let users = await AsyncStorage.getItem('userdatas');\r\n            const userdatas = JSON.parse(users);\r\n            console.log(userdatas);\r\n            this.setState({ data: userdatas });\r\n            const gettoken = this.state.data.token;\r\n            // const getuserid = this.state.data.userid;\r\n            const stories_id = story.stories_id;\r\n            const localurl = 'http://localhost:8000/api/edit/';\r\n            const config = {\r\n                headers: {\r\n                    'content-type': 'multipart/form-data',\r\n                    'Authorization': 'Bearer ' + gettoken,\r\n                    'Accept': 'application/json',\r\n                },\r\n\r\n            };\r\n            Axios.get(localurl + stories_id, config)\r\n                .then(response => {\r\n                    console.log(response.data.title);\r\n                    this.setState({ getcurrentstory: response.data });\r\n                    console.log(this.state.getcurrentstory.title, '*********')\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n        } catch (e) {\r\n            // error reading value\r\n            console.log(e);\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.getcurrentstories();\r\n    }\r\n    updatestories = async () => {\r\n        try {\r\n            let stories = await AsyncStorage.getItem('currentstory');\r\n            const story = JSON.parse(stories);\r\n            // console.log(story);\r\n            const stories_id = story.stories_id;\r\n            // userIsYoungerThan18 ? \"Minor\" : \"Adult\";\r\n            const { storypara } = this.state.storypara\r\n            const { title } = this.state.title;\r\n            const username = story.username;\r\n            const useremail = story.useremail\r\n            const url = 'http://localhost:8000/api/update/'\r\n            // Axios.post(`http://localhost:8000/api/update/${stories_id}` + title, storypara, username, useremail).then(response => {\r\n            //     console.log(response);\r\n            // })\r\n            //  Axios({\r\n            //     method: 'PATCH',\r\n            //     url: `http://localhost:8000/api/update/${stories_id}`,\r\n            //     stories: {\r\n            //         storypara: storypara,\r\n            //         title: title,\r\n            //         username: story.username,\r\n            //         useremail: story.useremail\r\n            //     }\r\n            // }).then(response => {\r\n            //     console.log(response)\r\n            // })\r\n            fetch(url + stories_id, {\r\n                method: 'POST',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    // 'Authorization': 'Bearer ' + gettoken\r\n                },\r\n                body: JSON.stringify({\r\n                    username: story.username,\r\n                    useremail: story.useremail,\r\n                    // password: password,\r\n                    title: this.state.title,\r\n                    storypara: this.state.storypara,\r\n                })\r\n            })\r\n\r\n        } catch (e) {\r\n            // error reading value\r\n            console.log(e);\r\n        }\r\n    }\r\n    deletestories = async () => {\r\n        try {\r\n            let users = await AsyncStorage.getItem('userdatas');\r\n            const userdatas = JSON.parse(users);\r\n            console.log(userdatas);\r\n            // this.setState({ data: userdatas });\r\n            const gettoken = userdatas.token;\r\n            const getuserid = userdatas.userid;\r\n            let stories = await AsyncStorage.getItem('currentstory');\r\n            const story = JSON.parse(stories);\r\n            console.log(story.stories_id)\r\n            const stories_id = story.stories_id;\r\n            const config = {\r\n                headers: {\r\n                    // 'content-type': 'multipart/form-data',\r\n                    'Authorization': 'Bearer ' + gettoken,\r\n                    'Accept': 'application/json',\r\n                },\r\n\r\n            };\r\n            // const deleteurl = 'http://192.168.1.4:8000/api/deletstory/';\r\n            const deleteurl = 'http://localhost:8000/api/deletstory';\r\n            fetch(deleteurl + stories_id, config, {\r\n                method: 'DELETE',\r\n                // headers: {\r\n                //     Accept: 'application/json',\r\n                //     'Content-Type': 'application/json',\r\n                //     'Authorization': 'Bearer ' + gettoken\r\n                // },\r\n            })\r\n        } catch (e) {\r\n            // error reading value\r\n            console.log(e);\r\n        }\r\n    }\r\n    onChangeText(e) {\r\n        console.log(e);\r\n    }\r\n    render() {\r\n        // getbannerdata().then(res => {\r\n        //     console.log(res);\r\n        // })\r\n        return (\r\n            <SafeAreaView style={{ flex: 1 }}>\r\n                <ScrollView>\r\n                    <View>\r\n                        <Text>Story details</Text>\r\n                    </View>\r\n                    <View>\r\n                        <Text style={styles.storytitle}>Title</Text>\r\n                        {/* <Text style={styles.titleanswer}>{this.state.getcurrentstory.title}</Text> */}\r\n                        <TextInput style={styles.titleanswer}\r\n                            defaultValue={this.state.getcurrentstory.title}\r\n                            onChangeText={title => this.setState({ title })}\r\n                        />\r\n                    </View>\r\n                    <View>\r\n                        <Text style={styles.contenthead}>Content</Text>\r\n                        <Textarea\r\n                            containerStyle={styles.textareaContainer}\r\n                            style={styles.textarea}\r\n                            defaultValue={this.state.getcurrentstory.storypara}\r\n                            onChangeText={storypara => this.setState({ storypara })}\r\n                        />\r\n                        {/* <Text style={styles.contentanswer}>{this.state.data.storycontent}</Text> */}\r\n                    </View>\r\n                    <Text onPress={this.updatestories}>update</Text>\r\n                    <View>\r\n                        <Text onPress={this.deletestories}>delete</Text>\r\n                    </View>\r\n                </ScrollView>\r\n            </SafeAreaView>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    storycontentbottomview: {\r\n        paddingBottom: 50,\r\n    },\r\n    mainBody: {\r\n        paddingBottom: 50\r\n    },\r\n    storytitle: {\r\n        textAlign: 'center',\r\n        fontWeight: 'bold',\r\n        paddingBottom: 15\r\n    },\r\n    titleanswer: {\r\n        color: '#003666',\r\n        textAlign: 'center',\r\n        borderWidth: 1,\r\n        borderRadius: 8,\r\n        borderColor: '#dadae8',\r\n        paddingBottom: 3,\r\n        paddingTop: 3,\r\n        paddingLeft: 3,\r\n        paddingRight: 3,\r\n        width: '70%',\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto'\r\n    },\r\n    contenthead: {\r\n        textAlign: 'center',\r\n        fontWeight: 'bold',\r\n        paddingBottom: 15\r\n    },\r\n    contentanswer: {\r\n        color: '#136ad5',\r\n        textAlign: 'justify',\r\n        paddingLeft: 5,\r\n        paddingRight: 5\r\n    },\r\n    textareaContainer: {\r\n        height: 300,\r\n        padding: 5,\r\n        marginTop: 20,\r\n        width: 300\r\n    },\r\n    textarea: {\r\n        // textAlignVertical: 'top',  // hack android\r\n        // height: 570,\r\n        fontSize: 14,\r\n        color: '#333',\r\n        borderWidth: 1,\r\n        borderRadius: 8,\r\n        borderColor: '#dadae8',\r\n    },\r\n});"]},"metadata":{},"sourceType":"module"}