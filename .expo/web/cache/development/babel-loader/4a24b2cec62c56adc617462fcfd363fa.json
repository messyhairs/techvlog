{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\MOBOMEDIA\\\\mobotcmsdemo\\\\Frontendtech\\\\reactnative\\\\story\\\\TechVlog\\\\App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport { createRootNavigator } from \"./router\";\nimport { isSignedIn } from \"./components/auth\";\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      signedIn: false,\n      checkedSignIn: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      isSignedIn().then(function (res) {\n        return _this2.setState({\n          signedIn: res,\n          checkedSignIn: true\n        });\n      }).catch(function (err) {\n        return alert(\"An error occurred\");\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          checkedSignIn = _this$state.checkedSignIn,\n          signedIn = _this$state.signedIn;\n\n      if (!checkedSignIn) {\n        return null;\n      }\n\n      var Layout = createRootNavigator(signedIn);\n      return React.createElement(Layout, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 12\n        }\n      });\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };","map":{"version":3,"sources":["C:/Users/Admin/Desktop/MOBOMEDIA/mobotcmsdemo/Frontendtech/reactnative/story/TechVlog/App.js"],"names":["React","createRootNavigator","isSignedIn","App","props","state","signedIn","checkedSignIn","then","res","setState","catch","err","alert","Layout","Component"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,mBAAT;AACA,SAASC,UAAT;;IAEqBC,G;;;;;AACnB,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,KADC;AAEXC,MAAAA,aAAa,EAAE;AAFJ,KAAb;AAHiB;AAOlB;;;;WAED,6BAAoB;AAAA;;AAClBL,MAAAA,UAAU,GACPM,IADH,CACQ,UAAAC,GAAG;AAAA,eAAI,MAAI,CAACC,QAAL,CAAc;AAAEJ,UAAAA,QAAQ,EAAEG,GAAZ;AAAiBF,UAAAA,aAAa,EAAE;AAAhC,SAAd,CAAJ;AAAA,OADX,EAEGI,KAFH,CAES,UAAAC,GAAG;AAAA,eAAIC,KAAK,CAAC,mBAAD,CAAT;AAAA,OAFZ;AAGD;;;WAED,kBAAS;AAAA,wBAC6B,KAAKR,KADlC;AAAA,UACCE,aADD,eACCA,aADD;AAAA,UACgBD,QADhB,eACgBA,QADhB;;AAIP,UAAI,CAACC,aAAL,EAAoB;AAClB,eAAO,IAAP;AACD;;AAED,UAAMO,MAAM,GAAGb,mBAAmB,CAACK,QAAD,CAAlC;AACA,aAAO,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;;;EA1B8BN,KAAK,CAACe,S;;SAAlBZ,G","sourcesContent":["import React from \"react\";\nimport { createRootNavigator } from \"./router\";\nimport { isSignedIn } from \"./components/auth\";\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      signedIn: false,\n      checkedSignIn: false\n    };\n  }\n\n  componentDidMount() {\n    isSignedIn()\n      .then(res => this.setState({ signedIn: res, checkedSignIn: true }))\n      .catch(err => alert(\"An error occurred\"));\n  }\n\n  render() {\n    const { checkedSignIn, signedIn } = this.state;\n\n    // If we haven't checked AsyncStorage yet, don't render anything (better ways to do this)\n    if (!checkedSignIn) {\n      return null;\n    }\n\n    const Layout = createRootNavigator(signedIn);\n    return <Layout />;\n  }\n}"]},"metadata":{},"sourceType":"module"}