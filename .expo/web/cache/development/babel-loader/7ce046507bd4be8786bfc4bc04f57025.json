{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\MOBOMEDIA\\\\mobotcmsdemo\\\\Frontendtech\\\\reactnative\\\\story\\\\TechVlog\\\\Screens\\\\storycreate.js\";\n\nimport React, { useState, createRef } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { AlertIOS } from \"react-native-web/dist/index\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport AsyncStorage from '@react-native-community/async-storage';\nimport Axios from 'axios';\nimport Textarea from 'react-native-textarea';\nimport * as SMS from 'expo-sms';\nimport Loader from \"./loader\";\nimport SplashScreen from \"./splashscreen\";\n\nvar goto = function goto() {\n  return _regeneratorRuntime.async(function goto$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          location.reload('homeScreenStack');\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar Storycreatescreen = function Storycreatescreen(props) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setusername = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      useremail = _useState4[0],\n      setuseremail = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      title = _useState6[0],\n      settitle = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      storypara = _useState8[0],\n      setstorypara = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      errortext = _useState10[0],\n      setErrortext = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      isRegistraionSuccess = _useState12[0],\n      setIsRegistraionSuccess = _useState12[1];\n\n  var emailInputRef = createRef();\n  var ageInputRef = createRef();\n  var addressInputRef = createRef();\n  var passwordInputRef = createRef();\n\n  var createstory = function createstory() {\n    var users, userdatas, gettoken, getuserid, geturl, config;\n    return _regeneratorRuntime.async(function createstory$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            setErrortext('');\n            _context2.prev = 1;\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('userdatas'));\n\n          case 4:\n            users = _context2.sent;\n            userdatas = JSON.parse(users);\n            console.log(userdatas);\n            gettoken = userdatas.token;\n            getuserid = userdatas.userid;\n            console.log(gettoken);\n            geturl = 'https://tranquil-dusk-36378.herokuapp.com/api/getuserdetails/';\n            config = {\n              headers: {\n                'content-type': 'multipart/form-data',\n                'Authorization': 'Bearer ' + gettoken,\n                'Accept': 'application/json'\n              }\n            };\n            Axios.get(geturl + getuserid, config).then(function (response) {\n              console.log(response.data.profile.useremail);\n              var url = 'https://tranquil-dusk-36378.herokuapp.com/api/createstory';\n              fetch(url, {\n                method: 'POST',\n                headers: {\n                  Accept: 'application/json',\n                  'Content-Type': 'application/json',\n                  'Authorization': 'Bearer ' + gettoken\n                },\n                body: JSON.stringify({\n                  username: response.data.profile.username,\n                  useremail: response.data.profile.useremail,\n                  title: title,\n                  storypara: storypara\n                })\n              }).then(function (response) {\n                return response.json();\n              }).then(function (responseJson) {\n                console.log(responseJson);\n\n                if (responseJson.message === 'done') {\n                  if (Platform.OS === 'android') {\n                    ToastAndroid.show(\"your story created succesfully!\", ToastAndroid.SHORT);\n                  }\n\n                  if (Platform.OS === 'ios') {\n                    AlertIOS.alert('your story created succesfully');\n                  }\n\n                  setTimeout(function () {\n                    props.navigation.navigate('SplashScreen');\n                  }, 1000);\n                  console.log('Story created Successful');\n                } else {\n                  setErrortext(responseJson.msg);\n\n                  if (Platform.OS === 'android') {\n                    ToastAndroid.show(responseJson.msg, ToastAndroid.SHORT);\n                  }\n\n                  if (Platform.OS === 'ios') {\n                    AlertIOS.alert(responseJson.msg);\n                  }\n                }\n              }).catch(function (error) {\n                console.error(error);\n              });\n            }).catch(function (error) {\n              console.log(error);\n            });\n            _context2.next = 18;\n            break;\n\n          case 15:\n            _context2.prev = 15;\n            _context2.t0 = _context2[\"catch\"](1);\n            console.log(_context2.t0);\n\n          case 18:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[1, 15]], Promise);\n  };\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 9\n    }\n  }, React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputStyle,\n    onChangeText: function onChangeText(title) {\n      return settitle(title);\n    },\n    underlineColorAndroid: \"#f000\",\n    placeholder: \"Enter Title\",\n    placeholderTextColor: \"#8b9cb5\",\n    returnKeyType: \"next\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 17\n    }\n  }), React.createElement(Textarea, {\n    containerStyle: styles.textareaContainer,\n    style: styles.textarea,\n    onChangeText: function onChangeText(storypara) {\n      return setstorypara(storypara);\n    },\n    returnKeyType: \"next\",\n    placeholder: \"Content of TechVlog\",\n    placeholderTextColor: '#c7c7c7',\n    underlineColorAndroid: 'transparent',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 17\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.buttonStyle,\n    activeOpacity: 0.5,\n    onPress: createstory,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonTextStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 21\n    }\n  }, \"Add Blog\"))));\n};\n\nexport default Storycreatescreen;\nvar styles = StyleSheet.create({\n  SectionStyle: {\n    flexDirection: 'row',\n    height: 40,\n    marginTop: 20,\n    marginLeft: 35,\n    marginRight: 35,\n    margin: 10\n  },\n  buttonbot: {\n    position: 'relative',\n    bottom: 0\n  },\n  buttonStyle: {\n    backgroundColor: '#123962',\n    borderWidth: 0,\n    borderColor: '#7DE24E',\n    height: 40,\n    alignItems: 'center',\n    borderRadius: 30,\n    marginLeft: 35,\n    marginRight: 35,\n    marginTop: 20,\n    marginBottom: 20\n  },\n  viewbtn: {\n    backgroundColor: '#ff4f81',\n    borderWidth: 0,\n    color: '#FFFFFF',\n    borderColor: '#7DE24E',\n    height: 40,\n    alignItems: 'center',\n    borderRadius: 10,\n    marginLeft: 35,\n    marginRight: 35,\n    marginTop: 20,\n    marginBottom: 20\n  },\n  buttonTextStyle: {\n    color: '#ffffff',\n    paddingVertical: 10,\n    fontSize: 16\n  },\n  inputStyle: {\n    flex: 1,\n    color: '#00334e',\n    paddingLeft: 15,\n    paddingRight: 15,\n    borderWidth: 1,\n    borderTopWidth: 0,\n    borderLeftWidth: 0,\n    borderRightWidth: 0,\n    borderColor: '#dadae8',\n    marginTop: 20,\n    paddingTop: 20,\n    paddingBottom: 20\n  },\n  errorTextStyle: {\n    color: 'red',\n    textAlign: 'center',\n    fontSize: 14\n  },\n  successTextStyle: {\n    color: '#0d0735',\n    textAlign: 'center',\n    fontSize: 18,\n    padding: 30\n  },\n  textareaContainer: {\n    height: 300,\n    padding: 5,\n    marginTop: 20,\n    width: 300\n  },\n  textarea: {\n    fontSize: 14,\n    color: '#333'\n  },\n  bottom: {\n    justifyContent: 'flex-end'\n  },\n  maincontainer: {\n    height: '100%'\n  }\n});","map":{"version":3,"sources":["C:/Users/Admin/Desktop/MOBOMEDIA/mobotcmsdemo/Frontendtech/reactnative/story/TechVlog/Screens/storycreate.js"],"names":["React","useState","createRef","AlertIOS","AsyncStorage","Axios","Textarea","SMS","Loader","SplashScreen","goto","location","reload","Storycreatescreen","props","username","setusername","useremail","setuseremail","title","settitle","storypara","setstorypara","errortext","setErrortext","isRegistraionSuccess","setIsRegistraionSuccess","emailInputRef","ageInputRef","addressInputRef","passwordInputRef","createstory","getItem","users","userdatas","JSON","parse","console","log","gettoken","token","getuserid","userid","geturl","config","headers","get","then","response","data","profile","url","fetch","method","Accept","body","stringify","json","responseJson","message","Platform","OS","ToastAndroid","show","SHORT","alert","setTimeout","navigation","navigate","msg","catch","error","flex","justifyContent","alignItems","styles","inputStyle","textareaContainer","textarea","buttonStyle","buttonTextStyle","StyleSheet","create","SectionStyle","flexDirection","height","marginTop","marginLeft","marginRight","margin","buttonbot","position","bottom","backgroundColor","borderWidth","borderColor","borderRadius","marginBottom","viewbtn","color","paddingVertical","fontSize","paddingLeft","paddingRight","borderTopWidth","borderLeftWidth","borderRightWidth","paddingTop","paddingBottom","errorTextStyle","textAlign","successTextStyle","padding","width","maincontainer"],"mappings":"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","sourcesContent":["import React, { useState, createRef } from 'react';\r\nimport {\r\n    StyleSheet,\r\n    TextInput,\r\n    View,\r\n    Text,\r\n    Image,\r\n    Platform, AlertIOS, ToastAndroid,\r\n    KeyboardAvoidingView,\r\n    Keyboard,\r\n    TouchableOpacity,\r\n    Button,\r\n    ScrollView,\r\n} from 'react-native';\r\nimport AsyncStorage from '@react-native-community/async-storage';\r\nimport Axios from 'axios';\r\nimport Textarea from 'react-native-textarea';\r\nimport * as SMS from 'expo-sms';\r\nimport Loader from './loader';\r\nimport SplashScreen from './splashscreen';\r\nconst goto = async () => {\r\n    location.reload('homeScreenStack')\r\n}\r\nconst Storycreatescreen = (props) => {\r\n    const [username, setusername] = useState('');\r\n    const [useremail, setuseremail] = useState('');\r\n    const [title, settitle] = useState('');\r\n    const [storypara, setstorypara] = useState('');\r\n    // const [password, setpassword] = useState('');\r\n    // const [loading, setLoading] = useState(false);\r\n    const [errortext, setErrortext] = useState('');\r\n    const [\r\n        isRegistraionSuccess,\r\n        setIsRegistraionSuccess\r\n    ] = useState(false);\r\n\r\n    const emailInputRef = createRef();\r\n    const ageInputRef = createRef();\r\n    const addressInputRef = createRef();\r\n    const passwordInputRef = createRef();\r\n\r\n    const createstory = async () => {\r\n        setErrortext('');\r\n        // if (!username) {\r\n        //     alert('Please fill Name');\r\n        //     return;\r\n        // }\r\n        // if (!useremail) {\r\n        //     alert('Please fill Email');\r\n        //     return;\r\n        // }\r\n        // if (!userage) {\r\n        //     alert('Please fill Age');\r\n        //     return;\r\n        // }\r\n        // if (!useraddress) {\r\n        //     alert('Please fill Address');\r\n        //     return;\r\n        // }\r\n        // if (!password) {\r\n        //     alert('Please fill Password');\r\n        //     return;\r\n        // }\r\n        //Show Loader\r\n        // setLoading(true);\r\n        try {\r\n            let users = await AsyncStorage.getItem('userdatas');\r\n            const userdatas = JSON.parse(users);\r\n            console.log(userdatas);\r\n            // this.setState({ data: userdatas });\r\n            const gettoken = userdatas.token;\r\n            const getuserid = userdatas.userid;\r\n            console.log(gettoken);\r\n            // const geturl = 'http://192.168.1.16:8000/api/getuserdetails/';\r\n            const geturl = 'https://tranquil-dusk-36378.herokuapp.com/api/getuserdetails/'\r\n            // const geturl = 'http://localhost:8000/api/getuserdetails/';\r\n\r\n            const config = {\r\n                headers: {\r\n                    'content-type': 'multipart/form-data',\r\n                    'Authorization': 'Bearer ' + gettoken,\r\n                    'Accept': 'application/json',\r\n                },\r\n\r\n            };\r\n            Axios.get(geturl + getuserid, config)\r\n                .then(response => {\r\n                    // this.setState({ profiles: response.data.profile });\r\n                    console.log(response.data.profile.useremail)\r\n                    // const url = 'http://192.168.1.16:8000/api/createstory';\r\n                    const url = 'https://tranquil-dusk-36378.herokuapp.com/api/createstory'\r\n                    // const url = 'http://localhost:8000/api/createstory';\r\n                    fetch(url, {\r\n                        method: 'POST',\r\n                        headers: {\r\n                            Accept: 'application/json',\r\n                            'Content-Type': 'application/json',\r\n                            'Authorization': 'Bearer ' + gettoken\r\n                        },\r\n                        body: JSON.stringify({\r\n                            username: response.data.profile.username,\r\n                            useremail: response.data.profile.useremail,\r\n                            // password: password,\r\n                            title: title,\r\n                            storypara: storypara,\r\n                        })\r\n                    })\r\n                        .then((response) => response.json())\r\n                        .then((responseJson) => {\r\n                            //Hide Loader\r\n                            // setLoading(false);\r\n                            console.log(responseJson);\r\n                            if (responseJson.message === 'done') {\r\n                                // setIsRegistraionSuccess(true);\r\n                                if (Platform.OS === 'android') {\r\n                                    ToastAndroid.show(\"your story created succesfully!\", ToastAndroid.SHORT);\r\n                                }\r\n                                if (Platform.OS === 'ios') {\r\n                                    AlertIOS.alert('your story created succesfully');\r\n                                    // ToastAndroid.show(\"your story updated succesfully!\", ToastAndroid.SHORT);\r\n                                }\r\n                                setTimeout(() => {\r\n                                    // window.location.reload('homeScreenStack')\r\n                                    // <SplashScreen />\r\n                                    props.navigation.navigate('SplashScreen')\r\n                                }, 1000);\r\n                                console.log(\r\n                                    'Story created Successful'\r\n                                );\r\n                            } else {\r\n                                setErrortext(responseJson.msg);\r\n                                if (Platform.OS === 'android') {\r\n                                    ToastAndroid.show(responseJson.msg, ToastAndroid.SHORT);\r\n                                }\r\n                                if (Platform.OS === 'ios') {\r\n                                    AlertIOS.alert(responseJson.msg);\r\n                                    // ToastAndroid.show(\"your story updated succesfully!\", ToastAndroid.SHORT);\r\n                                }\r\n                            }\r\n                        })\r\n                        .catch((error) => {\r\n                            //Hide Loader\r\n                            // setLoading(false);\r\n                            console.error(error);\r\n                        });\r\n\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n        }\r\n        catch (e) {\r\n            // error reading value\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    // const getstories = async () => {\r\n    //     try {\r\n    //         let users = await AsyncStorage.getItem('userdatas');\r\n    //         const userdatas = JSON.parse(users);\r\n    //         console.log(userdatas);\r\n    //         // this.setState({ data: userdatas });\r\n    //         const gettoken = userdatas.token;\r\n    //         const getuserid = userdatas.userid;\r\n    //         console.log(gettoken);\r\n    //         const localurl = 'http://192.168.1.16:8000/api/getuserdetails/';\r\n    //         // const localurl = 'http://localhost:8000/api/getuserdetails/';\r\n    //         const config = {\r\n    //             headers: {\r\n    //                 'content-type': 'multipart/form-data',\r\n    //                 'Authorization': 'Bearer ' + gettoken,\r\n    //                 'Accept': 'application/json',\r\n    //             },\r\n\r\n    //         };\r\n    //         Axios.get(localurl + getuserid, config)\r\n    //             .then(response => {\r\n    //                 // this.setState({ profiles: response.data.profile });\r\n    //                 console.log(response.data.profile.useremail)\r\n    //                 // const url = 'http://172.26.240.1:8000/api/createstory';\r\n    //                 const localurl = 'http://192.168.1.16:8000/api/createstory';\r\n    //                 // const localurl = 'http://localhost:8000/api/createstory';\r\n    //                 fetch(localurl, {\r\n    //                     method: 'POST',\r\n    //                     headers: {\r\n    //                         Accept: 'application/json',\r\n    //                         'Content-Type': 'application/json',\r\n    //                         'Authorization': 'Bearer ' + gettoken\r\n    //                     },\r\n    //                     body: JSON.stringify({\r\n    //                         username: response.data.profile.username,\r\n    //                         useremail: response.data.profile.useremail,\r\n    //                         // password: password,\r\n    //                         title: title,\r\n    //                         storypara: storypara,\r\n    //                     })\r\n    //                 })\r\n    //                     .then((response) => response.json())\r\n    //                     .then((responseJson) => {\r\n    //                         //Hide Loader\r\n    //                         // setLoading(false);\r\n    //                         console.log(responseJson);\r\n    //                         if (responseJson.message === 'done') {\r\n    //                             // setIsRegistraionSuccess(true);\r\n\r\n    //                             console.log(\r\n    //                                 'Story created Successful'\r\n    //                             );\r\n\r\n    //                         } else {\r\n    //                             setErrortext(responseJson.msg);\r\n    //                             if (Platform.OS === 'android') {\r\n    //                                 ToastAndroid.show(responseJson.msg, ToastAndroid.SHORT);\r\n    //                             }\r\n    //                             if (Platform.OS === 'ios') {\r\n    //                                 AlertIOS.alert(responseJson.msg);\r\n    //                                 // ToastAndroid.show(\"your story updated succesfully!\", ToastAndroid.SHORT);\r\n    //                             }\r\n    //                         }\r\n    //                     })\r\n    //                     .catch((error) => {\r\n    //                         //Hide Loader\r\n    //                         // setLoading(false);\r\n    //                         console.error(error);\r\n    //                     });\r\n\r\n    //             })\r\n    //             .catch(function (error) {\r\n    //                 console.log(error);\r\n    //             })\r\n    //     }\r\n    //     catch (e) {\r\n    //         // error reading value\r\n    //         console.log(e);\r\n    //     }\r\n    // }\r\n    // if (isRegistraionSuccess) {\r\n\r\n    //     return (\r\n    //         <View\r\n    //             style={{\r\n    //                 flex: 1,\r\n    //                 backgroundColor: '#eeeeee',\r\n    //                 justifyContent: 'center',\r\n    //             }}>\r\n    //             <Text style={styles.successTextStyle}>\r\n    //                 Story created Successfully\r\n\r\n    //     </Text>\r\n    //             {/* <TouchableOpacity\r\n    //                 style={styles.viewbtn}\r\n    //                 activeOpacity={0.5}\r\n    //                 onPress={() => props.navigation.navigate('homeScreenStack')}>\r\n    //                 <Text style={styles.buttonTextStyle}>view stories now</Text>\r\n    //             </TouchableOpacity> */}\r\n    //              <TouchableOpacity\r\n    //                 style={styles.viewbtn}\r\n    //                 activeOpacity={0.5}\r\n    //                 onPress={goto}>\r\n    //                 <Text style={styles.buttonTextStyle}>view stories now</Text>\r\n    //             </TouchableOpacity>\r\n    //         </View>\r\n    //     );\r\n    // }\r\n    return (\r\n        <View\r\n            style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\"\r\n            }}>\r\n            <ScrollView>\r\n                <TextInput\r\n                    style={styles.inputStyle}\r\n                    onChangeText={(title) => settitle(title)}\r\n                    underlineColorAndroid=\"#f000\"\r\n                    placeholder=\"Enter Title\"\r\n                    placeholderTextColor=\"#8b9cb5\"\r\n                    returnKeyType=\"next\"\r\n                />\r\n                <Textarea\r\n                    containerStyle={styles.textareaContainer}\r\n                    style={styles.textarea}\r\n                    onChangeText={(storypara) =>\r\n                        setstorypara(storypara)\r\n                    }\r\n                    returnKeyType=\"next\"\r\n                    // maxLength={120}\r\n                    placeholder='Content of TechVlog'\r\n                    placeholderTextColor={'#c7c7c7'}\r\n                    underlineColorAndroid={'transparent'}\r\n                />\r\n                <TouchableOpacity\r\n                    style={styles.buttonStyle}\r\n                    activeOpacity={0.5}\r\n                    onPress={createstory}>\r\n                    <Text style={styles.buttonTextStyle}>Add Blog</Text>\r\n                </TouchableOpacity>\r\n                {/* <Button style={styles.buttonStyle} title=\"CreateStory\" onPress={createstory} /> */}\r\n            </ScrollView>\r\n        </View>\r\n    );\r\n};\r\nexport default Storycreatescreen;\r\n\r\nconst styles = StyleSheet.create({\r\n    SectionStyle: {\r\n        flexDirection: 'row',\r\n        height: 40,\r\n        marginTop: 20,\r\n        marginLeft: 35,\r\n        marginRight: 35,\r\n        margin: 10,\r\n    },\r\n    buttonbot: {\r\n        position: 'relative',\r\n        bottom: 0\r\n    },\r\n    buttonStyle: {\r\n        backgroundColor: '#123962',\r\n        borderWidth: 0,\r\n        borderColor: '#7DE24E',\r\n        height: 40,\r\n        alignItems: 'center',\r\n        borderRadius: 30,\r\n        marginLeft: 35,\r\n        marginRight: 35,\r\n        marginTop: 20,\r\n        marginBottom: 20,\r\n    },\r\n    viewbtn: {\r\n        backgroundColor: '#ff4f81',\r\n        borderWidth: 0,\r\n        color: '#FFFFFF',\r\n        borderColor: '#7DE24E',\r\n        height: 40,\r\n        alignItems: 'center',\r\n        borderRadius: 10,\r\n        marginLeft: 35,\r\n        marginRight: 35,\r\n        marginTop: 20,\r\n        marginBottom: 20,\r\n    },\r\n    buttonTextStyle: {\r\n        color: '#ffffff',\r\n        paddingVertical: 10,\r\n        fontSize: 16,\r\n    },\r\n    inputStyle: {\r\n        flex: 1,\r\n        color: '#00334e',\r\n        paddingLeft: 15,\r\n        paddingRight: 15,\r\n        borderWidth: 1,\r\n        borderTopWidth: 0,\r\n        borderLeftWidth: 0,\r\n        borderRightWidth: 0,\r\n        // borderRadius: 30,\r\n        borderColor: '#dadae8',\r\n        marginTop: 20,\r\n        paddingTop: 20,\r\n        paddingBottom: 20,\r\n        // outline: 'none'\r\n    },\r\n    errorTextStyle: {\r\n        color: 'red',\r\n        textAlign: 'center',\r\n        fontSize: 14,\r\n    },\r\n    successTextStyle: {\r\n        color: '#0d0735',\r\n        textAlign: 'center',\r\n        fontSize: 18,\r\n        padding: 30,\r\n    },\r\n    textareaContainer: {\r\n        height: 300,\r\n        padding: 5,\r\n        marginTop: 20,\r\n        width: 300\r\n    },\r\n    textarea: {\r\n        // textAlignVertical: 'top',  // hack android\r\n        // height: 570,\r\n        fontSize: 14,\r\n        color: '#333',\r\n    },\r\n    bottom: {\r\n        // flex: 1,\r\n        justifyContent: 'flex-end',\r\n        // marginBottom: 36\r\n    },\r\n    maincontainer: {\r\n        height: '100%',\r\n        // backgroundColor: 'red'\r\n    }\r\n});"]},"metadata":{},"sourceType":"module"}