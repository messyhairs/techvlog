{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\MOBOMEDIA\\\\mobotcmsdemo\\\\Frontendtech\\\\reactnative\\\\story\\\\TechVlog\\\\components\\\\auth.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Input } from 'react-native-elements';\nimport AppRegistry from \"react-native-web/dist/exports/AppRegistry\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\n\nvar AuthScreen = function (_Component) {\n  _inherits(AuthScreen, _Component);\n\n  var _super = _createSuper(AuthScreen);\n\n  function AuthScreen(props) {\n    var _this;\n\n    _classCallCheck(this, AuthScreen);\n\n    _this = _super.call(this, props);\n\n    _this.validateEmail = function (email) {\n      var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      return re.test(email);\n    };\n\n    _this.UserRegistrationFunction = function () {\n      var lanipurl = 'http://192.168.1.4:8000/api/createaccount';\n      var originalurl = 'http://localhost:8000/api/createaccount';\n      var dummie_url = 'https://reqres.in/api/users';\n      var email = _this.state.email;\n      var password = _this.state.password;\n\n      if (!_this.validateEmail(_this.state.email)) {\n        ToastAndroid.show('Enter a Valid email', ToastAndroid.SHORT);\n      } else {\n        fetch(lanipurl, {\n          method: 'POST',\n          headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email: email,\n            password: password\n          })\n        }).then(function (response) {\n          return response.json();\n        }).then(function (responseJson) {\n          console.log(responseJson);\n\n          if (responseJson.message === 'success') {\n            ToastAndroid.show(responseJson.toast, ToastAndroid.SHORT);\n          }\n\n          if (responseJson.message === 'already') {\n            ToastAndroid.show(responseJson.toast, ToastAndroid.SHORT);\n          }\n\n          if (responseJson.message === 'internal error') {\n            ToastAndroid.show(responseJson.toast, ToastAndroid.SHORT);\n          }\n        }).catch(function (error) {\n          console.error(error);\n        });\n      }\n    };\n\n    _this.gotologin = function () {\n      var navigate = _this.props.navigation.navigate;\n      navigate('Profile');\n    };\n\n    _this.componentDidMount = function () {};\n\n    _this.state = {\n      email: '',\n      password: '',\n      data: []\n    };\n    return _this;\n  }\n\n  _createClass(AuthScreen, [{\n    key: \"HomeScreen\",\n    value: function HomeScreen() {\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 17\n        }\n      }, \"This is the home screen of the app\"));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          data = _this$state.data,\n          isLoading = _this$state.isLoading;\n      return React.createElement(View, {\n        style: styles.MainContainer,\n        id: \"regform\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 20,\n          color: \"#000\",\n          textAlign: 'center',\n          marginBottom: 15\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }\n      }, \"Create account\"), React.createElement(TextInput, {\n        style: styles.textfield,\n        placeholder: \"Enter User Email\",\n        onChangeText: function onChangeText(email) {\n          return _this2.setState({\n            email: email\n          });\n        },\n        underlineColorAndroid: \"transparent\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }\n      }), React.createElement(TextInput, {\n        placeholder: \"Enter User Password\",\n        onChangeText: function onChangeText(password) {\n          return _this2.setState({\n            password: password\n          });\n        },\n        underlineColorAndroid: \"transparent\",\n        style: styles.password_style,\n        secureTextEntry: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }\n      }), React.createElement(TouchableOpacity, {\n        onPress: this.UserRegistrationFunction,\n        activeOpacity: 0.95,\n        style: styles.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.btntext,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }\n      }, \"Submit\")), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }\n      }, \"(OR)\"), React.createElement(TouchableOpacity, {\n        onPress: this.gotologin,\n        activeOpacity: 0.95,\n        style: styles.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.btntext,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }\n      }, \"Login\")));\n    }\n  }]);\n\n  return AuthScreen;\n}(Component);\n\nvar styles = StyleSheet.create({\n  MainContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  text: {\n    textAlign: 'center',\n    fontSize: 24,\n    fontWeight: \"200\"\n  },\n  textfield: {\n    height: 40,\n    marginTop: 15,\n    borderColor: 'gray',\n    borderWidth: 1,\n    width: 250,\n    textAlign: 'center',\n    borderRadius: 5\n  },\n  password_style: {\n    height: 40,\n    borderRadius: 5,\n    marginBottom: 25,\n    marginTop: 25,\n    borderColor: 'gray',\n    borderWidth: 1,\n    width: 250,\n    textAlign: 'center'\n  },\n  button: {\n    flexDirection: 'row',\n    height: 40,\n    width: 180,\n    backgroundColor: '#00a98f',\n    alignItems: 'center',\n    justifyContent: 'center',\n    elevation: 3,\n    borderRadius: 5\n  },\n  btntext: {\n    color: 'white',\n    fontSize: 20\n  }\n});\nexport default AuthScreen;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/MOBOMEDIA/mobotcmsdemo/Frontendtech/reactnative/story/TechVlog/components/auth.js"],"names":["React","Component","Input","AuthScreen","props","validateEmail","email","re","test","UserRegistrationFunction","lanipurl","originalurl","dummie_url","state","password","ToastAndroid","show","SHORT","fetch","method","headers","Accept","body","JSON","stringify","then","response","json","responseJson","console","log","message","toast","catch","error","gotologin","navigate","navigation","componentDidMount","data","isLoading","styles","MainContainer","fontSize","color","textAlign","marginBottom","textfield","setState","password_style","button","btntext","StyleSheet","create","flex","justifyContent","alignItems","text","fontWeight","height","marginTop","borderColor","borderWidth","width","borderRadius","flexDirection","backgroundColor","elevation"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,uBAAtB;;;;;;;;;;;;;IAGMC,U;;;;;AAEF,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;;AADe,UAkBnBC,aAlBmB,GAkBH,UAACC,KAAD,EAAW;AACvB,UAAIC,EAAE,GAAG,wJAAT;AACA,aAAOA,EAAE,CAACC,IAAH,CAAQF,KAAR,CAAP;AACH,KArBkB;;AAAA,UAuBnBG,wBAvBmB,GAuBQ,YAAM;AAC7B,UAAMC,QAAQ,GAAG,2CAAjB;AACA,UAAMC,WAAW,GAAG,yCAApB;AACA,UAAMC,UAAU,GAAG,6BAAnB;AAH6B,UAIrBN,KAJqB,GAIX,MAAKO,KAJM,CAIrBP,KAJqB;AAAA,UAKrBQ,QALqB,GAKR,MAAKD,KALG,CAKrBC,QALqB;;AAM7B,UAAI,CAAC,MAAKT,aAAL,CAAmB,MAAKQ,KAAL,CAAWP,KAA9B,CAAL,EAA2C;AACvCS,QAAAA,YAAY,CAACC,IAAb,CAAkB,qBAAlB,EAAyCD,YAAY,CAACE,KAAtD;AACH,OAFD,MAGK;AACDC,QAAAA,KAAK,CAACR,QAAD,EAAW;AACZS,UAAAA,MAAM,EAAE,MADI;AAEZC,UAAAA,OAAO,EAAE;AACLC,YAAAA,MAAM,EAAE,kBADH;AAEL,4BAAgB;AAFX,WAFG;AAMZC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBlB,YAAAA,KAAK,EAAEA,KADU;AAEjBQ,YAAAA,QAAQ,EAAEA;AAFO,WAAf;AANM,SAAX,CAAL,CAYKW,IAZL,CAYU,UAACC,QAAD;AAAA,iBAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,SAZV,EAaKF,IAbL,CAaU,UAACG,YAAD,EAAkB;AACpBC,UAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;;AACA,cAAIA,YAAY,CAACG,OAAb,KAAyB,SAA7B,EAAwC;AACpChB,YAAAA,YAAY,CAACC,IAAb,CAAkBY,YAAY,CAACI,KAA/B,EAAsCjB,YAAY,CAACE,KAAnD;AACH;;AACD,cAAIW,YAAY,CAACG,OAAb,KAAyB,SAA7B,EAAwC;AACpChB,YAAAA,YAAY,CAACC,IAAb,CAAkBY,YAAY,CAACI,KAA/B,EAAsCjB,YAAY,CAACE,KAAnD;AACH;;AACD,cAAIW,YAAY,CAACG,OAAb,KAAyB,gBAA7B,EAA+C;AAC3ChB,YAAAA,YAAY,CAACC,IAAb,CAAkBY,YAAY,CAACI,KAA/B,EAAsCjB,YAAY,CAACE,KAAnD;AACH;AACJ,SAxBL,EAwBOgB,KAxBP,CAwBa,UAACC,KAAD,EAAW;AAChBL,UAAAA,OAAO,CAACK,KAAR,CAAcA,KAAd;AACH,SA1BL;AA2BH;AAEJ,KA9DkB;;AAAA,UA+DnBC,SA/DmB,GA+DP,YAAM;AAAA,UACNC,QADM,GACO,MAAKhC,KAAL,CAAWiC,UADlB,CACND,QADM;AAEdA,MAAAA,QAAQ,CAAC,SAAD,CAAR;AACH,KAlEkB;;AAAA,UAmEnBE,iBAnEmB,GAmEC,YAAM,CAEzB,CArEkB;;AAEf,UAAKzB,KAAL,GAAa;AACTP,MAAAA,KAAK,EAAE,EADE;AAETQ,MAAAA,QAAQ,EAAE,EAFD;AAGTyB,MAAAA,IAAI,EAAE;AAHG,KAAb;AAFe;AAOlB;;;;WAID,sBAAa;AACT,aACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CADJ,CADJ;AAKH;;;WAsDD,kBAAS;AAAA;;AAAA,wBACuB,KAAK1B,KAD5B;AAAA,UACG0B,IADH,eACGA,IADH;AAAA,UACSC,SADT,eACSA,SADT;AAEL,aAEI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,aAApB;AAAmC,QAAA,EAAE,EAAC,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,QAAQ,EAAE,EAAZ;AAAgBC,UAAAA,KAAK,EAAE,MAAvB;AAA+BC,UAAAA,SAAS,EAAE,QAA1C;AAAoDC,UAAAA,YAAY,EAAE;AAAlE,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAEI,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAEL,MAAM,CAACM,SAAzB;AACI,QAAA,WAAW,EAAC,kBADhB;AAEI,QAAA,YAAY,EAAE,sBAAAzC,KAAK;AAAA,iBAAI,MAAI,CAAC0C,QAAL,CAAc;AAAE1C,YAAAA,KAAK,EAALA;AAAF,WAAd,CAAJ;AAAA,SAFvB;AAGI,QAAA,qBAAqB,EAAC,aAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAOI,oBAAC,SAAD;AACI,QAAA,WAAW,EAAC,qBADhB;AAEI,QAAA,YAAY,EAAE,sBAAAQ,QAAQ;AAAA,iBAAI,MAAI,CAACkC,QAAL,CAAc;AAAElC,YAAAA,QAAQ,EAARA;AAAF,WAAd,CAAJ;AAAA,SAF1B;AAGI,QAAA,qBAAqB,EAAC,aAH1B;AAII,QAAA,KAAK,EAAE2B,MAAM,CAACQ,cAJlB;AAKI,QAAA,eAAe,EAAE,IALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPJ,EAcI,oBAAC,gBAAD;AAAkB,QAAA,OAAO,EAAE,KAAKxC,wBAAhC;AAA0D,QAAA,aAAa,EAAE,IAAzE;AAA+E,QAAA,KAAK,EAAEgC,MAAM,CAACS,MAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAET,MAAM,CAACU,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CAdJ,EAiBI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjBJ,EAkBI,oBAAC,gBAAD;AAAkB,QAAA,OAAO,EAAE,KAAKhB,SAAhC;AAA2C,QAAA,aAAa,EAAE,IAA1D;AAAgE,QAAA,KAAK,EAAEM,MAAM,CAACS,MAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAET,MAAM,CAACU,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,CAlBJ,CAFJ;AA0BH;;;;EArGoBlD,S;;AAuGzB,IAAMwC,MAAM,GAAGW,UAAU,CAACC,MAAX,CAAkB;AAC7BX,EAAAA,aAAa,EAAE;AACXY,IAAAA,IAAI,EAAE,CADK;AAEXC,IAAAA,cAAc,EAAE,QAFL;AAGXC,IAAAA,UAAU,EAAE;AAHD,GADc;AAO7BC,EAAAA,IAAI,EAAE;AACFZ,IAAAA,SAAS,EAAE,QADT;AAEFF,IAAAA,QAAQ,EAAE,EAFR;AAGFe,IAAAA,UAAU,EAAE;AAHV,GAPuB;AAY7BX,EAAAA,SAAS,EAAE;AACPY,IAAAA,MAAM,EAAE,EADD;AACKC,IAAAA,SAAS,EAAE,EADhB;AACoBC,IAAAA,WAAW,EAAE,MADjC;AACyCC,IAAAA,WAAW,EAAE,CADtD;AACyDC,IAAAA,KAAK,EAAE,GADhE;AACqElB,IAAAA,SAAS,EAAE,QADhF;AAC0FmB,IAAAA,YAAY,EAAE;AADxG,GAZkB;AAe7Bf,EAAAA,cAAc,EAAE;AACZU,IAAAA,MAAM,EAAE,EADI;AACAK,IAAAA,YAAY,EAAE,CADd;AACiBlB,IAAAA,YAAY,EAAE,EAD/B;AACmCc,IAAAA,SAAS,EAAE,EAD9C;AACkDC,IAAAA,WAAW,EAAE,MAD/D;AACuEC,IAAAA,WAAW,EAAE,CADpF;AACuFC,IAAAA,KAAK,EAAE,GAD9F;AACmGlB,IAAAA,SAAS,EAAE;AAD9G,GAfa;AAkB7BK,EAAAA,MAAM,EAAE;AACJe,IAAAA,aAAa,EAAE,KADX;AAEJN,IAAAA,MAAM,EAAE,EAFJ;AAGJI,IAAAA,KAAK,EAAE,GAHH;AAIJG,IAAAA,eAAe,EAAE,SAJb;AAKJV,IAAAA,UAAU,EAAE,QALR;AAMJD,IAAAA,cAAc,EAAE,QANZ;AAOJY,IAAAA,SAAS,EAAE,CAPP;AAQJH,IAAAA,YAAY,EAAE;AARV,GAlBqB;AA4B7Bb,EAAAA,OAAO,EAAE;AACLP,IAAAA,KAAK,EAAE,OADF;AAELD,IAAAA,QAAQ,EAAE;AAFL;AA5BoB,CAAlB,CAAf;AAkCA,eAAexC,UAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Input } from 'react-native-elements';\r\nimport { AppRegistry, Image, TouchableOpacity, FlatList, StyleSheet, ToastAndroid, TextInput, View, Alert, Button, Text } from 'react-native';\r\n\r\nclass AuthScreen extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            data: [],\r\n        }\r\n    }\r\n\r\n\r\n\r\n    HomeScreen() {\r\n        return (\r\n            <View>\r\n                <Text>This is the home screen of the app</Text>\r\n            </View>\r\n        );\r\n    }\r\n    validateEmail = (email) => {\r\n        var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return re.test(email);\r\n    };\r\n\r\n    UserRegistrationFunction = () => {\r\n        const lanipurl = 'http://192.168.1.4:8000/api/createaccount';\r\n        const originalurl = 'http://localhost:8000/api/createaccount';\r\n        const dummie_url = 'https://reqres.in/api/users'\r\n        const { email } = this.state;\r\n        const { password } = this.state;\r\n        if (!this.validateEmail(this.state.email)) {\r\n            ToastAndroid.show('Enter a Valid email', ToastAndroid.SHORT);\r\n        }\r\n        else {\r\n            fetch(lanipurl, {\r\n                method: 'POST',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    email: email,\r\n                    password: password\r\n                })\r\n\r\n            })\r\n                .then((response) => response.json())\r\n                .then((responseJson) => {\r\n                    console.log(responseJson)\r\n                    if (responseJson.message === 'success') {\r\n                        ToastAndroid.show(responseJson.toast, ToastAndroid.SHORT);\r\n                    }\r\n                    if (responseJson.message === 'already') {\r\n                        ToastAndroid.show(responseJson.toast, ToastAndroid.SHORT);\r\n                    }\r\n                    if (responseJson.message === 'internal error') {\r\n                        ToastAndroid.show(responseJson.toast, ToastAndroid.SHORT);\r\n                    }\r\n                }).catch((error) => {\r\n                    console.error(error);\r\n                });\r\n        }\r\n\r\n    };\r\n    gotologin = () => {\r\n        const { navigate } = this.props.navigation;\r\n        navigate('Profile');\r\n    }\r\n    componentDidMount = () => {\r\n\r\n    }\r\n\r\n    render() {\r\n        const { data, isLoading } = this.state;\r\n        return (\r\n\r\n            <View style={styles.MainContainer} id=\"regform\">\r\n                <Text style={{ fontSize: 20, color: \"#000\", textAlign: 'center', marginBottom: 15 }}>Create account</Text>\r\n                <TextInput style={styles.textfield}\r\n                    placeholder=\"Enter User Email\"\r\n                    onChangeText={email => this.setState({ email })}\r\n                    underlineColorAndroid='transparent'\r\n                />\r\n                <TextInput\r\n                    placeholder=\"Enter User Password\"\r\n                    onChangeText={password => this.setState({ password })}\r\n                    underlineColorAndroid='transparent'\r\n                    style={styles.password_style}\r\n                    secureTextEntry={true}\r\n                />\r\n                <TouchableOpacity onPress={this.UserRegistrationFunction} activeOpacity={0.95} style={styles.button}>\r\n                    <Text style={styles.btntext}>Submit</Text>\r\n                </TouchableOpacity>\r\n                <Text>(OR)</Text>\r\n                <TouchableOpacity onPress={this.gotologin} activeOpacity={0.95} style={styles.button}>\r\n                    <Text style={styles.btntext}>Login</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n\r\n        );\r\n    }\r\n}\r\nconst styles = StyleSheet.create({\r\n    MainContainer: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n\r\n    text: {\r\n        textAlign: 'center',\r\n        fontSize: 24,\r\n        fontWeight: \"200\",\r\n    },\r\n    textfield: {\r\n        height: 40, marginTop: 15, borderColor: 'gray', borderWidth: 1, width: 250, textAlign: 'center', borderRadius: 5\r\n    },\r\n    password_style: {\r\n        height: 40, borderRadius: 5, marginBottom: 25, marginTop: 25, borderColor: 'gray', borderWidth: 1, width: 250, textAlign: 'center'\r\n    },\r\n    button: {\r\n        flexDirection: 'row',\r\n        height: 40,\r\n        width: 180,\r\n        backgroundColor: '#00a98f',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        elevation: 3,\r\n        borderRadius: 5\r\n    },\r\n    btntext: {\r\n        color: 'white',\r\n        fontSize: 20\r\n    }\r\n});\r\n\r\nexport default AuthScreen;"]},"metadata":{},"sourceType":"module"}