{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\MOBOMEDIA\\\\mobotcmsdemo\\\\Frontendtech\\\\reactnative\\\\story\\\\TechVlog\\\\Screens\\\\splashscreen.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport AsyncStorage from '@react-native-community/async-storage';\n\nvar SplashScreen = function SplashScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      animating = _useState2[0],\n      setAnimating = _useState2[1];\n\n  useEffect(function () {\n    setTimeout(function () {\n      setAnimating(false);\n      AsyncStorage.getItem('user_id').then(function (value) {\n        return navigation.replace(value === null ? 'Auth' : 'DrawerNavigationRoutes');\n      });\n    }, 5000);\n  }, []);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    style: {\n      width: '90%',\n      resizeMode: 'contain',\n      margin: 30\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }), React.createElement(ActivityIndicator, {\n    animating: animating,\n    color: \"#FFFFFF\",\n    size: \"large\",\n    style: styles.activityIndicator,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default SplashScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#307ecc'\n  },\n  activityIndicator: {\n    alignItems: 'center',\n    height: 80\n  }\n});","map":{"version":3,"sources":["C:/Users/Admin/Desktop/MOBOMEDIA/mobotcmsdemo/Frontendtech/reactnative/story/TechVlog/Screens/splashscreen.js"],"names":["React","useState","useEffect","AsyncStorage","SplashScreen","navigation","animating","setAnimating","setTimeout","getItem","then","value","replace","styles","container","width","resizeMode","margin","activityIndicator","StyleSheet","create","flex","alignItems","justifyContent","backgroundColor","height"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;AAQA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AAAA,kBAEHJ,QAAQ,CAAC,IAAD,CAFL;AAAA;AAAA,MAE9BK,SAF8B;AAAA,MAEnBC,YAFmB;;AAIrCL,EAAAA,SAAS,CAAC,YAAM;AACZM,IAAAA,UAAU,CAAC,YAAM;AACbD,MAAAA,YAAY,CAAC,KAAD,CAAZ;AAIAJ,MAAAA,YAAY,CAACM,OAAb,CAAqB,SAArB,EAAgCC,IAAhC,CAAqC,UAACC,KAAD;AAAA,eACjCN,UAAU,CAACO,OAAX,CACID,KAAK,KAAK,IAAV,GAAiB,MAAjB,GAA0B,wBAD9B,CADiC;AAAA,OAArC;AAKH,KAVS,EAUP,IAVO,CAAV;AAWH,GAZQ,EAYN,EAZM,CAAT;AAcA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEE,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAEI,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE,KAAT;AAAgBC,MAAAA,UAAU,EAAE,SAA5B;AAAuCC,MAAAA,MAAM,EAAE;AAA/C,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAKI,oBAAC,iBAAD;AACI,IAAA,SAAS,EAAEX,SADf;AAEI,IAAA,KAAK,EAAC,SAFV;AAGI,IAAA,IAAI,EAAC,OAHT;AAII,IAAA,KAAK,EAAEO,MAAM,CAACK,iBAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADJ;AAcH,CAhCD;;AAkCA,eAAed,YAAf;AAEA,IAAMS,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC7BN,EAAAA,SAAS,EAAE;AACPO,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,UAAU,EAAE,QAFL;AAGPC,IAAAA,cAAc,EAAE,QAHT;AAIPC,IAAAA,eAAe,EAAE;AAJV,GADkB;AAO7BN,EAAAA,iBAAiB,EAAE;AACfI,IAAAA,UAAU,EAAE,QADG;AAEfG,IAAAA,MAAM,EAAE;AAFO;AAPU,CAAlB,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n    ActivityIndicator,\r\n    View,\r\n    StyleSheet,\r\n    Image\r\n} from 'react-native';\r\n\r\nimport AsyncStorage from '@react-native-community/async-storage';\r\n\r\nconst SplashScreen = ({ navigation }) => {\r\n    //State for ActivityIndicator animation\r\n    const [animating, setAnimating] = useState(true);\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            setAnimating(false);\r\n            //Check if user_id is set or not\r\n            //If not then send for Authentication\r\n            //else send to Home Screen\r\n            AsyncStorage.getItem('user_id').then((value) =>\r\n                navigation.replace(\r\n                    value === null ? 'Auth' : 'DrawerNavigationRoutes'\r\n                ),\r\n            );\r\n        }, 5000);\r\n    }, []);\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <Image\r\n                // source={require('../Image/aboutreact.png')}\r\n                style={{ width: '90%', resizeMode: 'contain', margin: 30 }}\r\n            />\r\n            <ActivityIndicator\r\n                animating={animating}\r\n                color=\"#FFFFFF\"\r\n                size=\"large\"\r\n                style={styles.activityIndicator}\r\n            />\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default SplashScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: '#307ecc',\r\n    },\r\n    activityIndicator: {\r\n        alignItems: 'center',\r\n        height: 80,\r\n    },\r\n});"]},"metadata":{},"sourceType":"module"}