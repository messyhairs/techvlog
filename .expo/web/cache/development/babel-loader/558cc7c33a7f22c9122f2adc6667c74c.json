{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\MOBOMEDIA\\\\mobotcmsdemo\\\\Frontendtech\\\\reactnative\\\\story\\\\TechVlog\\\\Screens\\\\storycreate.js\";\n\nimport React, { useState, createRef } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport AsyncStorage from '@react-native-community/async-storage';\nimport Axios from 'axios';\nimport Textarea from 'react-native-textarea';\nimport Loader from \"./loader\";\n\nvar Storycreatescreen = function Storycreatescreen(props) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setusername = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      useremail = _useState4[0],\n      setuseremail = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      title = _useState6[0],\n      settitle = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      storypara = _useState8[0],\n      setstorypara = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      errortext = _useState10[0],\n      setErrortext = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      isRegistraionSuccess = _useState12[0],\n      setIsRegistraionSuccess = _useState12[1];\n\n  var emailInputRef = createRef();\n  var ageInputRef = createRef();\n  var addressInputRef = createRef();\n  var passwordInputRef = createRef();\n\n  var handleSubmitButton = function handleSubmitButton() {\n    var users, userdatas, gettoken, getuserid, geturl, config;\n    return _regeneratorRuntime.async(function handleSubmitButton$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setErrortext('');\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('userdatas'));\n\n          case 4:\n            users = _context.sent;\n            userdatas = JSON.parse(users);\n            console.log(userdatas);\n            gettoken = userdatas.token;\n            getuserid = userdatas.userid;\n            console.log(gettoken);\n            geturl = 'http://192.168.1.4:8000/api/getuserdetails/';\n            config = {\n              headers: {\n                'content-type': 'multipart/form-data',\n                'Authorization': 'Bearer ' + gettoken,\n                'Accept': 'application/json'\n              }\n            };\n            Axios.get(geturl + getuserid, config).then(function (response) {\n              console.log(response.data.profile.useremail);\n              var url = 'http://192.168.1.4:8000/api/createstory';\n              fetch(url, {\n                method: 'POST',\n                headers: {\n                  Accept: 'application/json',\n                  'Content-Type': 'application/json',\n                  'Authorization': 'Bearer ' + gettoken\n                },\n                body: JSON.stringify({\n                  username: response.data.profile.username,\n                  useremail: response.data.profile.useremail,\n                  title: title,\n                  storypara: storypara\n                })\n              }).then(function (response) {\n                return response.json();\n              }).then(function (responseJson) {\n                console.log(responseJson);\n\n                if (responseJson.message === 'done') {\n                  setIsRegistraionSuccess(true);\n                  console.log('Story created Successful');\n                } else {\n                  setErrortext(responseJson.msg);\n                }\n              }).catch(function (error) {\n                console.error(error);\n              });\n            }).catch(function (error) {\n              console.log(error);\n            });\n            _context.next = 18;\n            break;\n\n          case 15:\n            _context.prev = 15;\n            _context.t0 = _context[\"catch\"](1);\n            console.log(_context.t0);\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 15]], Promise);\n  };\n\n  if (isRegistraionSuccess) {\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        backgroundColor: '#307ecc',\n        justifyContent: 'center'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: styles.successTextStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 17\n      }\n    }, \"Story created Successfully\"), React.createElement(TouchableOpacity, {\n      style: styles.buttonStyle,\n      activeOpacity: 0.5,\n      onPress: function onPress() {\n        return props.navigation.navigate('LoginScreen');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: styles.buttonTextStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 21\n      }\n    }, \"view stories now\")));\n  }\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 9\n    }\n  }, \"Hello, world!\"));\n};\n\nexport default Storycreatescreen;\nvar styles = StyleSheet.create({\n  SectionStyle: {\n    flexDirection: 'row',\n    height: 40,\n    marginTop: 20,\n    marginLeft: 35,\n    marginRight: 35,\n    margin: 10\n  },\n  buttonbot: {\n    position: 'relative',\n    bottom: 0\n  },\n  inputStyle: {\n    flex: 1,\n    color: 'white',\n    paddingLeft: 15,\n    paddingRight: 15,\n    borderWidth: 1,\n    borderRadius: 30,\n    borderColor: '#dadae8'\n  },\n  errorTextStyle: {\n    color: 'red',\n    textAlign: 'center',\n    fontSize: 14\n  },\n  successTextStyle: {\n    color: 'white',\n    textAlign: 'center',\n    fontSize: 18,\n    padding: 30\n  },\n  textareaContainer: {\n    height: 180,\n    padding: 5\n  },\n  textarea: {\n    fontSize: 14,\n    color: '#333'\n  },\n  bottom: {\n    justifyContent: 'flex-end'\n  },\n  maincontainer: {\n    height: '100%'\n  }\n});","map":{"version":3,"sources":["C:/Users/Admin/Desktop/MOBOMEDIA/mobotcmsdemo/Frontendtech/reactnative/story/TechVlog/Screens/storycreate.js"],"names":["React","useState","createRef","AsyncStorage","Axios","Textarea","Loader","Storycreatescreen","props","username","setusername","useremail","setuseremail","title","settitle","storypara","setstorypara","errortext","setErrortext","isRegistraionSuccess","setIsRegistraionSuccess","emailInputRef","ageInputRef","addressInputRef","passwordInputRef","handleSubmitButton","getItem","users","userdatas","JSON","parse","console","log","gettoken","token","getuserid","userid","geturl","config","headers","get","then","response","data","profile","url","fetch","method","Accept","body","stringify","json","responseJson","message","msg","catch","error","flex","backgroundColor","justifyContent","styles","successTextStyle","buttonStyle","navigation","navigate","buttonTextStyle","alignItems","StyleSheet","create","SectionStyle","flexDirection","height","marginTop","marginLeft","marginRight","margin","buttonbot","position","bottom","inputStyle","color","paddingLeft","paddingRight","borderWidth","borderRadius","borderColor","errorTextStyle","textAlign","fontSize","padding","textareaContainer","textarea","maincontainer"],"mappings":"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","sourcesContent":["// import React, { Component, useState } from 'react';\r\n// import {\r\n//     SafeAreaView, StyleSheet,\r\n//     TextInput,\r\n//     View,\r\n//     Text,\r\n//     Image,\r\n//     KeyboardAvoidingView,\r\n//     Keyboard,\r\n//     TouchableOpacity,\r\n//     ScrollView\r\n// } from 'react-native';\r\n// import AsyncStorage from '@react-native-community/async-storage';\r\n// import Axios from 'axios';\r\n\r\n// export default class Storycreatescreen extends Component {\r\n//     constructor(props) {\r\n//         super(props)\r\n//         this.state = {\r\n//             data: [],\r\n//             profiles: [],\r\n//             title: '',\r\n//             storypara: '',\r\n//             username: '',\r\n//         }\r\n//     }\r\n//     getdata = async () => {\r\n//         try {\r\n//             let users = await AsyncStorage.getItem('userdatas');\r\n//             const userdatas = JSON.parse(users);\r\n//             console.log(userdatas);\r\n//             this.setState({ data: userdatas });\r\n//             const gettoken = this.state.data.token;\r\n//             const getuserid = this.state.data.userid;\r\n//             console.log(gettoken);\r\n//             const geturl = 'http://192.168.1.4:8000/api/getuserdetails/';\r\n//             const config = {\r\n//                 headers: {\r\n//                     'content-type': 'multipart/form-data',\r\n//                     'Authorization': 'Bearer ' + gettoken,\r\n//                     'Accept': 'application/json',\r\n//                 },\r\n\r\n//             };\r\n//             Axios.get(geturl + getuserid, config)\r\n//                 .then(response => {\r\n//                     this.setState({ profiles: response.data.profile });\r\n//                     // console.log(response.data.profile.useremail)\r\n//                 })\r\n//                 .catch(function (error) {\r\n//                     console.log(error);\r\n//                 })\r\n//         } catch (e) {\r\n//             // error reading value\r\n//             console.log(e);\r\n//         }\r\n//     }\r\n//     componentDidMount() {\r\n//         // setTimeout(() => {\r\n//         //   this.setState({favoritecolor: \"yellow\"})\r\n//         // alert('hello*********')\r\n//         this.getdata();\r\n//         // }, 1000)\r\n//     }\r\n//     poststory = () => {\r\n//         //Show Loader\r\n//         // setLoading(true);\r\n//         const url = 'http://192.168.1.4:8000/api/createstory';\r\n//         const  title  = this.state;\r\n//         const storypara  = this.state;\r\n//         const username = this.state.profiles.username;\r\n//         const gettoken = this.state.data.token;\r\n//         console.log(this.state.title);\r\n//         console.log(this.state.storypara);\r\n//         console.log(username);\r\n//         fetch(url, {\r\n//             method: 'POST',\r\n//             headers: {\r\n//                 'content-type': 'multipart/form-data',\r\n//                 'Authorization': 'Bearer ' + gettoken,\r\n//                 'Accept': 'application/json',\r\n//             },\r\n//             body: JSON.stringify({\r\n//                 username: username,\r\n//                 // useremail: this.state.profiles.useremail,\r\n//                 title: title,\r\n//                 storypara: storypara\r\n//             })\r\n//         })\r\n//             .then((response) => response.json())\r\n//             .then((responseJson) => {\r\n//                 //Hide Loader\r\n//                 // setLoading(false);\r\n//                 console.log(responseJson);\r\n//                 if (responseJson.message === 'done') {\r\n//                     setIsRegistraionSuccess(true);\r\n//                     console.log(\r\n//                         'Story posted Successful'\r\n//                     );\r\n//                 } else {\r\n//                     setErrortext(responseJson.msg);\r\n//                 }\r\n//             })\r\n//             .catch((error) => {\r\n//                 //Hide Loader\r\n//                 // setLoading(false);\r\n//                 console.error(error);\r\n//             });\r\n//     };\r\n//     render() {\r\n//         return (\r\n//             <SafeAreaView style={{ flex: 1 }}>\r\n//                 {/* <View style={{ flex: 1 }}> */}\r\n//                 {/* <Loader loading={loading} /> */}\r\n//                 <ScrollView\r\n//                     keyboardShouldPersistTaps=\"handled\"\r\n//                     contentContainerStyle={{\r\n//                         justifyContent: 'center',\r\n//                         alignContent: 'center',\r\n//                     }}>\r\n\r\n//                     <KeyboardAvoidingView enabled>\r\n//                         <View style={styles.SectionStyle}>\r\n//                             <TextInput\r\n//                                 style={styles.hiddenInput}\r\n//                                 underlineColorAndroid=\"#f000\"\r\n//                                 placeholder=\"Enter Name\"\r\n//                                 defaultValue={this.state.profiles.username}\r\n//                                 placeholderTextColor=\"#8b9cb5\"\r\n//                                 autoCapitalize=\"sentences\"\r\n//                                 returnKeyType=\"next\"\r\n//                             />\r\n//                         </View>\r\n//                         {/* <View style={styles.SectionStyle}>\r\n//                                 <TextInput\r\n//                                     style={styles.hiddenInput}\r\n//                                     onChangeText={(useremail) => setuseremail(useremail)}\r\n//                                     underlineColorAndroid=\"#f000\"\r\n//                                     placeholder=\"Enter Email\"\r\n//                                     defaultValue={this.state.profiles.useremail}\r\n//                                     placeholderTextColor=\"#8b9cb5\"\r\n//                                     keyboardType=\"email-address\"\r\n//                                     returnKeyType=\"next\"\r\n//                                 />\r\n//                             </View> */}\r\n//                         <View style={styles.SectionStyle}>\r\n//                             <TextInput\r\n//                                 style={styles.inputStyle}\r\n//                                 onChangeText={title => this.setState({ title })}\r\n//                                 underlineColorAndroid=\"#f000\"\r\n//                                 placeholder=\"Enter story title\"\r\n//                                 placeholderTextColor=\"#8b9cb5\"\r\n//                                 returnKeyType=\"next\"\r\n//                             />\r\n//                         </View>\r\n//                         <View style={styles.SectionStyle}>\r\n//                             <TextInput\r\n//                                 style={styles.inputStyle}\r\n//                                 onChangeText={storypara => this.setState({ storypara })}\r\n//                                 underlineColorAndroid=\"#f000\"\r\n//                                 placeholder=\"Enter content of story\"\r\n//                                 placeholderTextColor=\"#8b9cb5\"\r\n//                                 autoCapitalize=\"sentences\"\r\n//                                 returnKeyType=\"next\"\r\n//                                 blurOnSubmit={false}\r\n//                             />\r\n//                         </View>\r\n//                         {/* {errortext != '' ? (\r\n//                                 <Text style={styles.errorTextStyle}>\r\n//                                     {errortext}\r\n//                                 </Text>\r\n//                             ) : null} */}\r\n//                         <TouchableOpacity\r\n//                             style={styles.buttonStyle}\r\n//                             activeOpacity={0.5} onPress={this.poststory}>\r\n//                             <Text style={styles.buttonTextStyle}>post now</Text>\r\n//                         </TouchableOpacity>\r\n//                     </KeyboardAvoidingView>\r\n//                 </ScrollView>\r\n//                 {/* </View>    \r\n//                         </SafeAreaView> */}\r\n//             </SafeAreaView>\r\n//         )\r\n//     }\r\n\r\n// }\r\n\r\n// const styles = StyleSheet.create({\r\n//     SectionStyle: {\r\n//         flexDirection: 'row',\r\n//         height: 40,\r\n//         marginTop: 20,\r\n//         marginLeft: 35,\r\n//         marginRight: 35,\r\n//         margin: 10,\r\n//     },\r\n//     buttonStyle: {\r\n//         backgroundColor: '#ff4f81',\r\n//         borderWidth: 0,\r\n//         color: '#FFFFFF',\r\n//         borderColor: '#7DE24E',\r\n//         height: 40,\r\n//         alignItems: 'center',\r\n//         borderRadius: 30,\r\n//         marginLeft: 35,\r\n//         marginRight: 35,\r\n//         marginTop: 20,\r\n//         marginBottom: 20,\r\n//     },\r\n//     buttonTextStyle: {\r\n//         color: '#FFFFFF',\r\n//         paddingVertical: 10,\r\n//         fontSize: 16,\r\n//     },\r\n//     inputStyle: {\r\n//         flex: 1,\r\n//         color: 'black',\r\n//         paddingLeft: 15,\r\n//         paddingRight: 15,\r\n//         borderWidth: 1,\r\n//         borderRadius: 30,\r\n//         borderColor: '#dadae8',\r\n//     },\r\n//     errorTextStyle: {\r\n//         color: 'red',\r\n//         textAlign: 'center',\r\n//         fontSize: 14,\r\n//     },\r\n//     successTextStyle: {\r\n//         color: 'white',\r\n//         textAlign: 'center',\r\n//         fontSize: 18,\r\n//         padding: 30,\r\n//     },\r\n//     hiddenInput: {\r\n//         width: 0,\r\n//         height: 0,\r\n//     },\r\n// });\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState, createRef } from 'react';\r\nimport {\r\n    StyleSheet,\r\n    TextInput,\r\n    View,\r\n    Text,\r\n    Image,\r\n    KeyboardAvoidingView,\r\n    Keyboard,\r\n    TouchableOpacity,\r\n    ScrollView,\r\n} from 'react-native';\r\nimport AsyncStorage from '@react-native-community/async-storage';\r\nimport Axios from 'axios';\r\nimport Textarea from 'react-native-textarea';\r\n\r\nimport Loader from './loader';\r\n\r\nconst Storycreatescreen = (props) => {\r\n    const [username, setusername] = useState('');\r\n    const [useremail, setuseremail] = useState('');\r\n    const [title, settitle] = useState('');\r\n    const [storypara, setstorypara] = useState('');\r\n    // const [password, setpassword] = useState('');\r\n    // const [loading, setLoading] = useState(false);\r\n    const [errortext, setErrortext] = useState('');\r\n    const [\r\n        isRegistraionSuccess,\r\n        setIsRegistraionSuccess\r\n    ] = useState(false);\r\n\r\n    const emailInputRef = createRef();\r\n    const ageInputRef = createRef();\r\n    const addressInputRef = createRef();\r\n    const passwordInputRef = createRef();\r\n\r\n    const handleSubmitButton = async () => {\r\n        setErrortext('');\r\n        // if (!username) {\r\n        //     alert('Please fill Name');\r\n        //     return;\r\n        // }\r\n        // if (!useremail) {\r\n        //     alert('Please fill Email');\r\n        //     return;\r\n        // }\r\n        // if (!userage) {\r\n        //     alert('Please fill Age');\r\n        //     return;\r\n        // }\r\n        // if (!useraddress) {\r\n        //     alert('Please fill Address');\r\n        //     return;\r\n        // }\r\n        // if (!password) {\r\n        //     alert('Please fill Password');\r\n        //     return;\r\n        // }\r\n        //Show Loader\r\n        // setLoading(true);\r\n        try {\r\n            let users = await AsyncStorage.getItem('userdatas');\r\n            const userdatas = JSON.parse(users);\r\n            console.log(userdatas);\r\n            // this.setState({ data: userdatas });\r\n            const gettoken = userdatas.token;\r\n            const getuserid = userdatas.userid;\r\n            console.log(gettoken);\r\n            const geturl = 'http://192.168.1.4:8000/api/getuserdetails/';\r\n            const config = {\r\n                headers: {\r\n                    'content-type': 'multipart/form-data',\r\n                    'Authorization': 'Bearer ' + gettoken,\r\n                    'Accept': 'application/json',\r\n                },\r\n\r\n            };\r\n            Axios.get(geturl + getuserid, config)\r\n                .then(response => {\r\n                    // this.setState({ profiles: response.data.profile });\r\n                    console.log(response.data.profile.useremail)\r\n                    const url = 'http://192.168.1.4:8000/api/createstory';\r\n                    fetch(url, {\r\n                        method: 'POST',\r\n                        headers: {\r\n                            Accept: 'application/json',\r\n                            'Content-Type': 'application/json',\r\n                            'Authorization': 'Bearer ' + gettoken\r\n                        },\r\n                        body: JSON.stringify({\r\n                            username: response.data.profile.username,\r\n                            useremail: response.data.profile.useremail,\r\n                            // password: password,\r\n                            title: title,\r\n                            storypara: storypara,\r\n                        })\r\n                    })\r\n                        .then((response) => response.json())\r\n                        .then((responseJson) => {\r\n                            //Hide Loader\r\n                            // setLoading(false);\r\n                            console.log(responseJson);\r\n                            if (responseJson.message === 'done') {\r\n                                setIsRegistraionSuccess(true);\r\n                                console.log(\r\n                                    'Story created Successful'\r\n                                );\r\n                            } else {\r\n                                setErrortext(responseJson.msg);\r\n                            }\r\n                        })\r\n                        .catch((error) => {\r\n                            //Hide Loader\r\n                            // setLoading(false);\r\n                            console.error(error);\r\n                        });\r\n\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n        }\r\n        catch (e) {\r\n            // error reading value\r\n            console.log(e);\r\n        }\r\n    }\r\n    if (isRegistraionSuccess) {\r\n        return (\r\n            <View\r\n                style={{\r\n                    flex: 1,\r\n                    backgroundColor: '#307ecc',\r\n                    justifyContent: 'center',\r\n                }}>\r\n                <Text style={styles.successTextStyle}>\r\n                    Story created Successfully\r\n        </Text>\r\n                <TouchableOpacity\r\n                    style={styles.buttonStyle}\r\n                    activeOpacity={0.5}\r\n                    onPress={() => props.navigation.navigate('LoginScreen')}>\r\n                    <Text style={styles.buttonTextStyle}>view stories now</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        );\r\n    }\r\n    return (\r\n        // <View style={styles.maincontainer}>\r\n        // {/* <Loader loading={loading} /> */}\r\n        //     <ScrollView\r\n        //         keyboardShouldPersistTaps=\"handled\"\r\n        //         contentContainerStyle={{\r\n        //             justifyContent: 'center',\r\n        //             alignContent: 'center',\r\n        //         }}>\r\n        //         {/* <KeyboardAvoidingView enabled> */}\r\n\r\n        //             <View style={styles.SectionStyle}>\r\n        //                 <TextInput\r\n        //                     style={styles.inputStyle}\r\n        //                     onChangeText={(title) => settitle(title)}\r\n        //                     underlineColorAndroid=\"#f000\"\r\n        //                     placeholder=\"Enter Title\"\r\n        //                     placeholderTextColor=\"#8b9cb5\"\r\n        //                     returnKeyType=\"next\"\r\n        //                 />\r\n        //             </View>\r\n        //             <View style={styles.SectionStyle}>\r\n        //                 <Textarea\r\n        //                     containerStyle={styles.textareaContainer}\r\n        //                     style={styles.textarea}\r\n        //                     onChangeText={(storypara) =>\r\n        //                         setstorypara(storypara)\r\n        //                     }\r\n        //                     maxLength={120}\r\n        //                     placeholder='Content of TechVlog'\r\n        //                     placeholderTextColor={'#c7c7c7'}\r\n        //                     underlineColorAndroid={'transparent'}\r\n        //                 />\r\n        //             </View>\r\n        //             <View style={{ flex: 1, justifyContent: 'flex-end' }}>\r\n        //             <TouchableOpacity\r\n        //                 style={{\r\n        //                     width: '100%',\r\n        //                     height: 40,\r\n        //                     backgroundColor: 'red',\r\n        //                     alignItems: 'center',\r\n        //                     justifyContent: 'center',\r\n        //                 }}>\r\n        //                 <Text style={{ color: 'white', fontSize: 16 }}>Bottom Button</Text>\r\n        //             </TouchableOpacity>\r\n        //         </View>\r\n        //         {/* </KeyboardAvoidingView> */}\r\n           \r\n        //     </ScrollView>\r\n        // </View>\r\n        <View\r\n        style={{\r\n          flex: 1,\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\"\r\n        }}>\r\n        <Text>Hello, world!</Text>\r\n      </View>\r\n    );\r\n};\r\nexport default Storycreatescreen;\r\n\r\nconst styles = StyleSheet.create({\r\n    SectionStyle: {\r\n        flexDirection: 'row',\r\n        height: 40,\r\n        marginTop: 20,\r\n        marginLeft: 35,\r\n        marginRight: 35,\r\n        margin: 10,\r\n    },\r\n    buttonbot: {\r\n        position: 'relative',\r\n        bottom: 0\r\n    },\r\n    inputStyle: {\r\n        flex: 1,\r\n        color: 'white',\r\n        paddingLeft: 15,\r\n        paddingRight: 15,\r\n        borderWidth: 1,\r\n        borderRadius: 30,\r\n        borderColor: '#dadae8',\r\n    },\r\n    errorTextStyle: {\r\n        color: 'red',\r\n        textAlign: 'center',\r\n        fontSize: 14,\r\n    },\r\n    successTextStyle: {\r\n        color: 'white',\r\n        textAlign: 'center',\r\n        fontSize: 18,\r\n        padding: 30,\r\n    },\r\n    textareaContainer: {\r\n        height: 180,\r\n        padding: 5,\r\n    },\r\n    textarea: {\r\n        // textAlignVertical: 'top',  // hack android\r\n        // height: 170,\r\n        fontSize: 14,\r\n        color: '#333',\r\n    },\r\n    bottom: {\r\n        // flex: 1,\r\n        justifyContent: 'flex-end',\r\n        // marginBottom: 36\r\n    },\r\n    maincontainer: {\r\n        height:'100%',\r\n        // backgroundColor: 'red'\r\n    }\r\n});"]},"metadata":{},"sourceType":"module"}