{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\MOBOMEDIA\\\\mobotcmsdemo\\\\Frontendtech\\\\reactnative\\\\story\\\\TechVlog\\\\node_modules\\\\react-native-toaster\\\\src\\\\Toast.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ToastStyles from \"./ToastStyles\";\n\nvar noop = function noop() {\n  return 0;\n};\n\nvar Toast = function (_Component) {\n  _inherits(Toast, _Component);\n\n  var _super = _createSuper(Toast);\n\n  function Toast() {\n    var _this;\n\n    _classCallCheck(this, Toast);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      animatedValue: new Animated.Value(0),\n      timeoutId: null\n    };\n\n    _this.onPress = function () {\n      _this.hideToast();\n\n      _this.props.onPress();\n    };\n\n    return _this;\n  }\n\n  _createClass(Toast, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.showToast();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var timeoutId = this.state.timeoutId;\n      clearTimeout(timeoutId);\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (this.props.id !== nextProps.id) {\n        this.showToast();\n      }\n    }\n  }, {\n    key: \"showToast\",\n    value: function showToast() {\n      var _this2 = this;\n\n      var animatedValue = new Animated.Value(0);\n      this.setState({\n        animatedValue: animatedValue\n      });\n      Animated.timing(animatedValue, {\n        toValue: 1,\n        duration: 350\n      }).start();\n      var _this$props = this.props,\n          duration = _this$props.duration,\n          onShow = _this$props.onShow;\n      var timeoutId = setTimeout(function () {\n        return _this2.hideToast();\n      }, duration + 350);\n      this.setState({\n        timeoutId: timeoutId\n      }, onShow);\n    }\n  }, {\n    key: \"hideToast\",\n    value: function hideToast() {\n      var _this$state = this.state,\n          timeoutId = _this$state.timeoutId,\n          animatedValue = _this$state.animatedValue;\n      clearTimeout(timeoutId);\n      Animated.timing(animatedValue, {\n        toValue: 0,\n        duration: 350\n      }).start();\n      setTimeout(this.props.onHide, 350);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var y = this.state.animatedValue.interpolate({\n        inputRange: [0, 1],\n        outputRange: [-this.props.height, 0]\n      });\n      var styles = this.props.styles;\n      var text = this.props.text;\n\n      if (Object.prototype.toString.call(text) === '[object String]') {\n        text = React.createElement(View, {\n          style: styles.container,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 9\n          }\n        }, React.createElement(Text, {\n          style: styles.text,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 11\n          }\n        }, text));\n      }\n\n      return React.createElement(Animated.View, {\n        style: {\n          position: 'absolute',\n          top: 0,\n          right: 0,\n          left: 0,\n          zIndex: 9999,\n          transform: [{\n            translateY: y\n          }]\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 7\n        }\n      }, React.createElement(TouchableWithoutFeedback, {\n        onPress: this.onPress,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 9\n        }\n      }, text));\n    }\n  }]);\n\n  return Toast;\n}(Component);\n\nToast.propTypes = {\n  id: PropTypes.string.isRequired,\n  text: PropTypes.oneOfType([PropTypes.string, PropTypes.node]).isRequired,\n  styles: PropTypes.object,\n  duration: PropTypes.number,\n  height: PropTypes.number,\n  onShow: PropTypes.func,\n  onHide: PropTypes.func,\n  onPress: PropTypes.func\n};\nToast.defaultProps = {\n  styles: ToastStyles.info,\n  duration: 3000,\n  height: 100,\n  onShow: noop,\n  onHide: noop,\n  onPress: noop\n};\nexport default Toast;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/MOBOMEDIA/mobotcmsdemo/Frontendtech/reactnative/story/TechVlog/node_modules/react-native-toaster/src/Toast.js"],"names":["React","Component","PropTypes","ToastStyles","noop","Toast","state","animatedValue","Animated","Value","timeoutId","onPress","hideToast","props","showToast","clearTimeout","nextProps","id","setState","timing","toValue","duration","start","onShow","setTimeout","onHide","y","interpolate","inputRange","outputRange","height","styles","text","Object","prototype","toString","call","container","position","top","right","left","zIndex","transform","translateY","propTypes","string","isRequired","oneOfType","node","object","number","func","defaultProps","info"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  Animated,\n  TouchableWithoutFeedback,\n  View,\n  Text\n} from 'react-native'\nimport ToastStyles from './ToastStyles'\n\nconst noop = () => 0\n\nclass Toast extends Component {\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    text: PropTypes.oneOfType([PropTypes.string, PropTypes.node]).isRequired,\n    styles: PropTypes.object,\n    duration: PropTypes.number,\n    height: PropTypes.number,\n    onShow: PropTypes.func,\n    onHide: PropTypes.func,\n    onPress: PropTypes.func\n  }\n\n  static defaultProps = {\n    styles: ToastStyles.info,\n    duration: 3000,\n    height: 100,\n    onShow: noop,\n    onHide: noop,\n    onPress: noop\n  }\n\n  state = { animatedValue: new Animated.Value(0), timeoutId: null }\n\n  componentWillMount () {\n    this.showToast()\n  }\n\n  componentWillUnmount () {\n    const { timeoutId } = this.state;\n    clearTimeout(timeoutId)\n  }\n\n  componentWillReceiveProps (nextProps) {\n    if (this.props.id !== nextProps.id) {\n      this.showToast()\n    }\n  }\n\n  showToast () {\n    const animatedValue = new Animated.Value(0)\n\n    this.setState({ animatedValue })\n\n    Animated\n      .timing(animatedValue, { toValue: 1, duration: 350 })\n      .start()\n\n    const { duration, onShow } = this.props\n    const timeoutId = setTimeout(() => this.hideToast(), duration + 350)\n\n    this.setState({ timeoutId }, onShow)\n  }\n\n  hideToast () {\n    const { timeoutId, animatedValue } = this.state\n\n    clearTimeout(timeoutId)\n\n    Animated\n      .timing(animatedValue, { toValue: 0, duration: 350 })\n      .start()\n\n    setTimeout(this.props.onHide, 350)\n  }\n\n  onPress = () => {\n    this.hideToast()\n    this.props.onPress()\n  }\n\n  render () {\n    const y = this.state.animatedValue.interpolate({\n      inputRange: [0, 1],\n      outputRange: [-this.props.height, 0]\n    })\n\n    const { styles } = this.props\n    let text = this.props.text\n\n    if (Object.prototype.toString.call(text) === '[object String]') {\n      text = (\n        <View style={styles.container}>\n          <Text style={styles.text}>{text}</Text>\n        </View>\n      )\n    }\n\n    return (\n      <Animated.View style={{\n        position: 'absolute',\n        top: 0,\n        right: 0,\n        left: 0,\n        zIndex: 9999,\n        transform: [{ translateY: y }]\n      }}>\n        <TouchableWithoutFeedback onPress={this.onPress}>\n          {text}\n        </TouchableWithoutFeedback>\n      </Animated.View>\n    )\n  }\n}\n\nexport default Toast\n"]},"metadata":{},"sourceType":"module"}