{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\MOBOMEDIA\\\\mobotcmsdemo\\\\Frontendtech\\\\reactnative\\\\story\\\\TechVlog\\\\node_modules\\\\react-native-collapsible\\\\Accordion.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Collapsible from \"./Collapsible\";\nimport { ViewPropTypes } from \"./config\";\nvar COLLAPSIBLE_PROPS = Object.keys(Collapsible.propTypes);\nvar VIEW_PROPS = Object.keys(ViewPropTypes);\n\nvar Accordion = function (_Component) {\n  _inherits(Accordion, _Component);\n\n  var _super = _createSuper(Accordion);\n\n  function Accordion() {\n    _classCallCheck(this, Accordion);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Accordion, [{\n    key: \"_toggleSection\",\n    value: function _toggleSection(section) {\n      if (!this.props.disabled) {\n        var _this$props = this.props,\n            activeSections = _this$props.activeSections,\n            expandMultiple = _this$props.expandMultiple,\n            onChange = _this$props.onChange;\n        var updatedSections = [];\n\n        if (activeSections.includes(section)) {\n          updatedSections = activeSections.filter(function (a) {\n            return a !== section;\n          });\n        } else if (expandMultiple) {\n          updatedSections = [].concat(_toConsumableArray(activeSections), [section]);\n        } else {\n          updatedSections = [section];\n        }\n\n        onChange && onChange(updatedSections);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var viewProps = {};\n      var collapsibleProps = {};\n      Object.keys(this.props).forEach(function (key) {\n        if (COLLAPSIBLE_PROPS.includes(key)) {\n          collapsibleProps[key] = _this.props[key];\n        } else if (VIEW_PROPS.includes(key)) {\n          viewProps[key] = _this.props[key];\n        }\n      });\n      var _this$props2 = this.props,\n          activeSections = _this$props2.activeSections,\n          containerStyle = _this$props2.containerStyle,\n          sectionContainerStyle = _this$props2.sectionContainerStyle,\n          expandFromBottom = _this$props2.expandFromBottom,\n          sections = _this$props2.sections,\n          underlayColor = _this$props2.underlayColor,\n          touchableProps = _this$props2.touchableProps,\n          Touchable = _this$props2.touchableComponent,\n          _onAnimationEnd = _this$props2.onAnimationEnd,\n          renderContent = _this$props2.renderContent,\n          renderHeader = _this$props2.renderHeader,\n          renderFooter = _this$props2.renderFooter,\n          renderSectionTitle = _this$props2.renderSectionTitle;\n\n      var renderCollapsible = function renderCollapsible(section, key) {\n        return React.createElement(Collapsible, _extends({\n          collapsed: !activeSections.includes(key)\n        }, collapsibleProps, {\n          onAnimationEnd: function onAnimationEnd() {\n            return _onAnimationEnd(section, key);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 7\n          }\n        }), renderContent(section, key, activeSections.includes(key), sections));\n      };\n\n      return React.createElement(View, _extends({\n        style: containerStyle\n      }, viewProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 7\n        }\n      }), sections.map(function (section, key) {\n        return React.createElement(View, {\n          key: key,\n          style: sectionContainerStyle,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 11\n          }\n        }, renderSectionTitle(section, key, activeSections.includes(key)), expandFromBottom && renderCollapsible(section, key), React.createElement(Touchable, _extends({\n          onPress: function onPress() {\n            return _this._toggleSection(key);\n          },\n          underlayColor: underlayColor\n        }, touchableProps, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }\n        }), renderHeader(section, key, activeSections.includes(key), sections)), !expandFromBottom && renderCollapsible(section, key), renderFooter && renderFooter(section, key, activeSections.includes(key), sections));\n      }));\n    }\n  }]);\n\n  return Accordion;\n}(Component);\n\nAccordion.propTypes = {\n  sections: PropTypes.array.isRequired,\n  renderHeader: PropTypes.func.isRequired,\n  renderContent: PropTypes.func.isRequired,\n  renderFooter: PropTypes.func,\n  renderSectionTitle: PropTypes.func,\n  activeSections: PropTypes.arrayOf(PropTypes.number).isRequired,\n  onChange: PropTypes.func.isRequired,\n  align: PropTypes.oneOf(['top', 'center', 'bottom']),\n  duration: PropTypes.number,\n  easing: PropTypes.string,\n  underlayColor: PropTypes.string,\n  touchableComponent: PropTypes.elementType,\n  touchableProps: PropTypes.object,\n  disabled: PropTypes.bool,\n  expandFromBottom: PropTypes.bool,\n  expandMultiple: PropTypes.bool,\n  onAnimationEnd: PropTypes.func,\n  sectionContainerStyle: ViewPropTypes.style,\n  containerStyle: ViewPropTypes.style\n};\nAccordion.defaultProps = {\n  underlayColor: 'black',\n  disabled: false,\n  expandFromBottom: false,\n  expandMultiple: false,\n  touchableComponent: TouchableHighlight,\n  renderSectionTitle: function renderSectionTitle() {\n    return null;\n  },\n  onAnimationEnd: function onAnimationEnd() {\n    return null;\n  },\n  sectionContainerStyle: {}\n};\nexport { Accordion as default };","map":{"version":3,"sources":["C:/Users/Admin/Desktop/MOBOMEDIA/mobotcmsdemo/Frontendtech/reactnative/story/TechVlog/node_modules/react-native-collapsible/Accordion.js"],"names":["React","Component","PropTypes","Collapsible","ViewPropTypes","COLLAPSIBLE_PROPS","Object","keys","propTypes","VIEW_PROPS","Accordion","section","props","disabled","activeSections","expandMultiple","onChange","updatedSections","includes","filter","a","viewProps","collapsibleProps","forEach","key","containerStyle","sectionContainerStyle","expandFromBottom","sections","underlayColor","touchableProps","Touchable","touchableComponent","onAnimationEnd","renderContent","renderHeader","renderFooter","renderSectionTitle","renderCollapsible","map","_toggleSection","array","isRequired","func","arrayOf","number","align","oneOf","duration","easing","string","elementType","object","bool","style","defaultProps","TouchableHighlight"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { View, TouchableHighlight } from 'react-native';\nimport Collapsible from './Collapsible';\nimport { ViewPropTypes } from './config';\n\nconst COLLAPSIBLE_PROPS = Object.keys(Collapsible.propTypes);\nconst VIEW_PROPS = Object.keys(ViewPropTypes);\n\nexport default class Accordion extends Component {\n  static propTypes = {\n    sections: PropTypes.array.isRequired,\n    renderHeader: PropTypes.func.isRequired,\n    renderContent: PropTypes.func.isRequired,\n    renderFooter: PropTypes.func,\n    renderSectionTitle: PropTypes.func,\n    activeSections: PropTypes.arrayOf(PropTypes.number).isRequired,\n    onChange: PropTypes.func.isRequired,\n    align: PropTypes.oneOf(['top', 'center', 'bottom']),\n    duration: PropTypes.number,\n    easing: PropTypes.string,\n    underlayColor: PropTypes.string,\n    touchableComponent: PropTypes.elementType,\n    touchableProps: PropTypes.object,\n    disabled: PropTypes.bool,\n    expandFromBottom: PropTypes.bool,\n    expandMultiple: PropTypes.bool,\n    onAnimationEnd: PropTypes.func,\n    sectionContainerStyle: ViewPropTypes.style,\n    containerStyle: ViewPropTypes.style,\n  };\n\n  static defaultProps = {\n    underlayColor: 'black',\n    disabled: false,\n    expandFromBottom: false,\n    expandMultiple: false,\n    touchableComponent: TouchableHighlight,\n    renderSectionTitle: () => null,\n    onAnimationEnd: () => null,\n    sectionContainerStyle: {},\n  };\n\n  _toggleSection(section) {\n    if (!this.props.disabled) {\n      const { activeSections, expandMultiple, onChange } = this.props;\n\n      let updatedSections = [];\n\n      if (activeSections.includes(section)) {\n        updatedSections = activeSections.filter(a => a !== section);\n      } else if (expandMultiple) {\n        updatedSections = [...activeSections, section];\n      } else {\n        updatedSections = [section];\n      }\n\n      onChange && onChange(updatedSections);\n    }\n  }\n\n  render() {\n    let viewProps = {};\n    let collapsibleProps = {};\n\n    Object.keys(this.props).forEach(key => {\n      if (COLLAPSIBLE_PROPS.includes(key)) {\n        collapsibleProps[key] = this.props[key];\n      } else if (VIEW_PROPS.includes(key)) {\n        viewProps[key] = this.props[key];\n      }\n    });\n\n    const {\n      activeSections,\n      containerStyle,\n      sectionContainerStyle,\n      expandFromBottom,\n      sections,\n      underlayColor,\n      touchableProps,\n      touchableComponent: Touchable,\n      onAnimationEnd,\n      renderContent,\n      renderHeader,\n      renderFooter,\n      renderSectionTitle,\n    } = this.props;\n\n    const renderCollapsible = (section, key) => (\n      <Collapsible\n        collapsed={!activeSections.includes(key)}\n        {...collapsibleProps}\n        onAnimationEnd={() => onAnimationEnd(section, key)}\n      >\n        {renderContent(section, key, activeSections.includes(key), sections)}\n      </Collapsible>\n    );\n\n    return (\n      <View style={containerStyle} {...viewProps}>\n        {sections.map((section, key) => (\n          <View key={key} style={sectionContainerStyle}>\n            {renderSectionTitle(section, key, activeSections.includes(key))}\n\n            {expandFromBottom && renderCollapsible(section, key)}\n\n            <Touchable\n              onPress={() => this._toggleSection(key)}\n              underlayColor={underlayColor}\n              {...touchableProps}\n            >\n              {renderHeader(\n                section,\n                key,\n                activeSections.includes(key),\n                sections\n              )}\n            </Touchable>\n\n            {!expandFromBottom && renderCollapsible(section, key)}\n\n            {renderFooter &&\n              renderFooter(\n                section,\n                key,\n                activeSections.includes(key),\n                sections\n              )}\n          </View>\n        ))}\n      </View>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}