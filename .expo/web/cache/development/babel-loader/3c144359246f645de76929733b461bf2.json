{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\MOBOMEDIA\\\\mobotcmsdemo\\\\Frontendtech\\\\reactnative\\\\story\\\\TechVlog\\\\Screens\\\\storycreate.js\";\n\nimport React, { useState, createRef } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport AsyncStorage from '@react-native-community/async-storage';\nimport Axios from 'axios';\nimport Loader from \"./loader\";\n\nvar getdata = function getdata() {\n  var users, userdatas, gettoken, getuserid, geturl, config;\n  return _regeneratorRuntime.async(function getdata$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem('userdatas'));\n\n        case 3:\n          users = _context.sent;\n          userdatas = JSON.parse(users);\n          console.log(userdatas);\n\n          _this.setState({\n            data: userdatas\n          });\n\n          gettoken = _this.state.data.token;\n          getuserid = _this.state.data.userid;\n          console.log(gettoken);\n          geturl = 'http://192.168.1.4:8000/api/getuserdetails/';\n          config = {\n            headers: {\n              'content-type': 'multipart/form-data',\n              'Authorization': 'Bearer ' + gettoken,\n              'Accept': 'application/json'\n            }\n          };\n          Axios.get(geturl + getuserid, config).then(function (response) {\n            _this.setState({\n              profiles: response.data.profile\n            });\n          }).catch(function (error) {\n            console.log(error);\n          });\n          _context.next = 18;\n          break;\n\n        case 15:\n          _context.prev = 15;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n\n        case 18:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 15]], Promise);\n};\n\nvar Storycreatescreen = function Storycreatescreen(props) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setusername = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      useremail = _useState4[0],\n      setuseremail = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      title = _useState6[0],\n      settitle = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      storypara = _useState8[0],\n      setstorypara = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      errortext = _useState10[0],\n      setErrortext = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      isRegistraionSuccess = _useState12[0],\n      setIsRegistraionSuccess = _useState12[1];\n\n  var emailInputRef = createRef();\n  var ageInputRef = createRef();\n  var addressInputRef = createRef();\n  var passwordInputRef = createRef();\n\n  var handleSubmitButton = function handleSubmitButton() {\n    setErrortext('');\n\n    if (!title) {\n      alert('Please fill title');\n      return;\n    }\n\n    if (!storypara) {\n      alert('Please fill content');\n      return;\n    }\n\n    var url = 'http://192.168.1.4:8000/api/createaccount';\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        title: title,\n        storypara: storypara\n      })\n    }).then(function (response) {\n      return response.json();\n    }).then(function (responseJson) {\n      console.log(responseJson);\n\n      if (responseJson.message === 'success') {\n        setIsRegistraionSuccess(true);\n        console.log('Story created Successful...');\n      } else {\n        setErrortext(responseJson.msg);\n      }\n    }).catch(function (error) {\n      console.error(error);\n    });\n  };\n\n  if (isRegistraionSuccess) {\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        backgroundColor: '#307ecc',\n        justifyContent: 'center'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }\n    }, React.createElement(Image, {\n      style: {\n        height: 150,\n        resizeMode: 'contain',\n        alignSelf: 'center'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }\n    }), React.createElement(Text, {\n      style: styles.successTextStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }\n    }, \"Story created Successful\"), React.createElement(TouchableOpacity, {\n      style: styles.buttonStyle,\n      activeOpacity: 0.5,\n      onPress: function onPress() {\n        return props.navigation.navigate('LoginScreen');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: styles.buttonTextStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 21\n      }\n    }, \"view story Now\")));\n  }\n\n  return React.createElement(View, {\n    style: styles.mainBody,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  }, React.createElement(ScrollView, {\n    keyboardShouldPersistTaps: \"handled\",\n    contentContainerStyle: {\n      justifyContent: 'center',\n      alignContent: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  }, React.createElement(KeyboardAvoidingView, {\n    enabled: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: styles.SectionStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 21\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputStyle,\n    onChangeText: function onChangeText(title) {\n      return settitle(title);\n    },\n    underlineColorAndroid: \"#f000\",\n    placeholder: \"Enter Title\",\n    placeholderTextColor: \"#8b9cb5\",\n    returnKeyType: \"next\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 25\n    }\n  })), React.createElement(View, {\n    style: styles.SectionStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 21\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputStyle,\n    onChangeText: function onChangeText(storypara) {\n      return setstorypara(storypara);\n    },\n    underlineColorAndroid: \"#f000\",\n    placeholder: \"Enter content of Story\",\n    placeholderTextColor: \"#8b9cb5\",\n    autoCapitalize: \"sentences\",\n    returnKeyType: \"next\",\n    blurOnSubmit: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 25\n    }\n  })), errortext != '' ? React.createElement(Text, {\n    style: styles.errorTextStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 25\n    }\n  }, errortext) : null, React.createElement(TouchableOpacity, {\n    style: styles.buttonStyle,\n    activeOpacity: 0.5,\n    onPress: handleSubmitButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonTextStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 25\n    }\n  }, \"REGISTER\")))));\n};\n\nexport default Storycreatescreen;\nvar styles = StyleSheet.create({\n  mainBody: {\n    flex: 1,\n    justifyContent: 'center',\n    alignContent: 'center'\n  },\n  SectionStyle: {\n    flexDirection: 'row',\n    height: 40,\n    marginTop: 5,\n    marginLeft: 35,\n    marginRight: 35,\n    margin: 10\n  },\n  buttonStyle: {\n    backgroundColor: '#ff4f81',\n    borderWidth: 0,\n    color: '#FFFFFF',\n    borderColor: '#7DE24E',\n    height: 40,\n    alignItems: 'center',\n    borderRadius: 30,\n    marginLeft: 35,\n    marginRight: 35,\n    marginTop: 20,\n    marginBottom: 20\n  },\n  buttonTextStyle: {\n    color: '#FFFFFF',\n    paddingVertical: 10,\n    fontSize: 16\n  },\n  inputStyle: {\n    flex: 1,\n    color: 'white',\n    paddingLeft: 15,\n    paddingRight: 15,\n    borderWidth: 1,\n    borderRadius: 30,\n    borderColor: '#dadae8'\n  },\n  errorTextStyle: {\n    color: 'red',\n    textAlign: 'center',\n    fontSize: 14\n  },\n  successTextStyle: {\n    color: 'white',\n    textAlign: 'center',\n    fontSize: 18,\n    padding: 30\n  }\n});","map":{"version":3,"sources":["C:/Users/Admin/Desktop/MOBOMEDIA/mobotcmsdemo/Frontendtech/reactnative/story/TechVlog/Screens/storycreate.js"],"names":["React","useState","createRef","AsyncStorage","Axios","Loader","getdata","getItem","users","userdatas","JSON","parse","console","log","setState","data","gettoken","state","token","getuserid","userid","geturl","config","headers","get","then","response","profiles","profile","catch","error","Storycreatescreen","props","username","setusername","useremail","setuseremail","title","settitle","storypara","setstorypara","errortext","setErrortext","isRegistraionSuccess","setIsRegistraionSuccess","emailInputRef","ageInputRef","addressInputRef","passwordInputRef","handleSubmitButton","alert","url","fetch","method","Accept","body","stringify","json","responseJson","message","msg","flex","backgroundColor","justifyContent","height","resizeMode","alignSelf","styles","successTextStyle","buttonStyle","navigation","navigate","buttonTextStyle","mainBody","alignContent","SectionStyle","inputStyle","errorTextStyle","StyleSheet","create","flexDirection","marginTop","marginLeft","marginRight","margin","borderWidth","color","borderColor","alignItems","borderRadius","marginBottom","paddingVertical","fontSize","paddingLeft","paddingRight","textAlign","padding"],"mappings":"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","sourcesContent":["import React, { useState, createRef } from 'react';\r\nimport {\r\n    StyleSheet,\r\n    TextInput,\r\n    View,\r\n    Text,\r\n    Image,\r\n    KeyboardAvoidingView,\r\n    Keyboard,\r\n    TouchableOpacity,\r\n    ScrollView,\r\n} from 'react-native';\r\nimport AsyncStorage from '@react-native-community/async-storage';\r\nimport Axios from 'axios';\r\n\r\nimport Loader from './loader';\r\n\r\nconst getdata = async () => {\r\n    try {\r\n        let users = await AsyncStorage.getItem('userdatas');\r\n        const userdatas = JSON.parse(users);\r\n        console.log(userdatas);\r\n        this.setState({ data: userdatas });\r\n        const gettoken = this.state.data.token;\r\n        const getuserid = this.state.data.userid;\r\n        console.log(gettoken);\r\n        const geturl = 'http://192.168.1.4:8000/api/getuserdetails/';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'multipart/form-data',\r\n                'Authorization': 'Bearer ' + gettoken,\r\n                'Accept': 'application/json',\r\n            },\r\n\r\n        };\r\n        Axios.get(geturl + getuserid, config)\r\n        .then(response => {\r\n            this.setState({ profiles: response.data.profile });\r\n            // console.log(response.data.profile.useremail)\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        })\r\n    } catch (e) {\r\n        // error reading value\r\n        console.log(e);\r\n    }\r\n}\r\n\r\nconst Storycreatescreen = (props) => {\r\n    const [username, setusername] = useState('');\r\n    const [useremail, setuseremail] = useState('');\r\n    const [title, settitle] = useState('');\r\n    const [storypara, setstorypara] = useState('');\r\n    // const [password, setpassword] = useState('');\r\n    // const [loading, setLoading] = useState(false);\r\n    const [errortext, setErrortext] = useState('');\r\n    const [\r\n        isRegistraionSuccess,\r\n        setIsRegistraionSuccess\r\n    ] = useState(false);\r\n\r\n    const emailInputRef = createRef();\r\n    const ageInputRef = createRef();\r\n    const addressInputRef = createRef();\r\n    const passwordInputRef = createRef();\r\n\r\n    const handleSubmitButton = () => {\r\n        setErrortext('');\r\n        // if (!username) {\r\n        //     alert('Please fill Name');\r\n        //     return;\r\n        // }\r\n        // if (!useremail) {\r\n        //     alert('Please fill Email');\r\n        //     return;\r\n        // }\r\n        // if (!userage) {\r\n        //     alert('Please fill Age');\r\n        //     return;\r\n        // }\r\n        if (!title) {\r\n            alert('Please fill title');\r\n            return;\r\n        }\r\n        if (!storypara) {\r\n            alert('Please fill content');\r\n            return;\r\n        }\r\n        //Show Loader\r\n        // setLoading(true);\r\n        const url = 'http://192.168.1.4:8000/api/createaccount';\r\n        fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                // username: username,\r\n                // useremail: useremail,\r\n                // password: password,\r\n                // userage: userage,\r\n                // useraddress: useraddress,\r\n                title: title,\r\n                storypara: storypara\r\n            })\r\n        })\r\n            .then((response) => response.json())\r\n            .then((responseJson) => {\r\n                //Hide Loader\r\n                // setLoading(false);\r\n                console.log(responseJson);\r\n                if (responseJson.message === 'success') {\r\n                    setIsRegistraionSuccess(true);\r\n                    console.log(\r\n                        'Story created Successful...'\r\n                    );\r\n                } else {\r\n                    setErrortext(responseJson.msg);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                //Hide Loader\r\n                // setLoading(false);\r\n                console.error(error);\r\n            });\r\n    };\r\n    if (isRegistraionSuccess) {\r\n        return (\r\n            <View\r\n                style={{\r\n                    flex: 1,\r\n                    backgroundColor: '#307ecc',\r\n                    justifyContent: 'center',\r\n                }}>\r\n                <Image\r\n                    // source={require('../Image/success.png')}\r\n                    style={{\r\n                        height: 150,\r\n                        resizeMode: 'contain',\r\n                        alignSelf: 'center'\r\n                    }}\r\n                />\r\n                <Text style={styles.successTextStyle}>\r\n                    Story created Successful\r\n        </Text>\r\n                <TouchableOpacity\r\n                    style={styles.buttonStyle}\r\n                    activeOpacity={0.5}\r\n                    onPress={() => props.navigation.navigate('LoginScreen')}>\r\n                    <Text style={styles.buttonTextStyle}>view story Now</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        );\r\n    }\r\n    \r\n    return (\r\n        \r\n        <View style={styles.mainBody}>\r\n            {/* <Loader loading={loading} /> */}\r\n            <ScrollView\r\n                keyboardShouldPersistTaps=\"handled\"\r\n                contentContainerStyle={{\r\n                    justifyContent: 'center',\r\n                    alignContent: 'center',\r\n                }}>\r\n                <KeyboardAvoidingView enabled>\r\n                    {/* <View style={styles.SectionStyle}>\r\n                        <TextInput\r\n                            style={styles.inputStyle}\r\n                            onChangeText={(username) => setusername(username)}\r\n                            underlineColorAndroid=\"#f000\"\r\n                            placeholder=\"Enter Name\"\r\n                            placeholderTextColor=\"#8b9cb5\"\r\n                            autoCapitalize=\"sentences\"\r\n                            returnKeyType=\"next\"\r\n                        />\r\n                    </View>\r\n                    <View style={styles.SectionStyle}>\r\n                        <TextInput\r\n                            style={styles.inputStyle}\r\n                            onChangeText={(useremail) => setuseremail(useremail)}\r\n                            underlineColorAndroid=\"#f000\"\r\n                            placeholder=\"Enter Email\"\r\n                            placeholderTextColor=\"#8b9cb5\"\r\n                            keyboardType=\"email-address\"\r\n                            ref={emailInputRef}\r\n                            returnKeyType=\"next\"\r\n                        />\r\n                    </View> */}\r\n                    {/* <View style={styles.SectionStyle}>\r\n                        <TextInput\r\n                            style={styles.inputStyle}\r\n                            onChangeText={(userpassword) =>\r\n                                setpassword(userpassword)\r\n                            }\r\n                            underlineColorAndroid=\"#f000\"\r\n                            placeholder=\"Enter Password\"\r\n                            placeholderTextColor=\"#8b9cb5\"\r\n                            ref={passwordInputRef}\r\n                            returnKeyType=\"next\"\r\n                            secureTextEntry={true}\r\n                        />\r\n                    </View> */}\r\n                    <View style={styles.SectionStyle}>\r\n                        <TextInput\r\n                            style={styles.inputStyle}\r\n                            onChangeText={(title) => settitle(title)}\r\n                            underlineColorAndroid=\"#f000\"\r\n                            placeholder=\"Enter Title\"\r\n                            placeholderTextColor=\"#8b9cb5\"\r\n                            // keyboardType=\"numeric\"\r\n                            // ref={ageInputRef}\r\n                            returnKeyType=\"next\"\r\n                        />\r\n                    </View>\r\n                    <View style={styles.SectionStyle}>\r\n                        <TextInput\r\n                            style={styles.inputStyle}\r\n                            onChangeText={(storypara) =>\r\n                                setstorypara(storypara)\r\n                            }\r\n                            underlineColorAndroid=\"#f000\"\r\n                            placeholder=\"Enter content of Story\"\r\n                            placeholderTextColor=\"#8b9cb5\"\r\n                            autoCapitalize=\"sentences\"\r\n                            // ref={addressInputRef}\r\n                            returnKeyType=\"next\"\r\n                            blurOnSubmit={false}\r\n                        />\r\n                    </View>\r\n                    {errortext != '' ? (\r\n                        <Text style={styles.errorTextStyle}>\r\n                            {errortext}\r\n                        </Text>\r\n                    ) : null}\r\n                    <TouchableOpacity\r\n                        style={styles.buttonStyle}\r\n                        activeOpacity={0.5}\r\n                        onPress={handleSubmitButton}>\r\n                        <Text style={styles.buttonTextStyle}>REGISTER</Text>\r\n                    </TouchableOpacity>\r\n                </KeyboardAvoidingView>\r\n            </ScrollView>\r\n        </View>\r\n    );\r\n};\r\nexport default Storycreatescreen;\r\n\r\nconst styles = StyleSheet.create({\r\n    mainBody: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        // backgroundColor: '#307ecc',\r\n        alignContent: 'center',\r\n    },\r\n    SectionStyle: {\r\n        flexDirection: 'row',\r\n        height: 40,\r\n        marginTop: 5,\r\n        marginLeft: 35,\r\n        marginRight: 35,\r\n        margin: 10,\r\n    },\r\n    buttonStyle: {\r\n        backgroundColor: '#ff4f81',\r\n        borderWidth: 0,\r\n        color: '#FFFFFF',\r\n        borderColor: '#7DE24E',\r\n        height: 40,\r\n        alignItems: 'center',\r\n        borderRadius: 30,\r\n        marginLeft: 35,\r\n        marginRight: 35,\r\n        marginTop: 20,\r\n        marginBottom: 20,\r\n    },\r\n    buttonTextStyle: {\r\n        color: '#FFFFFF',\r\n        paddingVertical: 10,\r\n        fontSize: 16,\r\n    },\r\n    inputStyle: {\r\n        flex: 1,\r\n        color: 'white',\r\n        paddingLeft: 15,\r\n        paddingRight: 15,\r\n        borderWidth: 1,\r\n        borderRadius: 30,\r\n        borderColor: '#dadae8',\r\n    },\r\n    errorTextStyle: {\r\n        color: 'red',\r\n        textAlign: 'center',\r\n        fontSize: 14,\r\n    },\r\n    successTextStyle: {\r\n        color: 'white',\r\n        textAlign: 'center',\r\n        fontSize: 18,\r\n        padding: 30,\r\n    },\r\n});"]},"metadata":{},"sourceType":"module"}