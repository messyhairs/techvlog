{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\MOBOMEDIA\\\\mobotcmsdemo\\\\Frontendtech\\\\reactnative\\\\story\\\\TechVlog\\\\Screens\\\\viewyourstory.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport AsyncStorage from '@react-native-community/async-storage';\nimport Axios from 'axios';\nimport { Card, ListItem, Button, Icon } from 'react-native-elements';\nimport { cos } from 'react-native-reanimated';\n\nvar Viewstory = function (_Component) {\n  _inherits(Viewstory, _Component);\n\n  var _super = _createSuper(Viewstory);\n\n  function Viewstory(props) {\n    var _this;\n\n    _classCallCheck(this, Viewstory);\n\n    _this = _super.call(this, props);\n\n    _this.getdata = function _callee() {\n      var users, userdatas, gettoken, getuserid, localurl, config, localurl1;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('userdatas'));\n\n            case 3:\n              users = _context.sent;\n              userdatas = JSON.parse(users);\n              console.log(userdatas);\n\n              _this.setState({\n                data: userdatas\n              });\n\n              gettoken = _this.state.data.token;\n              getuserid = _this.state.data.userid;\n              console.log(gettoken);\n              localurl = 'https://tranquil-dusk-36378.herokuapp.com/api/getuserdetails/';\n              config = {\n                headers: {\n                  'content-type': 'multipart/form-data',\n                  'Authorization': 'Bearer ' + gettoken,\n                  'Accept': 'application/json'\n                }\n              };\n              Axios.get(localurl + getuserid, config).then(function (response) {\n                _this.setState({\n                  profiles: response.data.profile\n                });\n              }).catch(function (error) {\n                console.log(error);\n              });\n              localurl1 = 'https://tranquil-dusk-36378.herokuapp.com/api/allstories';\n              Axios.get(localurl1, config).then(function (response) {\n                var getdatas = response.data.stories;\n                getdatas.forEach(function (datas) {\n                  if (datas.creatorid === getuserid) {\n                    var obj = {\n                      'username': datas.username,\n                      'useremail': datas.useremail,\n                      'title': datas.title,\n                      'storycreator': datas.creator,\n                      'storycontent': datas.storypara,\n                      'stories_id': datas._id\n                    };\n\n                    _this.setState({\n                      userstory: [].concat(_toConsumableArray(_this.state.userstory), [obj])\n                    });\n\n                    console.log(_this.state.userstory);\n                  }\n                });\n              }).catch(function (error) {\n                console.log(error);\n              });\n              _context.next = 20;\n              break;\n\n            case 17:\n              _context.prev = 17;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 20:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 17]], Promise);\n    };\n\n    _this.editformstatus = function (e, stories) {\n      _this.props.navigation.navigate('Edit your blog');\n\n      console.log(stories);\n      AsyncStorage.setItem('currentstory', JSON.stringify(stories));\n\n      _this.setState({\n        currentstories: [].concat(_toConsumableArray(_this.state.currentstories), [stories])\n      });\n    };\n\n    _this.state = {\n      data: [],\n      profiles: [],\n      testdatas: '',\n      userstory: [],\n      activeSections: [],\n      textValue: false,\n      currentstories: []\n    };\n    return _this;\n  }\n\n  _createClass(Viewstory, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getdata();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.state.currentstories);\n      return React.createElement(SafeAreaView, {\n        style: {\n          flex: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }\n      }, React.createElement(ScrollView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: styles.mainBody,\n        id: \"hidestory\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }\n      }, this.state.userstory.map(function (stories, index) {\n        return React.createElement(Card, {\n          key: index,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 29\n          }\n        }, React.createElement(Card.Title, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 33\n          }\n        }, React.createElement(Text, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 37\n          }\n        }, stories.title)), React.createElement(Card.Divider, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 33\n          }\n        }), React.createElement(View, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 33\n          }\n        }, React.createElement(Text, {\n          style: styles.storycontentbottomview,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 37\n          }\n        }, stories.storycontent), React.createElement(Card.Divider, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 37\n          }\n        })), React.createElement(TouchableOpacity, {\n          style: styles.buttonStyle,\n          activeOpacity: 0.5,\n          value: stories.title,\n          onPress: function onPress(e) {\n            return _this2.editformstatus(e, stories);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 33\n          }\n        }, React.createElement(Text, {\n          style: styles.buttonTextStyle,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 37\n          }\n        }, \"Edit your blog\")));\n      }))));\n    }\n  }]);\n\n  return Viewstory;\n}(Component);\n\nexport { Viewstory as default };\nvar styles = StyleSheet.create({\n  storycontentbottomview: {\n    paddingBottom: 50,\n    textAlign: 'justify'\n  },\n  mainBody: {\n    paddingBottom: 50\n  },\n  buttonStyle: {\n    backgroundColor: '#f3f4f7',\n    borderWidth: 0,\n    borderColor: '#7DE24E',\n    height: 40,\n    alignItems: 'center',\n    borderRadius: 30,\n    marginLeft: 35,\n    marginRight: 35,\n    marginTop: 20,\n    marginBottom: 20\n  },\n  buttonTextStyle: {\n    color: '#00205b',\n    paddingVertical: 10,\n    fontSize: 16\n  }\n});","map":{"version":3,"sources":["C:/Users/Admin/Desktop/MOBOMEDIA/mobotcmsdemo/Frontendtech/reactnative/story/TechVlog/Screens/viewyourstory.js"],"names":["React","Component","useState","AsyncStorage","Axios","Card","ListItem","Button","Icon","cos","Viewstory","props","getdata","getItem","users","userdatas","JSON","parse","console","log","setState","data","gettoken","state","token","getuserid","userid","localurl","config","headers","get","then","response","profiles","profile","catch","error","localurl1","getdatas","stories","forEach","datas","creatorid","obj","username","useremail","title","creator","storypara","_id","userstory","editformstatus","e","navigation","navigate","setItem","stringify","currentstories","testdatas","activeSections","textValue","flex","styles","mainBody","map","index","storycontentbottomview","storycontent","buttonStyle","buttonTextStyle","StyleSheet","create","paddingBottom","textAlign","backgroundColor","borderWidth","borderColor","height","alignItems","borderRadius","marginLeft","marginRight","marginTop","marginBottom","color","paddingVertical","fontSize"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;;;AAEA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,MAAzB,EAAiCC,IAAjC,QAA6C,uBAA7C;AACA,SAASC,GAAT,QAAoB,yBAApB;;IACqBC,S;;;;;AACjB,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;;AADe,UAanBC,OAbmB,GAaT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAEgBT,YAAY,CAACU,OAAb,CAAqB,WAArB,CAFhB;;AAAA;AAEEC,cAAAA,KAFF;AAGIC,cAAAA,SAHJ,GAGgBC,IAAI,CAACC,KAAL,CAAWH,KAAX,CAHhB;AAIFI,cAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAZ;;AACA,oBAAKK,QAAL,CAAc;AAAEC,gBAAAA,IAAI,EAAEN;AAAR,eAAd;;AACMO,cAAAA,QANJ,GAMe,MAAKC,KAAL,CAAWF,IAAX,CAAgBG,KAN/B;AAOIC,cAAAA,SAPJ,GAOgB,MAAKF,KAAL,CAAWF,IAAX,CAAgBK,MAPhC;AAQFR,cAAAA,OAAO,CAACC,GAAR,CAAYG,QAAZ;AAIMK,cAAAA,QAZJ,GAYe,+DAZf;AAaIC,cAAAA,MAbJ,GAaa;AACXC,gBAAAA,OAAO,EAAE;AACL,kCAAgB,qBADX;AAEL,mCAAiB,YAAYP,QAFxB;AAGL,4BAAU;AAHL;AADE,eAbb;AAqBFlB,cAAAA,KAAK,CAAC0B,GAAN,CAAUH,QAAQ,GAAGF,SAArB,EAAgCG,MAAhC,EACKG,IADL,CACU,UAAAC,QAAQ,EAAI;AACd,sBAAKZ,QAAL,CAAc;AAAEa,kBAAAA,QAAQ,EAAED,QAAQ,CAACX,IAAT,CAAca;AAA1B,iBAAd;AAEH,eAJL,EAKKC,KALL,CAKW,UAAUC,KAAV,EAAiB;AACpBlB,gBAAAA,OAAO,CAACC,GAAR,CAAYiB,KAAZ;AACH,eAPL;AAWMC,cAAAA,SAhCJ,GAgCgB,0DAhChB;AAkCFjC,cAAAA,KAAK,CAAC0B,GAAN,CAAUO,SAAV,EAAqBT,MAArB,EACKG,IADL,CACU,UAAAC,QAAQ,EAAI;AACd,oBAAMM,QAAQ,GAAGN,QAAQ,CAACX,IAAT,CAAckB,OAA/B;AACAD,gBAAAA,QAAQ,CAACE,OAAT,CAAiB,UAAAC,KAAK,EAAI;AACtB,sBAAIA,KAAK,CAACC,SAAN,KAAoBjB,SAAxB,EAAmC;AAC/B,wBAAMkB,GAAG,GAAG;AACR,kCAAYF,KAAK,CAACG,QADV;AACoB,mCAAaH,KAAK,CAACI,SADvC;AAER,+BAASJ,KAAK,CAACK,KAFP;AAEc,sCAAgBL,KAAK,CAACM,OAFpC;AAE6C,sCAAgBN,KAAK,CAACO,SAFnE;AAE8E,oCAAcP,KAAK,CAACQ;AAFlG,qBAAZ;;AAIA,0BAAK7B,QAAL,CAAc;AACV8B,sBAAAA,SAAS,+BAAM,MAAK3B,KAAL,CAAW2B,SAAjB,IAA4BP,GAA5B;AADC,qBAAd;;AAGAzB,oBAAAA,OAAO,CAACC,GAAR,CAAY,MAAKI,KAAL,CAAW2B,SAAvB;AAEH;AACJ,iBAZD;AAaH,eAhBL,EAiBKf,KAjBL,CAiBW,UAAUC,KAAV,EAAiB;AACpBlB,gBAAAA,OAAO,CAACC,GAAR,CAAYiB,KAAZ;AACH,eAnBL;AAlCE;AAAA;;AAAA;AAAA;AAAA;AAwDFlB,cAAAA,OAAO,CAACC,GAAR;;AAxDE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAbS;;AAAA,UA8EnBgC,cA9EmB,GA8EF,UAACC,CAAD,EAAIb,OAAJ,EAAgB;AAY7B,YAAK5B,KAAL,CAAW0C,UAAX,CAAsBC,QAAtB,CAEI,gBAFJ;;AAMApC,MAAAA,OAAO,CAACC,GAAR,CAAYoB,OAAZ;AACApC,MAAAA,YAAY,CAACoD,OAAb,CAAqB,cAArB,EAAqCvC,IAAI,CAACwC,SAAL,CAAejB,OAAf,CAArC;;AACA,YAAKnB,QAAL,CAAc;AACVqC,QAAAA,cAAc,+BAAM,MAAKlC,KAAL,CAAWkC,cAAjB,IAAiClB,OAAjC;AADJ,OAAd;AAGH,KArGkB;;AAEf,UAAKhB,KAAL,GAAa;AACTF,MAAAA,IAAI,EAAE,EADG;AAETY,MAAAA,QAAQ,EAAE,EAFD;AAGTyB,MAAAA,SAAS,EAAE,EAHF;AAITR,MAAAA,SAAS,EAAE,EAJF;AAKTS,MAAAA,cAAc,EAAE,EALP;AAMTC,MAAAA,SAAS,EAAE,KANF;AAOTH,MAAAA,cAAc,EAAE;AAPP,KAAb;AAFe;AAWlB;;;;WA6DD,6BAAoB;AAIhB,WAAK7C,OAAL;AACH;;;WAyBD,kBAAS;AAAA;;AACLM,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKI,KAAL,CAAWkC,cAAvB;AACA,aACI,oBAAC,YAAD;AAAc,QAAA,KAAK,EAAE;AAAEI,UAAAA,IAAI,EAAE;AAAR,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,QAApB;AAA8B,QAAA,EAAE,EAAC,WAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKxC,KAAL,CAAW2B,SAAX,CAAqBc,GAArB,CAAyB,UAACzB,OAAD,EAAU0B,KAAV;AAAA,eACtB,oBAAC,IAAD;AAAM,UAAA,GAAG,EAAEA,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAO1B,OAAO,CAACO,KAAf,CADJ,CADJ,EAII,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJJ,EAKI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEgB,MAAM,CAACI,sBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA6C3B,OAAO,CAAC4B,YAArD,CADJ,EAEI,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,CALJ,EAWI,oBAAC,gBAAD;AACI,UAAA,KAAK,EAAEL,MAAM,CAACM,WADlB;AAEI,UAAA,aAAa,EAAE,GAFnB;AAEwB,UAAA,KAAK,EAAE7B,OAAO,CAACO,KAFvC;AAE8C,UAAA,OAAO,EAAG,iBAACM,CAAD;AAAA,mBAAO,MAAI,CAACD,cAAL,CAAoBC,CAApB,EAAuBb,OAAvB,CAAP;AAAA,WAFxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAGI,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEuB,MAAM,CAACO,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAHJ,CAXJ,CADsB;AAAA,OAAzB,CADL,CADJ,CADJ,CADJ;AA8BH;;;;EAvIkCpE,S;;SAAlBS,S;AA4JrB,IAAMoD,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAC7BL,EAAAA,sBAAsB,EAAE;AACpBM,IAAAA,aAAa,EAAE,EADK;AAEpBC,IAAAA,SAAS,EAAE;AAFS,GADK;AAK7BV,EAAAA,QAAQ,EAAE;AACNS,IAAAA,aAAa,EAAE;AADT,GALmB;AAQ7BJ,EAAAA,WAAW,EAAE;AACTM,IAAAA,eAAe,EAAE,SADR;AAETC,IAAAA,WAAW,EAAE,CAFJ;AAGTC,IAAAA,WAAW,EAAE,SAHJ;AAITC,IAAAA,MAAM,EAAE,EAJC;AAKTC,IAAAA,UAAU,EAAE,QALH;AAMTC,IAAAA,YAAY,EAAE,EANL;AAOTC,IAAAA,UAAU,EAAE,EAPH;AAQTC,IAAAA,WAAW,EAAE,EARJ;AASTC,IAAAA,SAAS,EAAE,EATF;AAUTC,IAAAA,YAAY,EAAE;AAVL,GARgB;AAoB7Bd,EAAAA,eAAe,EAAE;AACbe,IAAAA,KAAK,EAAE,SADM;AAEbC,IAAAA,eAAe,EAAE,EAFJ;AAGbC,IAAAA,QAAQ,EAAE;AAHG;AApBY,CAAlB,CAAf","sourcesContent":["import React, { Component, useState } from 'react';\r\nimport { View, Text, TouchableOpacity, SafeAreaView, StyleSheet, ScrollView } from 'react-native';\r\nimport AsyncStorage from '@react-native-community/async-storage';\r\nimport Axios from 'axios';\r\nimport { Card, ListItem, Button, Icon } from 'react-native-elements';\r\nimport { cos } from 'react-native-reanimated';\r\nexport default class Viewstory extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            data: [],\r\n            profiles: [],\r\n            testdatas: '',\r\n            userstory: [],\r\n            activeSections: [],\r\n            textValue: false,\r\n            currentstories: []\r\n        }\r\n    }\r\n\r\n    getdata = async () => {\r\n        try {\r\n            let users = await AsyncStorage.getItem('userdatas');\r\n            const userdatas = JSON.parse(users);\r\n            console.log(userdatas);\r\n            this.setState({ data: userdatas });\r\n            const gettoken = this.state.data.token;\r\n            const getuserid = this.state.data.userid;\r\n            console.log(gettoken);\r\n            // const geturl = 'http://172.26.240.1:8000/api/getuserdetails/';\r\n            // const localurl = 'http://192.168.1.16:8000/api/getuserdetails/';\r\n            // const localurl = 'http://localhost:8000/api/getuserdetails/';\r\n            const localurl = 'https://tranquil-dusk-36378.herokuapp.com/api/getuserdetails/'\r\n            const config = {\r\n                headers: {\r\n                    'content-type': 'multipart/form-data',\r\n                    'Authorization': 'Bearer ' + gettoken,\r\n                    'Accept': 'application/json',\r\n                },\r\n\r\n            };\r\n            Axios.get(localurl + getuserid, config)\r\n                .then(response => {\r\n                    this.setState({ profiles: response.data.profile });\r\n                    // console.log(response.data.profile.useremail)\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n            // get stories by id\r\n            // const geturl1 = 'http://172.26.240.1:8000/api/yourstories/';\r\n            // const localurl1 = 'http://192.168.1.16:8000/api/allstories';\r\n            const localurl1 = 'https://tranquil-dusk-36378.herokuapp.com/api/allstories'\r\n            // const localurl1 = 'http://localhost:8000/api/allstories';\r\n            Axios.get(localurl1, config)\r\n                .then(response => {\r\n                    const getdatas = response.data.stories;\r\n                    getdatas.forEach(datas => {\r\n                        if (datas.creatorid === getuserid) {\r\n                            const obj = {\r\n                                'username': datas.username, 'useremail': datas.useremail,\r\n                                'title': datas.title, 'storycreator': datas.creator, 'storycontent': datas.storypara, 'stories_id': datas._id\r\n                            };\r\n                            this.setState({\r\n                                userstory: [...this.state.userstory, obj]\r\n                            });\r\n                            console.log(this.state.userstory);\r\n                            // this.setState({ userstory: datas });\r\n                        }\r\n                    })\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n        } catch (e) {\r\n            // error reading value\r\n            console.log(e);\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        // setTimeout(() => {\r\n        //   this.setState({favoritecolor: \"yellow\"})\r\n        // alert('hello*********')\r\n        this.getdata();\r\n    }\r\n    editformstatus = (e, stories) => {\r\n        // this.setState({\r\n        //     textValue: true\r\n        // })\r\n        // console.log(this.state.textValue)\r\n        // if (this.state.textValue == true) {\r\n        //     //    document.getElementById('hidestory').style.display = 'none'\r\n        //     alert('hello')\r\n        // }\r\n        // user = {\r\n        //     name: 'gokulnathu'\r\n        // }\r\n        this.props.navigation.navigate(\r\n            // 'EditstoryScreenStack',\r\n            'Edit your blog'\r\n            // { story: stories },\r\n        );\r\n        // console.log(e.target.value);\r\n        console.log(stories);\r\n        AsyncStorage.setItem('currentstory', JSON.stringify(stories))\r\n        this.setState({\r\n            currentstories: [...this.state.currentstories, stories]\r\n        });\r\n    }\r\n    render() {\r\n        console.log(this.state.currentstories);\r\n        return (\r\n            <SafeAreaView style={{ flex: 1 }}>\r\n                <ScrollView>\r\n                    <View style={styles.mainBody} id=\"hidestory\">\r\n                        {this.state.userstory.map((stories, index) => (\r\n                            <Card key={index}>\r\n                                <Card.Title>\r\n                                    <Text>{stories.title}</Text>\r\n                                </Card.Title>\r\n                                <Card.Divider />\r\n                                <View>\r\n                                    <Text style={styles.storycontentbottomview}>{stories.storycontent}</Text>\r\n                                    <Card.Divider />\r\n                                </View>\r\n                                {/* <View style={{ flex: 1, flexDirection: 'row' }}> */}\r\n                                {/* <View style={{ width: 50, height: 50 }}> */}\r\n                                <TouchableOpacity\r\n                                    style={styles.buttonStyle}\r\n                                    activeOpacity={0.5} value={stories.title} onPress={((e) => this.editformstatus(e, stories))}>\r\n                                    <Text style={styles.buttonTextStyle}>Edit your blog</Text>\r\n                                </TouchableOpacity>\r\n                                {/* <Text value={stories.title} onPress={((e) => this.editformstatus(e, stories))}>Edit</Text> */}\r\n                                {/* </View> */}\r\n                                {/* </View> */}\r\n                            </Card>\r\n                        ))}\r\n                    </View>\r\n                </ScrollView>\r\n            </SafeAreaView>\r\n        )\r\n    }\r\n}\r\n// function getbannerdata() {\r\n//     const localurl = 'https://jsonplaceholder.typicode.com/todos/1';\r\n//     return fetch(localurl, {\r\n//         method: 'GET',\r\n//         headers: {\r\n//             'Content-Type': 'application/json',\r\n//         },\r\n\r\n//     })\r\n//         .then((res) => res.json())\r\n//         .then((resData) => {\r\n//             return resData;\r\n//         })\r\n//         .catch(error => console.log(error))\r\n\r\n// };\r\n// export { getbannerdata }\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    storycontentbottomview: {\r\n        paddingBottom: 50,\r\n        textAlign: 'justify'\r\n    },\r\n    mainBody: {\r\n        paddingBottom: 50\r\n    },\r\n    buttonStyle: {\r\n        backgroundColor: '#f3f4f7',\r\n        borderWidth: 0,\r\n        borderColor: '#7DE24E',\r\n        height: 40,\r\n        alignItems: 'center',\r\n        borderRadius: 30,\r\n        marginLeft: 35,\r\n        marginRight: 35,\r\n        marginTop: 20,\r\n        marginBottom: 20,\r\n    },\r\n    buttonTextStyle: {\r\n        color: '#00205b',\r\n        paddingVertical: 10,\r\n        fontSize: 16,\r\n    }\r\n});"]},"metadata":{},"sourceType":"module"}