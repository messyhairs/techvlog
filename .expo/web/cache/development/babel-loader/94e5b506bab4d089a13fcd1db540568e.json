{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport React, { Component, useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport AsyncStorage from '@react-native-community/async-storage';\nimport Axios from 'axios';\nimport { Card, ListItem, Button, Icon } from 'react-native-elements';\nimport Loader from \"./loader\";\n\nvar HomeScreen = function HomeScreen(props) {\n  useEffect(function () {\n    console.log('********');\n    getdatas();\n  }, []);\n\n  function getdatas() {\n    var _this = this;\n\n    var users, userdatas, gettoken, getuserid, localurl, config, localurl1;\n    return _regeneratorRuntime.async(function getdatas$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('userdatas'));\n\n          case 3:\n            users = _context.sent;\n            userdatas = JSON.parse(users);\n            console.log(userdatas);\n            this.setState({\n              data: userdatas\n            });\n            gettoken = this.state.data.token;\n            getuserid = this.state.data.userid;\n            console.log(gettoken);\n            localurl = 'http://192.168.1.16:8000/api/getuserdetails/';\n            config = {\n              headers: {\n                'content-type': 'multipart/form-data',\n                'Authorization': 'Bearer ' + gettoken,\n                'Accept': 'application/json'\n              }\n            };\n            Axios.get(localurl + getuserid, config).then(function (response) {\n              _this.setState({\n                profiles: response.data.profile\n              });\n            }).catch(function (error) {\n              console.log(error);\n            });\n            localurl1 = 'http://192.168.1.16:8000/api/allstories';\n            Axios.get(localurl1, config).then(function (response) {\n              console.log(response);\n              var getdatas = response.data.stories;\n              getdatas.forEach(function (datas) {\n                var obj = {\n                  'username': datas.username,\n                  'useremail': datas.useremail,\n                  'title': datas.title,\n                  'storycontent': datas.storypara\n                };\n\n                _this.setState({\n                  userstory: [].concat(_toConsumableArray(_this.state.userstory), [obj])\n                });\n\n                console.log(_this.state.userstory);\n              });\n            }).catch(function (error) {\n              console.log(error);\n            });\n            _context.next = 20;\n            break;\n\n          case 17:\n            _context.prev = 17;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 20:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, this, [[0, 17]], Promise);\n  }\n};\n\nexport default HomeScreen;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/MOBOMEDIA/mobotcmsdemo/Frontendtech/reactnative/story/TechVlog/Screens/homescreen.js"],"names":["React","Component","useState","useEffect","AsyncStorage","Axios","Card","ListItem","Button","Icon","Loader","HomeScreen","props","console","log","getdatas","getItem","users","userdatas","JSON","parse","setState","data","gettoken","state","token","getuserid","userid","localurl","config","headers","get","then","response","profiles","profile","catch","error","localurl1","stories","forEach","datas","obj","username","useremail","title","storypara","userstory"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from 'react';\r\nimport { View, Text, SafeAreaView, StyleSheet, ScrollView } from 'react-native';\r\nimport AsyncStorage from '@react-native-community/async-storage';\r\nimport Axios from 'axios';\r\nimport { Card, ListItem, Button, Icon } from 'react-native-elements'\r\nimport Loader from './loader';\r\n\r\n// export default class HomeScreen extends Component {\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.state = {\r\n//             data: [],\r\n//             profiles: [],\r\n//             testdatas: '',\r\n//             userstory: [],\r\n//             activeSections: [],\r\n//         }\r\n//     }\r\n\r\n//     componentDidMount() {\r\n//         this.getdata();\r\n//     }\r\n//     getdata = async () => {\r\n//         try {\r\n//             let users = await AsyncStorage.getItem('userdatas');\r\n//             const userdatas = JSON.parse(users);\r\n//             console.log(userdatas);\r\n//             this.setState({ data: userdatas });\r\n//             const gettoken = this.state.data.token;\r\n//             const getuserid = this.state.data.userid;\r\n//             console.log(gettoken);\r\n//             const localurl = 'http://192.168.1.16:8000/api/getuserdetails/';\r\n//             // const localurl = 'http://localhost:8000/api/getuserdetails/';\r\n//             const config = {\r\n//                 headers: {\r\n//                     'content-type': 'multipart/form-data',\r\n//                     'Authorization': 'Bearer ' + gettoken,\r\n//                     'Accept': 'application/json',\r\n//                 },\r\n\r\n//             };\r\n//             Axios.get(localurl + getuserid, config)\r\n//                 .then(response => {\r\n//                     this.setState({ profiles: response.data.profile });\r\n//                     // console.log(response.data.profile.useremail)\r\n//                 })\r\n//                 .catch(function (error) {\r\n//                     console.log(error);\r\n//                 })\r\n//             // get stories by id\r\n//             const localurl1 = 'http://192.168.1.16:8000/api/allstories';\r\n//             // const localurl1 = 'http://localhost:8000/api/allstories';\r\n//             Axios.get(localurl1, config)\r\n//                 .then(response => {\r\n//                     // this.setState({ profiles: response.data.profile });\r\n//                     console.log(response)\r\n//                     const getdatas = response.data.stories;\r\n//                     getdatas.forEach(datas => {\r\n//                         const obj = {\r\n//                             'username': datas.username, 'useremail': datas.useremail,\r\n//                             'title': datas.title, 'storycontent': datas.storypara\r\n//                         };\r\n//                         this.setState({\r\n//                             userstory: [...this.state.userstory, obj]\r\n//                         });\r\n//                         console.log(this.state.userstory);\r\n//                         // this.setState({ userstory: datas });\r\n//                     })\r\n//                 })\r\n//                 .catch(function (error) {\r\n//                     console.log(error);\r\n//                 })\r\n//         } catch (e) {\r\n//             // error reading value\r\n//             console.log(e);\r\n//         }\r\n//     }\r\n//     render() {\r\n//         return (\r\n//             <SafeAreaView style={{ flex: 1 }}>\r\n//                 <ScrollView>\r\n//                     {/* <View>Text app</View> */}\r\n//                     {/* <Text>Hello {this.state.profiles.username}</Text> */}\r\n//                     <View style={styles.mainBody}>\r\n//                         {this.state.userstory.map((stories, index) => (\r\n//                             <Card key={index}>\r\n//                                 <Card.Title>\r\n//                                     <Text>{stories.title}</Text>\r\n//                                 </Card.Title>\r\n//                                 <Card.Divider />\r\n//                                 <View>\r\n//                                     <Text style={styles.storycontentbottomview}>{stories.storycontent}</Text>\r\n//                                     <Card.Divider />\r\n//                                 </View>\r\n//                                 <View>\r\n//                                     <Text>posted by {stories.username}</Text>\r\n//                                 </View>\r\n//                             </Card>\r\n//                         ))}\r\n//                     </View>\r\n//                 </ScrollView>\r\n//             </SafeAreaView>\r\n//         )\r\n//     }\r\n\r\n// }\r\n\r\n// const styles = StyleSheet.create({\r\n//     storycontentbottomview: {\r\n//         paddingBottom: 50,\r\n//     },\r\n//     mainBody: {\r\n//         paddingBottom: 50\r\n//     }\r\n// });\r\n\r\nconst HomeScreen = (props) => {\r\n    useEffect(() => {\r\n        console.log('********')\r\n        getdatas();\r\n    }, []);\r\n\r\n    async function getdatas() {\r\n        try {\r\n            let users = await AsyncStorage.getItem('userdatas');\r\n            const userdatas = JSON.parse(users);\r\n            console.log(userdatas);\r\n            this.setState({ data: userdatas });\r\n            const gettoken = this.state.data.token;\r\n            const getuserid = this.state.data.userid;\r\n            console.log(gettoken);\r\n            const localurl = 'http://192.168.1.16:8000/api/getuserdetails/';\r\n            // const localurl = 'http://localhost:8000/api/getuserdetails/';\r\n            const config = {\r\n                headers: {\r\n                    'content-type': 'multipart/form-data',\r\n                    'Authorization': 'Bearer ' + gettoken,\r\n                    'Accept': 'application/json',\r\n                },\r\n\r\n            };\r\n            Axios.get(localurl + getuserid, config)\r\n                .then(response => {\r\n                    this.setState({ profiles: response.data.profile });\r\n                    // console.log(response.data.profile.useremail)\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n            // get stories by id\r\n            const localurl1 = 'http://192.168.1.16:8000/api/allstories';\r\n            // const localurl1 = 'http://localhost:8000/api/allstories';\r\n            Axios.get(localurl1, config)\r\n                .then(response => {\r\n                    // this.setState({ profiles: response.data.profile });\r\n                    console.log(response)\r\n                    const getdatas = response.data.stories;\r\n                    getdatas.forEach(datas => {\r\n                        const obj = {\r\n                            'username': datas.username, 'useremail': datas.useremail,\r\n                            'title': datas.title, 'storycontent': datas.storypara\r\n                        };\r\n                        this.setState({\r\n                            userstory: [...this.state.userstory, obj]\r\n                        });\r\n                        console.log(this.state.userstory);\r\n                        // this.setState({ userstory: datas });\r\n                    })\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n        } catch (e) {\r\n            // error reading value\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n}\r\nexport default HomeScreen"]},"metadata":{},"sourceType":"module"}