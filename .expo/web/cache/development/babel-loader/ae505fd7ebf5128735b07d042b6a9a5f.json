{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\MOBOMEDIA\\\\mobotcmsdemo\\\\Frontendtech\\\\reactnative\\\\story\\\\TechVlog\\\\Screens\\\\homescreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport AsyncStorage from '@react-native-community/async-storage';\nimport Axios from 'axios';\nimport { Card, ListItem, Button, Icon } from 'react-native-elements';\nimport Loader from \"./loader\";\n\nvar HomeScreen = function (_Component) {\n  _inherits(HomeScreen, _Component);\n\n  var _super = _createSuper(HomeScreen);\n\n  function HomeScreen(props) {\n    var _this;\n\n    _classCallCheck(this, HomeScreen);\n\n    _this = _super.call(this, props);\n\n    _this.closeActivityIndicator = function () {\n      return setTimeout(function () {\n        return _this.setState({\n          animating: false\n        });\n      }, 60000);\n    };\n\n    _this.showLoader = function () {\n      _this.setState({\n        isLoading: true\n      });\n    };\n\n    _this.getdata = function _callee() {\n      var users, userdatas, gettoken, getuserid, localurl, config, localurl1;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('userdatas'));\n\n            case 3:\n              users = _context.sent;\n              userdatas = JSON.parse(users);\n              console.log(userdatas);\n\n              _this.setState({\n                data: userdatas\n              });\n\n              gettoken = _this.state.data.token;\n              getuserid = _this.state.data.userid;\n              console.log(gettoken);\n              localurl = 'http://192.168.1.16:8000/api/getuserdetails/';\n              config = {\n                headers: {\n                  'content-type': 'multipart/form-data',\n                  'Authorization': 'Bearer ' + gettoken,\n                  'Accept': 'application/json'\n                }\n              };\n              Axios.get(localurl + getuserid, config).then(function (response) {\n                _this.setState({\n                  profiles: response.data.profile\n                });\n              }).catch(function (error) {\n                console.log(error);\n              });\n              localurl1 = 'http://192.168.1.16:8000/api/allstories';\n              Axios.get(localurl1, config).then(function (response) {\n                console.log(response);\n                var getdatas = response.data.stories;\n                getdatas.forEach(function (datas) {\n                  var obj = {\n                    'username': datas.username,\n                    'useremail': datas.useremail,\n                    'title': datas.title,\n                    'storycontent': datas.storypara\n                  };\n\n                  _this.setState({\n                    userstory: [].concat(_toConsumableArray(_this.state.userstory), [obj])\n                  });\n\n                  console.log(_this.state.userstory);\n                });\n              }).catch(function (error) {\n                console.log(error);\n              });\n              _context.next = 20;\n              break;\n\n            case 17:\n              _context.prev = 17;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 20:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 17]], Promise);\n    };\n\n    _this.state = {\n      data: [],\n      profiles: [],\n      testdatas: '',\n      userstory: [],\n      activeSections: [],\n      isLoading: false\n    };\n    return _this;\n  }\n\n  _createClass(HomeScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.closeActivityIndicator();\n      this.getdata();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var animating = this.state.animating;\n      return React.createElement(SafeAreaView, {\n        style: {\n          flex: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }\n      }, React.createElement(ScrollView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }\n      }, React.createElement(ActivityIndicator, {\n        animating: animating,\n        color: \"#bc2b78\",\n        size: \"large\",\n        style: styles.activityIndicator,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }\n      })), React.createElement(View, {\n        style: styles.mainBody,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }\n      }, this.state.userstory.map(function (stories, index) {\n        return React.createElement(Card, {\n          key: index,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 29\n          }\n        }, React.createElement(Card.Title, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 33\n          }\n        }, React.createElement(Text, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 37\n          }\n        }, stories.title)), React.createElement(Card.Divider, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 33\n          }\n        }), React.createElement(View, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 33\n          }\n        }, React.createElement(Text, {\n          style: styles.storycontentbottomview,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 37\n          }\n        }, stories.storycontent), React.createElement(Card.Divider, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 37\n          }\n        })), React.createElement(View, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 33\n          }\n        }, React.createElement(Text, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 37\n          }\n        }, \"posted by \", stories.username)));\n      }))));\n    }\n  }]);\n\n  return HomeScreen;\n}(Component);\n\nexport { HomeScreen as default };\nvar styles = StyleSheet.create({\n  storycontentbottomview: {\n    paddingBottom: 50\n  },\n  mainBody: {\n    paddingBottom: 50\n  },\n  activityIndicator: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: 80\n  }\n});","map":{"version":3,"sources":["C:/Users/Admin/Desktop/MOBOMEDIA/mobotcmsdemo/Frontendtech/reactnative/story/TechVlog/Screens/homescreen.js"],"names":["React","Component","useState","useEffect","AsyncStorage","Axios","Card","ListItem","Button","Icon","Loader","HomeScreen","props","closeActivityIndicator","setTimeout","setState","animating","showLoader","isLoading","getdata","getItem","users","userdatas","JSON","parse","console","log","data","gettoken","state","token","getuserid","userid","localurl","config","headers","get","then","response","profiles","profile","catch","error","localurl1","getdatas","stories","forEach","datas","obj","username","useremail","title","storypara","userstory","testdatas","activeSections","flex","styles","activityIndicator","mainBody","map","index","storycontentbottomview","storycontent","StyleSheet","create","paddingBottom","justifyContent","alignItems","height"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from 'react';\r\nimport { View, Text, SafeAreaView, StyleSheet, ScrollView, ActivityIndicator } from 'react-native';\r\nimport AsyncStorage from '@react-native-community/async-storage';\r\nimport Axios from 'axios';\r\nimport { Card, ListItem, Button, Icon } from 'react-native-elements'\r\nimport Loader from './loader';\r\n\r\nexport default class HomeScreen extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            profiles: [],\r\n            testdatas: '',\r\n            userstory: [],\r\n            activeSections: [],\r\n            isLoading: false\r\n\r\n        }\r\n    }\r\n    closeActivityIndicator = () => setTimeout(() => this.setState({\r\n        animating: false\r\n    }), 60000)\r\n    componentDidMount() {\r\n        this.closeActivityIndicator()\r\n        this.getdata();\r\n    }\r\n    showLoader = () => {\r\n        this.setState({ isLoading: true });\r\n    };\r\n    getdata = async () => {\r\n        try {\r\n            let users = await AsyncStorage.getItem('userdatas');\r\n            const userdatas = JSON.parse(users);\r\n            console.log(userdatas);\r\n            this.setState({ data: userdatas });\r\n            const gettoken = this.state.data.token;\r\n            const getuserid = this.state.data.userid;\r\n            console.log(gettoken);\r\n            const localurl = 'http://192.168.1.16:8000/api/getuserdetails/';\r\n            // const localurl = 'http://localhost:8000/api/getuserdetails/';\r\n            const config = {\r\n                headers: {\r\n                    'content-type': 'multipart/form-data',\r\n                    'Authorization': 'Bearer ' + gettoken,\r\n                    'Accept': 'application/json',\r\n                },\r\n\r\n            };\r\n            Axios.get(localurl + getuserid, config)\r\n                .then(response => {\r\n                    this.setState({ profiles: response.data.profile });\r\n                    // console.log(response.data.profile.useremail)\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n            // get stories by id\r\n            const localurl1 = 'http://192.168.1.16:8000/api/allstories';\r\n            // const localurl1 = 'http://localhost:8000/api/allstories';\r\n            Axios.get(localurl1, config)\r\n                .then(response => {\r\n                    // this.setState({ profiles: response.data.profile });\r\n                    console.log(response)\r\n                    const getdatas = response.data.stories;\r\n                    getdatas.forEach(datas => {\r\n                        const obj = {\r\n                            'username': datas.username, 'useremail': datas.useremail,\r\n                            'title': datas.title, 'storycontent': datas.storypara\r\n                        };\r\n                        this.setState({\r\n                            userstory: [...this.state.userstory, obj]\r\n                        });\r\n                        console.log(this.state.userstory);\r\n                        // this.setState({ userstory: datas });\r\n                    })\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n        } catch (e) {\r\n            // error reading value\r\n            console.log(e);\r\n        }\r\n    }\r\n    render() {\r\n        const animating = this.state.animating\r\n\r\n        return (\r\n            <SafeAreaView style={{ flex: 1 }}>\r\n                <ScrollView>\r\n                    {/* <View>Text app</View> */}\r\n                    {/* <Text>Hello {this.state.profiles.username}</Text> */}\r\n                    <View>\r\n                        <ActivityIndicator\r\n                            animating={animating}\r\n                            color='#bc2b78'\r\n                            size=\"large\"\r\n                            style={styles.activityIndicator} />\r\n                    </View>\r\n                    <View style={styles.mainBody}>\r\n                        {this.state.userstory.map((stories, index) => (\r\n                            <Card key={index}>\r\n                                <Card.Title>\r\n                                    <Text>{stories.title}</Text>\r\n                                </Card.Title>\r\n                                <Card.Divider />\r\n                                <View>\r\n                                    <Text style={styles.storycontentbottomview}>{stories.storycontent}</Text>\r\n                                    <Card.Divider />\r\n                                </View>\r\n                                <View>\r\n                                    <Text>posted by {stories.username}</Text>\r\n                                </View>\r\n                            </Card>\r\n                        ))}\r\n                    </View>\r\n                </ScrollView>\r\n            </SafeAreaView>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    storycontentbottomview: {\r\n        paddingBottom: 50,\r\n    },\r\n    mainBody: {\r\n        paddingBottom: 50\r\n    },\r\n    activityIndicator: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: 80\r\n    }\r\n});"]},"metadata":{},"sourceType":"module"}