{"ast":null,"code":"import AsyncStorage from '@react-native-async-storage/async-storage';\nexport var USER_KEY = \"auth-demo-key\";\nexport var onSignIn = function onSignIn() {\n  return AsyncStorage.setItem(USER_KEY, \"true\");\n};\nexport var onSignOut = function onSignOut() {\n  return AsyncStorage.removeItem(USER_KEY);\n};\nexport var isSignedIn = function isSignedIn() {\n  return new Promise(function (resolve, reject) {\n    AsyncStorage.getItem(USER_KEY).then(function (res) {\n      if (res !== null) {\n        resolve(true);\n      } else {\n        resolve(false);\n      }\n    }).catch(function (err) {\n      return reject(err);\n    });\n  });\n};","map":{"version":3,"sources":["C:/Users/Admin/Desktop/MOBOMEDIA/mobotcmsdemo/Frontendtech/reactnative/story/TechVlog/components/auth.js"],"names":["AsyncStorage","USER_KEY","onSignIn","setItem","onSignOut","removeItem","isSignedIn","Promise","resolve","reject","getItem","then","res","catch","err"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,2CAAzB;AACA,OAAO,IAAMC,QAAQ,GAAG,eAAjB;AAEP,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA,SAAMF,YAAY,CAACG,OAAb,CAAqBF,QAArB,EAA+B,MAA/B,CAAN;AAAA,CAAjB;AAEP,OAAO,IAAMG,SAAS,GAAG,SAAZA,SAAY;AAAA,SAAMJ,YAAY,CAACK,UAAb,CAAwBJ,QAAxB,CAAN;AAAA,CAAlB;AAEP,OAAO,IAAMK,UAAU,GAAG,SAAbA,UAAa,GAAM;AAC5B,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCT,IAAAA,YAAY,CAACU,OAAb,CAAqBT,QAArB,EACKU,IADL,CACU,UAAAC,GAAG,EAAI;AACT,UAAIA,GAAG,KAAK,IAAZ,EAAkB;AACdJ,QAAAA,OAAO,CAAC,IAAD,CAAP;AACH,OAFD,MAEO;AACHA,QAAAA,OAAO,CAAC,KAAD,CAAP;AACH;AACJ,KAPL,EAQKK,KARL,CAQW,UAAAC,GAAG;AAAA,aAAIL,MAAM,CAACK,GAAD,CAAV;AAAA,KARd;AASH,GAVM,CAAP;AAWH,CAZM","sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage';\r\nexport const USER_KEY = \"auth-demo-key\";\r\n\r\nexport const onSignIn = () => AsyncStorage.setItem(USER_KEY, \"true\");\r\n\r\nexport const onSignOut = () => AsyncStorage.removeItem(USER_KEY);\r\n\r\nexport const isSignedIn = () => {\r\n    return new Promise((resolve, reject) => {\r\n        AsyncStorage.getItem(USER_KEY)\r\n            .then(res => {\r\n                if (res !== null) {\r\n                    resolve(true);\r\n                } else {\r\n                    resolve(false);\r\n                }\r\n            })\r\n            .catch(err => reject(err));\r\n    });\r\n};"]},"metadata":{},"sourceType":"module"}