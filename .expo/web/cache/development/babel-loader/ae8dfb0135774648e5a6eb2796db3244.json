{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\MOBOMEDIA\\\\mobotcmsdemo\\\\Frontendtech\\\\reactnative\\\\story\\\\TechVlog\\\\Screens\\\\registerscreen.js\";\n\nimport React, { useState, createRef } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Loader from \"./loader\";\n\nvar RegisterScreen = function RegisterScreen(props) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      userName = _useState2[0],\n      setUserName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userEmail = _useState4[0],\n      setUserEmail = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      userAge = _useState6[0],\n      setUserAge = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      userAddress = _useState8[0],\n      setUserAddress = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      userPassword = _useState10[0],\n      setUserPassword = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      errortext = _useState12[0],\n      setErrortext = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      isRegistraionSuccess = _useState14[0],\n      setIsRegistraionSuccess = _useState14[1];\n\n  var emailInputRef = createRef();\n  var ageInputRef = createRef();\n  var addressInputRef = createRef();\n  var passwordInputRef = createRef();\n\n  var handleSubmitButton = function handleSubmitButton() {\n    setErrortext('');\n\n    if (!userName) {\n      alert('Please fill Name');\n      return;\n    }\n\n    if (!userEmail) {\n      alert('Please fill Email');\n      return;\n    }\n\n    if (!userAge) {\n      alert('Please fill Age');\n      return;\n    }\n\n    if (!userAddress) {\n      alert('Please fill Address');\n      return;\n    }\n\n    if (!userPassword) {\n      alert('Please fill Password');\n      return;\n    }\n\n    var dataToSend = {\n      name: userName,\n      email: userEmail,\n      age: userAge,\n      address: userAddress,\n      password: userPassword\n    };\n    var formBody = [];\n\n    for (var key in dataToSend) {\n      var encodedKey = encodeURIComponent(key);\n      var encodedValue = encodeURIComponent(dataToSend[key]);\n      formBody.push(encodedKey + '=' + encodedValue);\n    }\n\n    formBody = formBody.join('&');\n    var url = ' http://192.168.1.4:8000/api/createaccount';\n    fetch(url, {\n      method: 'POST',\n      body: formBody,\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (responseJson) {\n      setLoading(false);\n      console.log(responseJson);\n\n      if (responseJson.status === 'success') {\n        setIsRegistraionSuccess(true);\n        console.log('Registration Successful. Please Login to proceed');\n      } else {\n        setErrortext(responseJson.msg);\n      }\n    }).catch(function (error) {\n      console.error(error);\n    });\n  };\n\n  if (isRegistraionSuccess) {\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        backgroundColor: '#307ecc',\n        justifyContent: 'center'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, React.createElement(Image, {\n      style: {\n        height: 150,\n        resizeMode: 'contain',\n        alignSelf: 'center'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    }), React.createElement(Text, {\n      style: styles.successTextStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }, \"Registration Successful\"), React.createElement(TouchableOpacity, {\n      style: styles.buttonStyle,\n      activeOpacity: 0.5,\n      onPress: function onPress() {\n        return props.navigation.navigate('LoginScreen');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: styles.buttonTextStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }\n    }, \"Login Now\")));\n  }\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      backgroundColor: '#307ecc'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, React.createElement(ScrollView, {\n    keyboardShouldPersistTaps: \"handled\",\n    contentContainerStyle: {\n      justifyContent: 'center',\n      alignContent: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: {\n      alignItems: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  }, React.createElement(Image, {\n    style: {\n      width: '50%',\n      height: 100,\n      resizeMode: 'contain',\n      margin: 30\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 21\n    }\n  })), React.createElement(KeyboardAvoidingView, {\n    enabled: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: styles.SectionStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 21\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputStyle,\n    onChangeText: function onChangeText(UserName) {\n      return setUserName(UserName);\n    },\n    underlineColorAndroid: \"#f000\",\n    placeholder: \"Enter Name\",\n    placeholderTextColor: \"#8b9cb5\",\n    autoCapitalize: \"sentences\",\n    returnKeyType: \"next\",\n    onSubmitEditing: function onSubmitEditing() {\n      return emailInputRef.current && emailInputRef.current.focus();\n    },\n    blurOnSubmit: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 25\n    }\n  })), React.createElement(View, {\n    style: styles.SectionStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 21\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputStyle,\n    onChangeText: function onChangeText(UserEmail) {\n      return setUserEmail(UserEmail);\n    },\n    underlineColorAndroid: \"#f000\",\n    placeholder: \"Enter Email\",\n    placeholderTextColor: \"#8b9cb5\",\n    keyboardType: \"email-address\",\n    ref: emailInputRef,\n    returnKeyType: \"next\",\n    onSubmitEditing: function onSubmitEditing() {\n      return passwordInputRef.current && passwordInputRef.current.focus();\n    },\n    blurOnSubmit: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 25\n    }\n  })), React.createElement(View, {\n    style: styles.SectionStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 21\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputStyle,\n    onChangeText: function onChangeText(UserPassword) {\n      return setUserPassword(UserPassword);\n    },\n    underlineColorAndroid: \"#f000\",\n    placeholder: \"Enter Password\",\n    placeholderTextColor: \"#8b9cb5\",\n    ref: passwordInputRef,\n    returnKeyType: \"next\",\n    secureTextEntry: true,\n    onSubmitEditing: function onSubmitEditing() {\n      return ageInputRef.current && ageInputRef.current.focus();\n    },\n    blurOnSubmit: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 25\n    }\n  })), React.createElement(View, {\n    style: styles.SectionStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 21\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputStyle,\n    onChangeText: function onChangeText(UserAge) {\n      return setUserAge(UserAge);\n    },\n    underlineColorAndroid: \"#f000\",\n    placeholder: \"Enter Age\",\n    placeholderTextColor: \"#8b9cb5\",\n    keyboardType: \"numeric\",\n    ref: ageInputRef,\n    returnKeyType: \"next\",\n    onSubmitEditing: function onSubmitEditing() {\n      return addressInputRef.current && addressInputRef.current.focus();\n    },\n    blurOnSubmit: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 25\n    }\n  })), React.createElement(View, {\n    style: styles.SectionStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 21\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputStyle,\n    onChangeText: function onChangeText(UserAddress) {\n      return setUserAddress(UserAddress);\n    },\n    underlineColorAndroid: \"#f000\",\n    placeholder: \"Enter Address\",\n    placeholderTextColor: \"#8b9cb5\",\n    autoCapitalize: \"sentences\",\n    ref: addressInputRef,\n    returnKeyType: \"next\",\n    onSubmitEditing: Keyboard.dismiss,\n    blurOnSubmit: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 25\n    }\n  })), errortext != '' ? React.createElement(Text, {\n    style: styles.errorTextStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 25\n    }\n  }, errortext) : null, React.createElement(TouchableOpacity, {\n    style: styles.buttonStyle,\n    activeOpacity: 0.5,\n    onPress: handleSubmitButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonTextStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 25\n    }\n  }, \"REGISTER\")))));\n};\n\nexport default RegisterScreen;\nvar styles = StyleSheet.create({\n  SectionStyle: {\n    flexDirection: 'row',\n    height: 40,\n    marginTop: 20,\n    marginLeft: 35,\n    marginRight: 35,\n    margin: 10\n  },\n  buttonStyle: {\n    backgroundColor: '#7DE24E',\n    borderWidth: 0,\n    color: '#FFFFFF',\n    borderColor: '#7DE24E',\n    height: 40,\n    alignItems: 'center',\n    borderRadius: 30,\n    marginLeft: 35,\n    marginRight: 35,\n    marginTop: 20,\n    marginBottom: 20\n  },\n  buttonTextStyle: {\n    color: '#FFFFFF',\n    paddingVertical: 10,\n    fontSize: 16\n  },\n  inputStyle: {\n    flex: 1,\n    color: 'white',\n    paddingLeft: 15,\n    paddingRight: 15,\n    borderWidth: 1,\n    borderRadius: 30,\n    borderColor: '#dadae8'\n  },\n  errorTextStyle: {\n    color: 'red',\n    textAlign: 'center',\n    fontSize: 14\n  },\n  successTextStyle: {\n    color: 'white',\n    textAlign: 'center',\n    fontSize: 18,\n    padding: 30\n  }\n});","map":{"version":3,"sources":["C:/Users/Admin/Desktop/MOBOMEDIA/mobotcmsdemo/Frontendtech/reactnative/story/TechVlog/Screens/registerscreen.js"],"names":["React","useState","createRef","Loader","RegisterScreen","props","userName","setUserName","userEmail","setUserEmail","userAge","setUserAge","userAddress","setUserAddress","userPassword","setUserPassword","errortext","setErrortext","isRegistraionSuccess","setIsRegistraionSuccess","emailInputRef","ageInputRef","addressInputRef","passwordInputRef","handleSubmitButton","alert","dataToSend","name","email","age","address","password","formBody","key","encodedKey","encodeURIComponent","encodedValue","push","join","url","fetch","method","body","headers","then","response","json","responseJson","setLoading","console","log","status","msg","catch","error","flex","backgroundColor","justifyContent","height","resizeMode","alignSelf","styles","successTextStyle","buttonStyle","navigation","navigate","buttonTextStyle","alignContent","alignItems","width","margin","SectionStyle","inputStyle","UserName","current","focus","UserEmail","UserPassword","UserAge","UserAddress","Keyboard","dismiss","errorTextStyle","StyleSheet","create","flexDirection","marginTop","marginLeft","marginRight","borderWidth","color","borderColor","borderRadius","marginBottom","paddingVertical","fontSize","paddingLeft","paddingRight","textAlign","padding"],"mappings":"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","sourcesContent":["import React, { useState, createRef } from 'react';\r\nimport {\r\n    StyleSheet,\r\n    TextInput,\r\n    View,\r\n    Text,\r\n    Image,\r\n    KeyboardAvoidingView,\r\n    Keyboard,\r\n    TouchableOpacity,\r\n    ScrollView,\r\n} from 'react-native';\r\n\r\nimport Loader from './loader';\r\n\r\nconst RegisterScreen = (props) => {\r\n    const [userName, setUserName] = useState('');\r\n    const [userEmail, setUserEmail] = useState('');\r\n    const [userAge, setUserAge] = useState('');\r\n    const [userAddress, setUserAddress] = useState('');\r\n    const [userPassword, setUserPassword] = useState('');\r\n    // const [loading, setLoading] = useState(false);\r\n    const [errortext, setErrortext] = useState('');\r\n    const [\r\n        isRegistraionSuccess,\r\n        setIsRegistraionSuccess\r\n    ] = useState(false);\r\n\r\n    const emailInputRef = createRef();\r\n    const ageInputRef = createRef();\r\n    const addressInputRef = createRef();\r\n    const passwordInputRef = createRef();\r\n\r\n    const handleSubmitButton = () => {\r\n        setErrortext('');\r\n        if (!userName) {\r\n            alert('Please fill Name');\r\n            return;\r\n        }\r\n        if (!userEmail) {\r\n            alert('Please fill Email');\r\n            return;\r\n        }\r\n        if (!userAge) {\r\n            alert('Please fill Age');\r\n            return;\r\n        }\r\n        if (!userAddress) {\r\n            alert('Please fill Address');\r\n            return;\r\n        }\r\n        if (!userPassword) {\r\n            alert('Please fill Password');\r\n            return;\r\n        }\r\n        //Show Loader\r\n        // setLoading(true);\r\n        var dataToSend = {\r\n            name: userName,\r\n            email: userEmail,\r\n            age: userAge,\r\n            address: userAddress,\r\n            password: userPassword,\r\n        };\r\n        var formBody = [];\r\n        for (var key in dataToSend) {\r\n            var encodedKey = encodeURIComponent(key);\r\n            var encodedValue = encodeURIComponent(dataToSend[key]);\r\n            formBody.push(encodedKey + '=' + encodedValue);\r\n        }\r\n        formBody = formBody.join('&');\r\n        const url = ' http://192.168.1.4:8000/api/createaccount'\r\n        // fetch('http://localhost:3000/api/user/register', {\r\n        fetch(url, {\r\n            method: 'POST',\r\n            body: formBody,\r\n            headers: {\r\n                //Header Defination\r\n                'Content-Type':\r\n                    'application/x-www-form-urlencoded;charset=UTF-8',\r\n            },\r\n        })\r\n            .then((response) => response.json())\r\n            .then((responseJson) => {\r\n                //Hide Loader\r\n                setLoading(false);\r\n                console.log(responseJson);\r\n                // If server response message same as Data Matched\r\n                if (responseJson.status === 'success') {\r\n                    setIsRegistraionSuccess(true);\r\n                    console.log(\r\n                        'Registration Successful. Please Login to proceed'\r\n                    );\r\n                } else {\r\n                    setErrortext(responseJson.msg);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                //Hide Loader\r\n                // setLoading(false);\r\n                console.error(error);\r\n            });\r\n    };\r\n    if (isRegistraionSuccess) {\r\n        return (\r\n            <View\r\n                style={{\r\n                    flex: 1,\r\n                    backgroundColor: '#307ecc',\r\n                    justifyContent: 'center',\r\n                }}>\r\n                <Image\r\n                    // source={require('../Image/success.png')}\r\n                    style={{\r\n                        height: 150,\r\n                        resizeMode: 'contain',\r\n                        alignSelf: 'center'\r\n                    }}\r\n                />\r\n                <Text style={styles.successTextStyle}>\r\n                    Registration Successful\r\n        </Text>\r\n                <TouchableOpacity\r\n                    style={styles.buttonStyle}\r\n                    activeOpacity={0.5}\r\n                    onPress={() => props.navigation.navigate('LoginScreen')}>\r\n                    <Text style={styles.buttonTextStyle}>Login Now</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        );\r\n    }\r\n    return (\r\n        <View style={{ flex: 1, backgroundColor: '#307ecc' }}>\r\n            {/* <Loader loading={loading} /> */}\r\n            <ScrollView\r\n                keyboardShouldPersistTaps=\"handled\"\r\n                contentContainerStyle={{\r\n                    justifyContent: 'center',\r\n                    alignContent: 'center',\r\n                }}>\r\n                <View style={{ alignItems: 'center' }}>\r\n                    <Image\r\n                        // source={require('../Image/aboutreact.png')}\r\n                        style={{\r\n                            width: '50%',\r\n                            height: 100,\r\n                            resizeMode: 'contain',\r\n                            margin: 30,\r\n                        }}\r\n                    />\r\n                </View>\r\n                <KeyboardAvoidingView enabled>\r\n                    <View style={styles.SectionStyle}>\r\n                        <TextInput\r\n                            style={styles.inputStyle}\r\n                            onChangeText={(UserName) => setUserName(UserName)}\r\n                            underlineColorAndroid=\"#f000\"\r\n                            placeholder=\"Enter Name\"\r\n                            placeholderTextColor=\"#8b9cb5\"\r\n                            autoCapitalize=\"sentences\"\r\n                            returnKeyType=\"next\"\r\n                            onSubmitEditing={() =>\r\n                                emailInputRef.current && emailInputRef.current.focus()\r\n                            }\r\n                            blurOnSubmit={false}\r\n                        />\r\n                    </View>\r\n                    <View style={styles.SectionStyle}>\r\n                        <TextInput\r\n                            style={styles.inputStyle}\r\n                            onChangeText={(UserEmail) => setUserEmail(UserEmail)}\r\n                            underlineColorAndroid=\"#f000\"\r\n                            placeholder=\"Enter Email\"\r\n                            placeholderTextColor=\"#8b9cb5\"\r\n                            keyboardType=\"email-address\"\r\n                            ref={emailInputRef}\r\n                            returnKeyType=\"next\"\r\n                            onSubmitEditing={() =>\r\n                                passwordInputRef.current &&\r\n                                passwordInputRef.current.focus()\r\n                            }\r\n                            blurOnSubmit={false}\r\n                        />\r\n                    </View>\r\n                    <View style={styles.SectionStyle}>\r\n                        <TextInput\r\n                            style={styles.inputStyle}\r\n                            onChangeText={(UserPassword) =>\r\n                                setUserPassword(UserPassword)\r\n                            }\r\n                            underlineColorAndroid=\"#f000\"\r\n                            placeholder=\"Enter Password\"\r\n                            placeholderTextColor=\"#8b9cb5\"\r\n                            ref={passwordInputRef}\r\n                            returnKeyType=\"next\"\r\n                            secureTextEntry={true}\r\n                            onSubmitEditing={() =>\r\n                                ageInputRef.current &&\r\n                                ageInputRef.current.focus()\r\n                            }\r\n                            blurOnSubmit={false}\r\n                        />\r\n                    </View>\r\n                    <View style={styles.SectionStyle}>\r\n                        <TextInput\r\n                            style={styles.inputStyle}\r\n                            onChangeText={(UserAge) => setUserAge(UserAge)}\r\n                            underlineColorAndroid=\"#f000\"\r\n                            placeholder=\"Enter Age\"\r\n                            placeholderTextColor=\"#8b9cb5\"\r\n                            keyboardType=\"numeric\"\r\n                            ref={ageInputRef}\r\n                            returnKeyType=\"next\"\r\n                            onSubmitEditing={() =>\r\n                                addressInputRef.current &&\r\n                                addressInputRef.current.focus()\r\n                            }\r\n                            blurOnSubmit={false}\r\n                        />\r\n                    </View>\r\n                    <View style={styles.SectionStyle}>\r\n                        <TextInput\r\n                            style={styles.inputStyle}\r\n                            onChangeText={(UserAddress) =>\r\n                                setUserAddress(UserAddress)\r\n                            }\r\n                            underlineColorAndroid=\"#f000\"\r\n                            placeholder=\"Enter Address\"\r\n                            placeholderTextColor=\"#8b9cb5\"\r\n                            autoCapitalize=\"sentences\"\r\n                            ref={addressInputRef}\r\n                            returnKeyType=\"next\"\r\n                            onSubmitEditing={Keyboard.dismiss}\r\n                            blurOnSubmit={false}\r\n                        />\r\n                    </View>\r\n                    {errortext != '' ? (\r\n                        <Text style={styles.errorTextStyle}>\r\n                            {errortext}\r\n                        </Text>\r\n                    ) : null}\r\n                    <TouchableOpacity\r\n                        style={styles.buttonStyle}\r\n                        activeOpacity={0.5}\r\n                        onPress={handleSubmitButton}>\r\n                        <Text style={styles.buttonTextStyle}>REGISTER</Text>\r\n                    </TouchableOpacity>\r\n                </KeyboardAvoidingView>\r\n            </ScrollView>\r\n        </View>\r\n    );\r\n};\r\nexport default RegisterScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n    SectionStyle: {\r\n        flexDirection: 'row',\r\n        height: 40,\r\n        marginTop: 20,\r\n        marginLeft: 35,\r\n        marginRight: 35,\r\n        margin: 10,\r\n    },\r\n    buttonStyle: {\r\n        backgroundColor: '#7DE24E',\r\n        borderWidth: 0,\r\n        color: '#FFFFFF',\r\n        borderColor: '#7DE24E',\r\n        height: 40,\r\n        alignItems: 'center',\r\n        borderRadius: 30,\r\n        marginLeft: 35,\r\n        marginRight: 35,\r\n        marginTop: 20,\r\n        marginBottom: 20,\r\n    },\r\n    buttonTextStyle: {\r\n        color: '#FFFFFF',\r\n        paddingVertical: 10,\r\n        fontSize: 16,\r\n    },\r\n    inputStyle: {\r\n        flex: 1,\r\n        color: 'white',\r\n        paddingLeft: 15,\r\n        paddingRight: 15,\r\n        borderWidth: 1,\r\n        borderRadius: 30,\r\n        borderColor: '#dadae8',\r\n    },\r\n    errorTextStyle: {\r\n        color: 'red',\r\n        textAlign: 'center',\r\n        fontSize: 14,\r\n    },\r\n    successTextStyle: {\r\n        color: 'white',\r\n        textAlign: 'center',\r\n        fontSize: 18,\r\n        padding: 30,\r\n    },\r\n});"]},"metadata":{},"sourceType":"module"}