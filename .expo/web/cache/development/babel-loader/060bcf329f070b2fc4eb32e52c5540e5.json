{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _extends from \"@babel/runtime/helpers/extends\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\MOBOMEDIA\\\\mobotcmsdemo\\\\Frontendtech\\\\reactnative\\\\story\\\\TechVlog\\\\Screens\\\\sidebarmenu.js\";\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { DrawerContentScrollView, DrawerItemList, DrawerItem } from '@react-navigation/drawer';\nimport Axios from 'axios';\nimport AsyncStorage from '@react-native-community/async-storage';\n\nvar CustomSidebarMenu = function CustomSidebarMenu(props) {\n  var users, userdatas, gettoken, getuserid, localurl, config;\n  return _regeneratorRuntime.async(function CustomSidebarMenu$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem('userdatas'));\n\n        case 3:\n          users = _context.sent;\n          userdatas = JSON.parse(users);\n          gettoken = userdatas.token;\n          getuserid = userdatas.userid;\n          localurl = 'https://tranquil-dusk-36378.herokuapp.com/api/getuserdetails/';\n          config = {\n            headers: {\n              'content-type': 'multipart/form-data',\n              'Authorization': 'Bearer ' + gettoken,\n              'Accept': 'application/json'\n            }\n          };\n          Axios.get(localurl + getuserid, config).then(function (response) {\n            console.log(response.data.profile.username);\n            return React.createElement(View, {\n              style: stylesSidebar.sideMenuContainer,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 21\n              }\n            }, React.createElement(View, {\n              style: stylesSidebar.profileHeader,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 25\n              }\n            }, React.createElement(View, {\n              style: stylesSidebar.profileHeaderPicCircle,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 29\n              }\n            }, React.createElement(Text, {\n              style: {\n                fontSize: 25,\n                color: '#307ecc'\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 33\n              }\n            }, 'Tech Blogs'.charAt(0))), React.createElement(Text, {\n              style: stylesSidebar.profileHeaderText,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 29\n              }\n            }, \"Blogs\")), React.createElement(View, {\n              style: stylesSidebar.profileHeaderLine,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 25\n              }\n            }), React.createElement(DrawerContentScrollView, _extends({}, props, {\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 25\n              }\n            }), React.createElement(DrawerItemList, _extends({}, props, {\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 29\n              }\n            })), React.createElement(DrawerItem, {\n              label: function label(_ref) {\n                var color = _ref.color;\n                return React.createElement(Text, {\n                  style: {\n                    color: '#d8d8d8'\n                  },\n                  __self: _this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 53,\n                    columnNumber: 37\n                  }\n                }, \"Logout\");\n              },\n              onPress: function onPress() {\n                props.navigation.toggleDrawer();\n                Alert.alert('Logout', 'Are you sure? You want to logout?', [{\n                  text: 'Cancel',\n                  onPress: function onPress() {\n                    return null;\n                  }\n                }, {\n                  text: 'Confirm',\n                  onPress: function onPress() {\n                    AsyncStorage.clear();\n                    props.navigation.replace('Auth');\n                  }\n                }], {\n                  cancelable: false\n                });\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 29\n              }\n            })));\n          }).catch(function (error) {\n            console.log(error);\n          });\n          _context.next = 15;\n          break;\n\n        case 12:\n          _context.prev = 12;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 12]], Promise);\n};\n\nexport default CustomSidebarMenu;\nvar stylesSidebar = StyleSheet.create({\n  sideMenuContainer: {\n    width: '100%',\n    height: '100%',\n    backgroundColor: '#307ecc',\n    paddingTop: 40,\n    color: 'white'\n  },\n  profileHeader: {\n    flexDirection: 'row',\n    backgroundColor: '#307ecc',\n    padding: 15,\n    textAlign: 'center'\n  },\n  profileHeaderPicCircle: {\n    width: 60,\n    height: 60,\n    borderRadius: 60 / 2,\n    color: 'white',\n    backgroundColor: '#ffffff',\n    textAlign: 'center',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  profileHeaderText: {\n    color: 'white',\n    alignSelf: 'center',\n    paddingHorizontal: 10,\n    fontWeight: 'bold'\n  },\n  profileHeaderLine: {\n    height: 1,\n    marginHorizontal: 20,\n    backgroundColor: '#e2e2e2',\n    marginTop: 15\n  }\n});","map":{"version":3,"sources":["C:/Users/Admin/Desktop/MOBOMEDIA/mobotcmsdemo/Frontendtech/reactnative/story/TechVlog/Screens/sidebarmenu.js"],"names":["React","useState","DrawerContentScrollView","DrawerItemList","DrawerItem","Axios","AsyncStorage","CustomSidebarMenu","props","getItem","users","userdatas","JSON","parse","gettoken","token","getuserid","userid","localurl","config","headers","get","then","response","console","log","data","profile","username","stylesSidebar","sideMenuContainer","profileHeader","profileHeaderPicCircle","fontSize","color","charAt","profileHeaderText","profileHeaderLine","navigation","toggleDrawer","Alert","alert","text","onPress","clear","replace","cancelable","catch","error","StyleSheet","create","width","height","backgroundColor","paddingTop","flexDirection","padding","textAlign","borderRadius","justifyContent","alignItems","alignSelf","paddingHorizontal","fontWeight","marginHorizontal","marginTop"],"mappings":"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","sourcesContent":["// Example of Splash, Login and Sign Up in React Native\r\n// https://aboutreact.com/react-native-login-and-signup/\r\nimport React, { useState } from 'react';\r\nimport { View, Text, Alert, StyleSheet } from 'react-native';\r\nimport {\r\n    DrawerContentScrollView,\r\n    DrawerItemList,\r\n    DrawerItem,\r\n} from '@react-navigation/drawer';\r\nimport Axios from 'axios';\r\nimport AsyncStorage from '@react-native-community/async-storage';\r\n\r\nconst CustomSidebarMenu = async (props) => {\r\n    try {\r\n        let users = await AsyncStorage.getItem('userdatas');\r\n        const userdatas = JSON.parse(users);\r\n        // console.log(userdatas);\r\n        // this.setState({ data: userdatas });\r\n        const gettoken = userdatas.token;\r\n        const getuserid = userdatas.userid;\r\n        // console.log(gettoken);\r\n        const localurl = 'https://tranquil-dusk-36378.herokuapp.com/api/getuserdetails/'\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'multipart/form-data',\r\n                'Authorization': 'Bearer ' + gettoken,\r\n                'Accept': 'application/json',\r\n            },\r\n\r\n        };\r\n        Axios.get(localurl + getuserid, config)\r\n            .then(response => {\r\n                // this.setState({ profiles: response.data.profile });\r\n                console.log(response.data.profile.username);\r\n                return (\r\n                    <View style={stylesSidebar.sideMenuContainer}>\r\n                        <View style={stylesSidebar.profileHeader}>\r\n                            <View style={stylesSidebar.profileHeaderPicCircle}>\r\n                                <Text style={{ fontSize: 25, color: '#307ecc' }}>\r\n                                    {'Tech Blogs'.charAt(0)}\r\n                                </Text>\r\n                            </View>\r\n                            <Text style={stylesSidebar.profileHeaderText}>\r\n                                Blogs\r\n                    </Text>\r\n                        </View>\r\n                        <View style={stylesSidebar.profileHeaderLine} />\r\n            \r\n                        <DrawerContentScrollView {...props}>\r\n                            <DrawerItemList {...props} />\r\n                            <DrawerItem\r\n                                label={({ color }) =>\r\n                                    <Text style={{ color: '#d8d8d8' }}>\r\n                                        Logout\r\n                        </Text>\r\n                                }\r\n                                onPress={() => {\r\n                                    props.navigation.toggleDrawer();\r\n                                    Alert.alert(\r\n                                        'Logout',\r\n                                        'Are you sure? You want to logout?',\r\n                                        [\r\n                                            {\r\n                                                text: 'Cancel',\r\n                                                onPress: () => {\r\n                                                    return null;\r\n                                                },\r\n                                            },\r\n                                            {\r\n                                                text: 'Confirm',\r\n                                                onPress: () => {\r\n                                                    AsyncStorage.clear();\r\n                                                    props.navigation.replace('Auth');\r\n                                                },\r\n                                            },\r\n                                        ],\r\n                                        { cancelable: false },\r\n                                    );\r\n                                }}\r\n                            />\r\n                        </DrawerContentScrollView>\r\n                    </View>\r\n                );\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            })\r\n    } catch (e) {\r\n        // error reading value\r\n        console.log(e);\r\n    }\r\n}\r\n// const CustomSidebarMenu = (props) => {\r\n//     { getdata() }\r\n    \r\n// };\r\n\r\nexport default CustomSidebarMenu;\r\n\r\nconst stylesSidebar = StyleSheet.create({\r\n    sideMenuContainer: {\r\n        width: '100%',\r\n        height: '100%',\r\n        backgroundColor: '#307ecc',\r\n        paddingTop: 40,\r\n        color: 'white',\r\n    },\r\n    profileHeader: {\r\n        flexDirection: 'row',\r\n        backgroundColor: '#307ecc',\r\n        padding: 15,\r\n        textAlign: 'center',\r\n    },\r\n    profileHeaderPicCircle: {\r\n        width: 60,\r\n        height: 60,\r\n        borderRadius: 60 / 2,\r\n        color: 'white',\r\n        backgroundColor: '#ffffff',\r\n        textAlign: 'center',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    profileHeaderText: {\r\n        color: 'white',\r\n        alignSelf: 'center',\r\n        paddingHorizontal: 10,\r\n        fontWeight: 'bold',\r\n    },\r\n    profileHeaderLine: {\r\n        height: 1,\r\n        marginHorizontal: 20,\r\n        backgroundColor: '#e2e2e2',\r\n        marginTop: 15,\r\n    },\r\n});"]},"metadata":{},"sourceType":"module"}