{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\MOBOMEDIA\\\\mobotcmsdemo\\\\Frontendtech\\\\reactnative\\\\story\\\\TechVlog\\\\Screens\\\\homescreen.js\";\nimport React, { Component, useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport AsyncStorage from '@react-native-community/async-storage';\nimport Axios from 'axios';\nimport { Card, ListItem, Button, Icon } from 'react-native-elements';\nimport Loader from \"./loader\";\nimport { useFocusEffect } from '@react-navigation/native';\n\nfunction HomeScreen() {\n  var _React$useState, _React$useState2, user, setUser, getusestory;\n\n  return _regeneratorRuntime.async(function HomeScreen$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          getusestory = function _getusestory() {\n            var users, userdatas, gettoken, getuserid, config, localurl1;\n            return _regeneratorRuntime.async(function getusestory$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.prev = 0;\n                    _context.next = 3;\n                    return _regeneratorRuntime.awrap(AsyncStorage.getItem('userdatas'));\n\n                  case 3:\n                    users = _context.sent;\n                    userdatas = JSON.parse(users);\n                    console.log(userdatas);\n                    gettoken = this.state.data.token;\n                    getuserid = this.state.data.userid;\n                    console.log(gettoken);\n                    config = {\n                      headers: {\n                        'content-type': 'multipart/form-data',\n                        'Authorization': 'Bearer ' + gettoken,\n                        'Accept': 'application/json'\n                      }\n                    };\n                    localurl1 = 'http://192.168.1.16:8000/api/allstories';\n                    Axios.get(localurl1, config).then(function (response) {\n                      var getdatas = response.data.stories;\n                      getdatas.forEach(function (datas) {\n                        var obj = {\n                          'username': datas.username,\n                          'useremail': datas.useremail,\n                          'title': datas.title,\n                          'storycontent': datas.storypara\n                        };\n                        console.log(obj);\n                      });\n                    }).catch(function (error) {\n                      console.log(error);\n                    });\n                    _context.next = 17;\n                    break;\n\n                  case 14:\n                    _context.prev = 14;\n                    _context.t0 = _context[\"catch\"](0);\n                    console.log(_context.t0);\n\n                  case 17:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, null, this, [[0, 14]], Promise);\n          };\n\n          _React$useState = React.useState(null), _React$useState2 = _slicedToArray(_React$useState, 2), user = _React$useState2[0], setUser = _React$useState2[1];\n          useFocusEffect(React.useCallback(function () {\n            return function () {\n              return getusestory();\n            };\n          }, []));\n          return _context2.abrupt(\"return\", React.createElement(View, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 9\n            }\n          }, React.createElement(Text, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 13\n            }\n          }, \"one app test\")));\n\n        case 4:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, this, null, Promise);\n}\n\nexport default HomeScreen;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/MOBOMEDIA/mobotcmsdemo/Frontendtech/reactnative/story/TechVlog/Screens/homescreen.js"],"names":["React","Component","useState","useEffect","AsyncStorage","Axios","Card","ListItem","Button","Icon","Loader","useFocusEffect","HomeScreen","getusestory","getItem","users","userdatas","JSON","parse","console","log","gettoken","state","data","token","getuserid","userid","config","headers","localurl1","get","then","response","getdatas","stories","forEach","datas","obj","username","useremail","title","storypara","catch","error","user","setUser","useCallback"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;;;;;;;AAEA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,MAAzB,EAAiCC,IAAjC,QAA6C,uBAA7C;AACA,OAAOC,MAAP;AACA,SAASC,cAAT,QAA+B,0BAA/B;;AAyIA,SAAeC,UAAf;AAAA,wDAEeC,WAFf;;AAAA;AAAA;AAAA;AAAA;AAEeA,UAAAA,WAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDAI0BT,YAAY,CAACU,OAAb,CAAqB,WAArB,CAJ1B;;AAAA;AAIYC,oBAAAA,KAJZ;AAKcC,oBAAAA,SALd,GAK0BC,IAAI,CAACC,KAAL,CAAWH,KAAX,CAL1B;AAMQI,oBAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAZ;AACMK,oBAAAA,QAPd,GAOyB,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,KAPzC;AAQcC,oBAAAA,SARd,GAQ0B,KAAKH,KAAL,CAAWC,IAAX,CAAgBG,MAR1C;AASQP,oBAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ;AACMM,oBAAAA,MAVd,GAUuB;AACXC,sBAAAA,OAAO,EAAE;AACL,wCAAgB,qBADX;AAEL,yCAAiB,YAAYP,QAFxB;AAGL,kCAAU;AAHL;AADE,qBAVvB;AAmBcQ,oBAAAA,SAnBd,GAmB0B,yCAnB1B;AAoBQxB,oBAAAA,KAAK,CAACyB,GAAN,CAAUD,SAAV,EAAqBF,MAArB,EACKI,IADL,CACU,UAAAC,QAAQ,EAAI;AAEd,0BAAMC,QAAQ,GAAGD,QAAQ,CAACT,IAAT,CAAcW,OAA/B;AACAD,sBAAAA,QAAQ,CAACE,OAAT,CAAiB,UAAAC,KAAK,EAAI;AACtB,4BAAMC,GAAG,GAAG;AACR,sCAAYD,KAAK,CAACE,QADV;AACoB,uCAAaF,KAAK,CAACG,SADvC;AAER,mCAASH,KAAK,CAACI,KAFP;AAEc,0CAAgBJ,KAAK,CAACK;AAFpC,yBAAZ;AAIAtB,wBAAAA,OAAO,CAACC,GAAR,CAAYiB,GAAZ;AACH,uBAND;AAOH,qBAXL,EAYKK,KAZL,CAYW,UAAUC,KAAV,EAAiB;AACpBxB,sBAAAA,OAAO,CAACC,GAAR,CAAYuB,KAAZ;AACH,qBAdL;AApBR;AAAA;;AAAA;AAAA;AAAA;AAqCQxB,oBAAAA,OAAO,CAACC,GAAR;;AArCR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,4BAC4BpB,KAAK,CAACE,QAAN,CAAe,IAAf,CAD5B,yDACW0C,IADX,wBACiBC,OADjB;AAwCIlC,UAAAA,cAAc,CACVX,KAAK,CAAC8C,WAAN,CAAkB,YAAM;AAEpB,mBAAO;AAAA,qBAAMjC,WAAW,EAAjB;AAAA,aAAP;AACH,WAHD,EAGG,EAHH,CADU,CAAd;AAxCJ,4CAiDQ,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,CAjDR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAwDA,eAAeD,UAAf","sourcesContent":["import React, { Component, useState, useEffect } from 'react';\r\nimport { View, Text, SafeAreaView, StyleSheet, ScrollView, ActivityIndicator } from 'react-native';\r\nimport AsyncStorage from '@react-native-community/async-storage';\r\nimport Axios from 'axios';\r\nimport { Card, ListItem, Button, Icon } from 'react-native-elements'\r\nimport Loader from './loader';\r\nimport { useFocusEffect } from '@react-navigation/native';\r\n\r\n// export default class HomeScreen extends Component {\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.state = {\r\n//             data: [],\r\n//             profiles: [],\r\n//             testdatas: '',\r\n//             userstory: [],\r\n//             activeSections: [],\r\n//             isLoading: false\r\n\r\n//         }\r\n//     }\r\n//     // closeActivityIndicator = () => setTimeout(() => this.setState({\r\n//     //     animating: false\r\n//     // }), 60000)\r\n\r\n//     componentDidMount() {\r\n//         // this.closeActivityIndicator()\r\n//         this.getdata();\r\n//     }\r\n//     showLoader = () => {\r\n//         this.setState({ isLoading: true });\r\n//     };\r\n//     getdata = async () => {\r\n//         try {\r\n//             let users = await AsyncStorage.getItem('userdatas');\r\n//             const userdatas = JSON.parse(users);\r\n//             console.log(userdatas);\r\n//             this.setState({ data: userdatas });\r\n//             const gettoken = this.state.data.token;\r\n//             const getuserid = this.state.data.userid;\r\n//             console.log(gettoken);\r\n//             const localurl = 'http://192.168.1.16:8000/api/getuserdetails/';\r\n//             // const localurl = 'http://localhost:8000/api/getuserdetails/';\r\n//             const config = {\r\n//                 headers: {\r\n//                     'content-type': 'multipart/form-data',\r\n//                     'Authorization': 'Bearer ' + gettoken,\r\n//                     'Accept': 'application/json',\r\n//                 },\r\n\r\n//             };\r\n//             Axios.get(localurl + getuserid, config)\r\n//                 .then(response => {\r\n//                     this.setState({ profiles: response.data.profile });\r\n//                     // console.log(response.data.profile.useremail)\r\n//                 })\r\n//                 .catch(function (error) {\r\n//                     console.log(error);\r\n//                 })\r\n//             // get stories by id\r\n//             const localurl1 = 'http://192.168.1.16:8000/api/allstories';\r\n//             // const localurl1 = 'http://localhost:8000/api/allstories';\r\n//             Axios.get(localurl1, config)\r\n//                 .then(response => {\r\n//                     // this.setState({ profiles: response.data.profile });\r\n//                     console.log(response)\r\n//                     const getdatas = response.data.stories;\r\n//                     getdatas.forEach(datas => {\r\n//                         const obj = {\r\n//                             'username': datas.username, 'useremail': datas.useremail,\r\n//                             'title': datas.title, 'storycontent': datas.storypara\r\n//                         };\r\n//                         this.setState({\r\n//                             userstory: [...this.state.userstory, obj]\r\n//                         });\r\n//                         console.log(this.state.userstory);\r\n//                         // this.setState({ userstory: datas });\r\n//                     })\r\n//                 })\r\n//                 .catch(function (error) {\r\n//                     console.log(error);\r\n//                 })\r\n//         } catch (e) {\r\n//             // error reading value\r\n//             console.log(e);\r\n//         }\r\n//     }\r\n//     render() {\r\n//         const animating = this.state.animating\r\n\r\n//         return (\r\n//             <SafeAreaView style={{ flex: 1 }}>\r\n//                 <ScrollView>\r\n//                     {/* <View>Text app</View> */}\r\n//                     {/* <Text>Hello {this.state.profiles.username}</Text> */}\r\n//                     {/* <View>\r\n//                         <ActivityIndicator\r\n//                             animating={animating}\r\n//                             color='#bc2b78'\r\n//                             size=\"large\"\r\n//                             style={styles.activityIndicator} />\r\n//                     </View> */}\r\n//                     <View style={styles.mainBody}>\r\n//                         {this.state.userstory.map((stories, index) => (\r\n//                             <Card key={index}>\r\n//                                 <Card.Title>\r\n//                                     <Text>{stories.title}</Text>\r\n//                                 </Card.Title>\r\n//                                 <Card.Divider />\r\n//                                 <View>\r\n//                                     <Text style={styles.storycontentbottomview}>{stories.storycontent}</Text>\r\n//                                     <Card.Divider />\r\n//                                 </View>\r\n//                                 <View>\r\n//                                     <Text>posted by {stories.username}</Text>\r\n//                                 </View>\r\n//                             </Card>\r\n//                         ))}\r\n//                     </View>\r\n//                 </ScrollView>\r\n//             </SafeAreaView>\r\n//         )\r\n//     }\r\n\r\n// }\r\n\r\n// const styles = StyleSheet.create({\r\n//     storycontentbottomview: {\r\n//         paddingBottom: 50,\r\n//     },\r\n//     mainBody: {\r\n//         paddingBottom: 50\r\n//     },\r\n//     activityIndicator: {\r\n//         flex: 1,\r\n//         justifyContent: 'center',\r\n//         alignItems: 'center',\r\n//         height: 80\r\n//     }\r\n// });\r\n\r\n\r\n\r\nasync function HomeScreen() {\r\n    const [user, setUser] = React.useState(null);\r\nasync function getusestory() {\r\n    try {\r\n        let users = await AsyncStorage.getItem('userdatas');\r\n        const userdatas = JSON.parse(users);\r\n        console.log(userdatas);\r\n        const gettoken = this.state.data.token;\r\n        const getuserid = this.state.data.userid;\r\n        console.log(gettoken);\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'multipart/form-data',\r\n                'Authorization': 'Bearer ' + gettoken,\r\n                'Accept': 'application/json',\r\n            },\r\n\r\n        };\r\n        // get stories by id\r\n        const localurl1 = 'http://192.168.1.16:8000/api/allstories';\r\n        Axios.get(localurl1, config)\r\n            .then(response => {\r\n                // console.log(response)\r\n                const getdatas = response.data.stories;\r\n                getdatas.forEach(datas => {\r\n                    const obj = {\r\n                        'username': datas.username, 'useremail': datas.useremail,\r\n                        'title': datas.title, 'storycontent': datas.storypara\r\n                    };\r\n                    console.log(obj)\r\n                })\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            })\r\n    } catch (e) {\r\n        // error reading value\r\n        console.log(e);\r\n    }\r\n}\r\n    useFocusEffect(\r\n        React.useCallback(() => {\r\n         \r\n            return () => getusestory();\r\n        }, [])\r\n    );\r\n\r\n    // return <ProfileContent user={user} />;\r\n    return (\r\n        <View>\r\n            <Text>\r\n                one app test\r\n            </Text>\r\n        </View>\r\n    )\r\n}\r\nexport default HomeScreen"]},"metadata":{},"sourceType":"module"}