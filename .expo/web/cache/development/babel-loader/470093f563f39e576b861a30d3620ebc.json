{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\MOBOMEDIA\\\\mobotcmsdemo\\\\Frontendtech\\\\reactnative\\\\story\\\\TechVlog\\\\Screens\\\\storycreate.js\";\n\nimport React, { useState, createRef } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport AsyncStorage from '@react-native-community/async-storage';\nimport Axios from 'axios';\nimport Loader from \"./loader\";\n\nvar Storycreatescreen = function Storycreatescreen(props) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setusername = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      useremail = _useState4[0],\n      setuseremail = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      title = _useState6[0],\n      settitle = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      storypara = _useState8[0],\n      setstorypara = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      errortext = _useState10[0],\n      setErrortext = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      isRegistraionSuccess = _useState12[0],\n      setIsRegistraionSuccess = _useState12[1];\n\n  var emailInputRef = createRef();\n  var ageInputRef = createRef();\n  var addressInputRef = createRef();\n  var passwordInputRef = createRef();\n\n  var handleSubmitButton = function handleSubmitButton() {\n    var users, userdatas, gettoken, getuserid, geturl, config;\n    return _regeneratorRuntime.async(function handleSubmitButton$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setErrortext('');\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('userdatas'));\n\n          case 4:\n            users = _context.sent;\n            userdatas = JSON.parse(users);\n            console.log(userdatas);\n            gettoken = userdatas.token;\n            getuserid = userdatas.userid;\n            console.log(gettoken);\n            geturl = 'http://192.168.1.4:8000/api/getuserdetails/';\n            config = {\n              headers: {\n                'content-type': 'multipart/form-data',\n                'Authorization': 'Bearer ' + gettoken,\n                'Accept': 'application/json'\n              }\n            };\n            Axios.get(geturl + getuserid, config).then(function (response) {\n              console.log(response.data.profile.useremail);\n              var url = 'http://192.168.1.4:8000/api/createstory';\n              fetch(url, {\n                method: 'POST',\n                headers: {\n                  Accept: 'application/json',\n                  'Content-Type': 'application/json',\n                  'Authorization': 'Bearer ' + gettoken\n                },\n                body: JSON.stringify({\n                  useremail: response.data.profile.useremail,\n                  title: title,\n                  storypara: storypara\n                })\n              }).then(function (response) {\n                return response.json();\n              }).then(function (responseJson) {\n                console.log(responseJson);\n\n                if (responseJson.message === 'done') {\n                  setIsRegistraionSuccess(true);\n                  console.log('Story created Successful');\n                } else {\n                  setErrortext(responseJson.msg);\n                }\n              }).catch(function (error) {\n                console.error(error);\n              });\n            }).catch(function (error) {\n              console.log(error);\n            });\n            _context.next = 18;\n            break;\n\n          case 15:\n            _context.prev = 15;\n            _context.t0 = _context[\"catch\"](1);\n            console.log(_context.t0);\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 15]], Promise);\n  };\n\n  if (isRegistraionSuccess) {\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        backgroundColor: '#307ecc',\n        justifyContent: 'center'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 13\n      }\n    }, React.createElement(Image, {\n      style: {\n        height: 150,\n        resizeMode: 'contain',\n        alignSelf: 'center'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 17\n      }\n    }), React.createElement(Text, {\n      style: styles.successTextStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 17\n      }\n    }, \"Story created Successfully\"), React.createElement(TouchableOpacity, {\n      style: styles.buttonStyle,\n      activeOpacity: 0.5,\n      onPress: function onPress() {\n        return props.navigation.navigate('LoginScreen');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: styles.buttonTextStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 21\n      }\n    }, \"view stories now\")));\n  }\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      backgroundColor: '#307ecc'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 9\n    }\n  }, React.createElement(ScrollView, {\n    keyboardShouldPersistTaps: \"handled\",\n    contentContainerStyle: {\n      justifyContent: 'center',\n      alignContent: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 13\n    }\n  }, React.createElement(KeyboardAvoidingView, {\n    enabled: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: styles.SectionStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 21\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputStyle,\n    onChangeText: function onChangeText(title) {\n      return settitle(title);\n    },\n    underlineColorAndroid: \"#f000\",\n    placeholder: \"Enter Title\",\n    placeholderTextColor: \"#8b9cb5\",\n    returnKeyType: \"next\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 25\n    }\n  })), React.createElement(View, {\n    style: styles.SectionStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 21\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputStyle,\n    onChangeText: function onChangeText(storypara) {\n      return setstorypara(storypara);\n    },\n    underlineColorAndroid: \"#f000\",\n    placeholder: \"Enter content\",\n    placeholderTextColor: \"#8b9cb5\",\n    autoCapitalize: \"sentences\",\n    returnKeyType: \"next\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 25\n    }\n  })), errortext != '' ? React.createElement(Text, {\n    style: styles.errorTextStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 25\n    }\n  }, errortext) : null, React.createElement(TouchableOpacity, {\n    style: styles.buttonStyle,\n    activeOpacity: 0.5,\n    onPress: handleSubmitButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonTextStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 25\n    }\n  }, \"create story\")))));\n};\n\nexport default Storycreatescreen;\nvar styles = StyleSheet.create({\n  SectionStyle: {\n    flexDirection: 'row',\n    height: 40,\n    marginTop: 20,\n    marginLeft: 35,\n    marginRight: 35,\n    margin: 10\n  },\n  buttonStyle: {\n    backgroundColor: '#7DE24E',\n    borderWidth: 0,\n    color: '#FFFFFF',\n    borderColor: '#7DE24E',\n    height: 40,\n    alignItems: 'center',\n    borderRadius: 30,\n    marginLeft: 35,\n    marginRight: 35,\n    marginTop: 20,\n    marginBottom: 20\n  },\n  buttonTextStyle: {\n    color: '#FFFFFF',\n    paddingVertical: 10,\n    fontSize: 16\n  },\n  inputStyle: {\n    flex: 1,\n    color: 'white',\n    paddingLeft: 15,\n    paddingRight: 15,\n    borderWidth: 1,\n    borderRadius: 30,\n    borderColor: '#dadae8'\n  },\n  errorTextStyle: {\n    color: 'red',\n    textAlign: 'center',\n    fontSize: 14\n  },\n  successTextStyle: {\n    color: 'white',\n    textAlign: 'center',\n    fontSize: 18,\n    padding: 30\n  }\n});","map":{"version":3,"sources":["C:/Users/Admin/Desktop/MOBOMEDIA/mobotcmsdemo/Frontendtech/reactnative/story/TechVlog/Screens/storycreate.js"],"names":["React","useState","createRef","AsyncStorage","Axios","Loader","Storycreatescreen","props","username","setusername","useremail","setuseremail","title","settitle","storypara","setstorypara","errortext","setErrortext","isRegistraionSuccess","setIsRegistraionSuccess","emailInputRef","ageInputRef","addressInputRef","passwordInputRef","handleSubmitButton","getItem","users","userdatas","JSON","parse","console","log","gettoken","token","getuserid","userid","geturl","config","headers","get","then","response","data","profile","url","fetch","method","Accept","body","stringify","json","responseJson","message","msg","catch","error","flex","backgroundColor","justifyContent","height","resizeMode","alignSelf","styles","successTextStyle","buttonStyle","navigation","navigate","buttonTextStyle","alignContent","SectionStyle","inputStyle","errorTextStyle","StyleSheet","create","flexDirection","marginTop","marginLeft","marginRight","margin","borderWidth","color","borderColor","alignItems","borderRadius","marginBottom","paddingVertical","fontSize","paddingLeft","paddingRight","textAlign","padding"],"mappings":"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","sourcesContent":["// import React, { Component, useState } from 'react';\r\n// import {\r\n//     SafeAreaView, StyleSheet,\r\n//     TextInput,\r\n//     View,\r\n//     Text,\r\n//     Image,\r\n//     KeyboardAvoidingView,\r\n//     Keyboard,\r\n//     TouchableOpacity,\r\n//     ScrollView\r\n// } from 'react-native';\r\n// import AsyncStorage from '@react-native-community/async-storage';\r\n// import Axios from 'axios';\r\n\r\n// export default class Storycreatescreen extends Component {\r\n//     constructor(props) {\r\n//         super(props)\r\n//         this.state = {\r\n//             data: [],\r\n//             profiles: [],\r\n//             title: '',\r\n//             storypara: '',\r\n//             username: '',\r\n//         }\r\n//     }\r\n//     getdata = async () => {\r\n//         try {\r\n//             let users = await AsyncStorage.getItem('userdatas');\r\n//             const userdatas = JSON.parse(users);\r\n//             console.log(userdatas);\r\n//             this.setState({ data: userdatas });\r\n//             const gettoken = this.state.data.token;\r\n//             const getuserid = this.state.data.userid;\r\n//             console.log(gettoken);\r\n//             const geturl = 'http://192.168.1.4:8000/api/getuserdetails/';\r\n//             const config = {\r\n//                 headers: {\r\n//                     'content-type': 'multipart/form-data',\r\n//                     'Authorization': 'Bearer ' + gettoken,\r\n//                     'Accept': 'application/json',\r\n//                 },\r\n\r\n//             };\r\n//             Axios.get(geturl + getuserid, config)\r\n//                 .then(response => {\r\n//                     this.setState({ profiles: response.data.profile });\r\n//                     // console.log(response.data.profile.useremail)\r\n//                 })\r\n//                 .catch(function (error) {\r\n//                     console.log(error);\r\n//                 })\r\n//         } catch (e) {\r\n//             // error reading value\r\n//             console.log(e);\r\n//         }\r\n//     }\r\n//     componentDidMount() {\r\n//         // setTimeout(() => {\r\n//         //   this.setState({favoritecolor: \"yellow\"})\r\n//         // alert('hello*********')\r\n//         this.getdata();\r\n//         // }, 1000)\r\n//     }\r\n//     poststory = () => {\r\n//         //Show Loader\r\n//         // setLoading(true);\r\n//         const url = 'http://192.168.1.4:8000/api/createstory';\r\n//         const  title  = this.state;\r\n//         const storypara  = this.state;\r\n//         const username = this.state.profiles.username;\r\n//         const gettoken = this.state.data.token;\r\n//         console.log(this.state.title);\r\n//         console.log(this.state.storypara);\r\n//         console.log(username);\r\n//         fetch(url, {\r\n//             method: 'POST',\r\n//             headers: {\r\n//                 'content-type': 'multipart/form-data',\r\n//                 'Authorization': 'Bearer ' + gettoken,\r\n//                 'Accept': 'application/json',\r\n//             },\r\n//             body: JSON.stringify({\r\n//                 username: username,\r\n//                 // useremail: this.state.profiles.useremail,\r\n//                 title: title,\r\n//                 storypara: storypara\r\n//             })\r\n//         })\r\n//             .then((response) => response.json())\r\n//             .then((responseJson) => {\r\n//                 //Hide Loader\r\n//                 // setLoading(false);\r\n//                 console.log(responseJson);\r\n//                 if (responseJson.message === 'done') {\r\n//                     setIsRegistraionSuccess(true);\r\n//                     console.log(\r\n//                         'Story posted Successful'\r\n//                     );\r\n//                 } else {\r\n//                     setErrortext(responseJson.msg);\r\n//                 }\r\n//             })\r\n//             .catch((error) => {\r\n//                 //Hide Loader\r\n//                 // setLoading(false);\r\n//                 console.error(error);\r\n//             });\r\n//     };\r\n//     render() {\r\n//         return (\r\n//             <SafeAreaView style={{ flex: 1 }}>\r\n//                 {/* <View style={{ flex: 1 }}> */}\r\n//                 {/* <Loader loading={loading} /> */}\r\n//                 <ScrollView\r\n//                     keyboardShouldPersistTaps=\"handled\"\r\n//                     contentContainerStyle={{\r\n//                         justifyContent: 'center',\r\n//                         alignContent: 'center',\r\n//                     }}>\r\n\r\n//                     <KeyboardAvoidingView enabled>\r\n//                         <View style={styles.SectionStyle}>\r\n//                             <TextInput\r\n//                                 style={styles.hiddenInput}\r\n//                                 underlineColorAndroid=\"#f000\"\r\n//                                 placeholder=\"Enter Name\"\r\n//                                 defaultValue={this.state.profiles.username}\r\n//                                 placeholderTextColor=\"#8b9cb5\"\r\n//                                 autoCapitalize=\"sentences\"\r\n//                                 returnKeyType=\"next\"\r\n//                             />\r\n//                         </View>\r\n//                         {/* <View style={styles.SectionStyle}>\r\n//                                 <TextInput\r\n//                                     style={styles.hiddenInput}\r\n//                                     onChangeText={(useremail) => setuseremail(useremail)}\r\n//                                     underlineColorAndroid=\"#f000\"\r\n//                                     placeholder=\"Enter Email\"\r\n//                                     defaultValue={this.state.profiles.useremail}\r\n//                                     placeholderTextColor=\"#8b9cb5\"\r\n//                                     keyboardType=\"email-address\"\r\n//                                     returnKeyType=\"next\"\r\n//                                 />\r\n//                             </View> */}\r\n//                         <View style={styles.SectionStyle}>\r\n//                             <TextInput\r\n//                                 style={styles.inputStyle}\r\n//                                 onChangeText={title => this.setState({ title })}\r\n//                                 underlineColorAndroid=\"#f000\"\r\n//                                 placeholder=\"Enter story title\"\r\n//                                 placeholderTextColor=\"#8b9cb5\"\r\n//                                 returnKeyType=\"next\"\r\n//                             />\r\n//                         </View>\r\n//                         <View style={styles.SectionStyle}>\r\n//                             <TextInput\r\n//                                 style={styles.inputStyle}\r\n//                                 onChangeText={storypara => this.setState({ storypara })}\r\n//                                 underlineColorAndroid=\"#f000\"\r\n//                                 placeholder=\"Enter content of story\"\r\n//                                 placeholderTextColor=\"#8b9cb5\"\r\n//                                 autoCapitalize=\"sentences\"\r\n//                                 returnKeyType=\"next\"\r\n//                                 blurOnSubmit={false}\r\n//                             />\r\n//                         </View>\r\n//                         {/* {errortext != '' ? (\r\n//                                 <Text style={styles.errorTextStyle}>\r\n//                                     {errortext}\r\n//                                 </Text>\r\n//                             ) : null} */}\r\n//                         <TouchableOpacity\r\n//                             style={styles.buttonStyle}\r\n//                             activeOpacity={0.5} onPress={this.poststory}>\r\n//                             <Text style={styles.buttonTextStyle}>post now</Text>\r\n//                         </TouchableOpacity>\r\n//                     </KeyboardAvoidingView>\r\n//                 </ScrollView>\r\n//                 {/* </View>    \r\n//                         </SafeAreaView> */}\r\n//             </SafeAreaView>\r\n//         )\r\n//     }\r\n\r\n// }\r\n\r\n// const styles = StyleSheet.create({\r\n//     SectionStyle: {\r\n//         flexDirection: 'row',\r\n//         height: 40,\r\n//         marginTop: 20,\r\n//         marginLeft: 35,\r\n//         marginRight: 35,\r\n//         margin: 10,\r\n//     },\r\n//     buttonStyle: {\r\n//         backgroundColor: '#ff4f81',\r\n//         borderWidth: 0,\r\n//         color: '#FFFFFF',\r\n//         borderColor: '#7DE24E',\r\n//         height: 40,\r\n//         alignItems: 'center',\r\n//         borderRadius: 30,\r\n//         marginLeft: 35,\r\n//         marginRight: 35,\r\n//         marginTop: 20,\r\n//         marginBottom: 20,\r\n//     },\r\n//     buttonTextStyle: {\r\n//         color: '#FFFFFF',\r\n//         paddingVertical: 10,\r\n//         fontSize: 16,\r\n//     },\r\n//     inputStyle: {\r\n//         flex: 1,\r\n//         color: 'black',\r\n//         paddingLeft: 15,\r\n//         paddingRight: 15,\r\n//         borderWidth: 1,\r\n//         borderRadius: 30,\r\n//         borderColor: '#dadae8',\r\n//     },\r\n//     errorTextStyle: {\r\n//         color: 'red',\r\n//         textAlign: 'center',\r\n//         fontSize: 14,\r\n//     },\r\n//     successTextStyle: {\r\n//         color: 'white',\r\n//         textAlign: 'center',\r\n//         fontSize: 18,\r\n//         padding: 30,\r\n//     },\r\n//     hiddenInput: {\r\n//         width: 0,\r\n//         height: 0,\r\n//     },\r\n// });\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState, createRef } from 'react';\r\nimport {\r\n    StyleSheet,\r\n    TextInput,\r\n    View,\r\n    Text,\r\n    Image,\r\n    KeyboardAvoidingView,\r\n    Keyboard,\r\n    TouchableOpacity,\r\n    ScrollView,\r\n} from 'react-native';\r\nimport AsyncStorage from '@react-native-community/async-storage';\r\nimport Axios from 'axios';\r\n\r\nimport Loader from './loader';\r\n\r\nconst Storycreatescreen = (props) => {\r\n    const [username, setusername] = useState('');\r\n    const [useremail, setuseremail] = useState('');\r\n    const [title, settitle] = useState('');\r\n    const [storypara, setstorypara] = useState('');\r\n    // const [password, setpassword] = useState('');\r\n    // const [loading, setLoading] = useState(false);\r\n    const [errortext, setErrortext] = useState('');\r\n    const [\r\n        isRegistraionSuccess,\r\n        setIsRegistraionSuccess\r\n    ] = useState(false);\r\n\r\n    const emailInputRef = createRef();\r\n    const ageInputRef = createRef();\r\n    const addressInputRef = createRef();\r\n    const passwordInputRef = createRef();\r\n\r\n    const handleSubmitButton = async () => {\r\n        setErrortext('');\r\n        // if (!username) {\r\n        //     alert('Please fill Name');\r\n        //     return;\r\n        // }\r\n        // if (!useremail) {\r\n        //     alert('Please fill Email');\r\n        //     return;\r\n        // }\r\n        // if (!userage) {\r\n        //     alert('Please fill Age');\r\n        //     return;\r\n        // }\r\n        // if (!useraddress) {\r\n        //     alert('Please fill Address');\r\n        //     return;\r\n        // }\r\n        // if (!password) {\r\n        //     alert('Please fill Password');\r\n        //     return;\r\n        // }\r\n        //Show Loader\r\n        // setLoading(true);\r\n        try {\r\n            let users = await AsyncStorage.getItem('userdatas');\r\n            const userdatas = JSON.parse(users);\r\n            console.log(userdatas);\r\n            // this.setState({ data: userdatas });\r\n            const gettoken = userdatas.token;\r\n            const getuserid = userdatas.userid;\r\n            console.log(gettoken);\r\n            const geturl = 'http://192.168.1.4:8000/api/getuserdetails/';\r\n            const config = {\r\n                headers: {\r\n                    'content-type': 'multipart/form-data',\r\n                    'Authorization': 'Bearer ' + gettoken,\r\n                    'Accept': 'application/json',\r\n                },\r\n\r\n            };\r\n            Axios.get(geturl + getuserid, config)\r\n                .then(response => {\r\n                    // this.setState({ profiles: response.data.profile });\r\n                    console.log(response.data.profile.useremail)\r\n                    const url = 'http://192.168.1.4:8000/api/createstory';\r\n                    fetch(url, {\r\n                        method: 'POST',\r\n                        headers: {\r\n                            Accept: 'application/json',\r\n                            'Content-Type': 'application/json',\r\n                            'Authorization': 'Bearer ' + gettoken\r\n                        },\r\n                        body: JSON.stringify({\r\n                            // username: response.data.profile.username,\r\n                            useremail: response.data.profile.useremail,\r\n                            // password: password,\r\n                            title: title,\r\n                            storypara: storypara,\r\n                        })\r\n                    })\r\n                        .then((response) => response.json())\r\n                        .then((responseJson) => {\r\n                            //Hide Loader\r\n                            // setLoading(false);\r\n                            console.log(responseJson);\r\n                            if (responseJson.message === 'done') {\r\n                                setIsRegistraionSuccess(true);\r\n                                console.log(\r\n                                    'Story created Successful'\r\n                                );\r\n                            } else {\r\n                                setErrortext(responseJson.msg);\r\n                            }\r\n                        })\r\n                        .catch((error) => {\r\n                            //Hide Loader\r\n                            // setLoading(false);\r\n                            console.error(error);\r\n                        });\r\n\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n        } \r\n        catch (e) {\r\n            // error reading value\r\n            console.log(e);\r\n        }\r\n    }\r\n    if (isRegistraionSuccess) {\r\n        return (\r\n            <View\r\n                style={{\r\n                    flex: 1,\r\n                    backgroundColor: '#307ecc',\r\n                    justifyContent: 'center',\r\n                }}>\r\n                <Image\r\n                    // source={require('../Image/success.png')}\r\n                    style={{\r\n                        height: 150,\r\n                        resizeMode: 'contain',\r\n                        alignSelf: 'center'\r\n                    }}\r\n                />\r\n                <Text style={styles.successTextStyle}>\r\n                    Story created Successfully\r\n        </Text>\r\n                <TouchableOpacity\r\n                    style={styles.buttonStyle}\r\n                    activeOpacity={0.5}\r\n                    onPress={() => props.navigation.navigate('LoginScreen')}>\r\n                    <Text style={styles.buttonTextStyle}>view stories now</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        );\r\n    }\r\n    return (\r\n        <View style={{ flex: 1, backgroundColor: '#307ecc' }}>\r\n            {/* <Loader loading={loading} /> */}\r\n            <ScrollView\r\n                keyboardShouldPersistTaps=\"handled\"\r\n                contentContainerStyle={{\r\n                    justifyContent: 'center',\r\n                    alignContent: 'center',\r\n                }}>\r\n                <KeyboardAvoidingView enabled>\r\n                    {/* <View style={styles.SectionStyle}>\r\n                        <TextInput\r\n                            style={styles.inputStyle}\r\n                            onChangeText={(username) => setusername(username)}\r\n                            underlineColorAndroid=\"#f000\"\r\n                            placeholder=\"Enter Name\"\r\n                            placeholderTextColor=\"#8b9cb5\"\r\n                            autoCapitalize=\"sentences\"\r\n                            returnKeyType=\"next\"\r\n                        />\r\n                    </View> */}\r\n                    {/* <View style={styles.SectionStyle}>\r\n                        <TextInput\r\n                            style={styles.inputStyle}\r\n                            onChangeText={(useremail) => setuseremail(useremail)}\r\n                            underlineColorAndroid=\"#f000\"\r\n                            placeholder=\"Enter Email\"\r\n                            placeholderTextColor=\"#8b9cb5\"\r\n                            keyboardType=\"email-address\"\r\n                            ref={emailInputRef}\r\n                            returnKeyType=\"next\"\r\n                        />\r\n                    </View> */}\r\n                   \r\n                    <View style={styles.SectionStyle}>\r\n                        <TextInput\r\n                            style={styles.inputStyle}\r\n                            onChangeText={(title) => settitle(title)}\r\n                            underlineColorAndroid=\"#f000\"\r\n                            placeholder=\"Enter Title\"\r\n                            placeholderTextColor=\"#8b9cb5\"\r\n                            returnKeyType=\"next\"\r\n                        />\r\n                    </View>\r\n                    <View style={styles.SectionStyle}>\r\n                        <TextInput\r\n                            style={styles.inputStyle}\r\n                            onChangeText={(storypara) =>\r\n                                setstorypara(storypara)\r\n                            }\r\n                            underlineColorAndroid=\"#f000\"\r\n                            placeholder=\"Enter content\"\r\n                            placeholderTextColor=\"#8b9cb5\"\r\n                            autoCapitalize=\"sentences\"\r\n                            returnKeyType=\"next\"\r\n                        />\r\n                    </View>\r\n                    {errortext != '' ? (\r\n                        <Text style={styles.errorTextStyle}>\r\n                            {errortext}\r\n                        </Text>\r\n                    ) : null}\r\n                    <TouchableOpacity\r\n                        style={styles.buttonStyle}\r\n                        activeOpacity={0.5}\r\n                        onPress={handleSubmitButton}>\r\n                        <Text style={styles.buttonTextStyle}>create story</Text>\r\n                    </TouchableOpacity>\r\n                </KeyboardAvoidingView>\r\n            </ScrollView>\r\n        </View>\r\n    );\r\n};\r\nexport default Storycreatescreen;\r\n\r\nconst styles = StyleSheet.create({\r\n    SectionStyle: {\r\n        flexDirection: 'row',\r\n        height: 40,\r\n        marginTop: 20,\r\n        marginLeft: 35,\r\n        marginRight: 35,\r\n        margin: 10,\r\n    },\r\n    buttonStyle: {\r\n        backgroundColor: '#7DE24E',\r\n        borderWidth: 0,\r\n        color: '#FFFFFF',\r\n        borderColor: '#7DE24E',\r\n        height: 40,\r\n        alignItems: 'center',\r\n        borderRadius: 30,\r\n        marginLeft: 35,\r\n        marginRight: 35,\r\n        marginTop: 20,\r\n        marginBottom: 20,\r\n    },\r\n    buttonTextStyle: {\r\n        color: '#FFFFFF',\r\n        paddingVertical: 10,\r\n        fontSize: 16,\r\n    },\r\n    inputStyle: {\r\n        flex: 1,\r\n        color: 'white',\r\n        paddingLeft: 15,\r\n        paddingRight: 15,\r\n        borderWidth: 1,\r\n        borderRadius: 30,\r\n        borderColor: '#dadae8',\r\n    },\r\n    errorTextStyle: {\r\n        color: 'red',\r\n        textAlign: 'center',\r\n        fontSize: 14,\r\n    },\r\n    successTextStyle: {\r\n        color: 'white',\r\n        textAlign: 'center',\r\n        fontSize: 18,\r\n        padding: 30,\r\n    },\r\n});"]},"metadata":{},"sourceType":"module"}